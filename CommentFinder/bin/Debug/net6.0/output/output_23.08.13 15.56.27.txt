Из 7 Проверенн(ых) файл(ов) найден(о) 7 файл(ов) с содержанием  [КОММЕНТАРИЕВ]

Найден(о) 2 Файл(ов) c расширением *.js
Найден(о) 1 Файл(ов) c расширением *.h
Найден(о) 3 Файл(ов) c расширением *.c
Найден(о) 1 Файл(ов) c расширением *.cs

Статистика по языкам:
JavaScript : 28,57%
C : 57,14%
C# : 14,29%

Открыт файл input\lest — копия.js  для анализа => 
В строке 0 [ //function plural(n, forms) { ]
В строке 1 [ //	return forms[n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2]; ]
В строке 2 [ //} ]
В строке 15 [ 	['рубль','рубля','рублей'],//['доллар','доллара','долларов'] или ['килограмм','килограмма','килограммов'] ]
В строке 18 [ 	['миллиард','миллиарда','миллиардов']//,['трилион',...],[] ]
Открыт файл input\lest.js  для анализа => 
В строке 0 [ //function plural(n, forms) { ]
В строке 1 [ //	return forms[n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2]; ]
В строке 2 [ //} ]
В строке 15 [ 	['рубль','рубля','рублей'],//['доллар','доллара','долларов'] или ['килограмм','килограмма','килограммов'] ]
В строке 18 [ 	['миллиард','миллиарда','миллиардов']//,['трилион',...],[] ]
Открыт файл input\Header.H  для анализа => 
В строке 5 [ // this function initializes graphics mode	 ]
В строке 6 [ // it will work only if you're using Borland C++ compiler & BGI drivers	 ]
В строке 7 [ // if you're using another compiler you should overwrite body of this function	 ]
В строке 10 [    /* request autodetection */	 ]
В строке 12 [    /* initialize graphics mode */	 ]
В строке 14 [    /* read result of initialization */	 ]
В строке 16 [    if (errorcode != grOk)    /* an error occurred */	 ]
В строке 21 [       exit(1);               /* return with error code */	 ]
В строке 24 [ // this function shuts graphics mode down	 ]
В строке 25 [ // it will work only if you're using Borland C++ compiler & BGI drivers	 ]
В строке 26 [ // if you're using another compiler you should overwrite body of this function	 ]
В строке 31 [ // this function puts pixel on the screen in (x,y) position using color 'color'	 ]
В строке 32 [ // it will work only if you're using Borland C++ compiler & BGI drivers	 ]
В строке 33 [ // if you're using another compiler you should overwrite body of this function	 ]
В строке 38 [ float const ratio=1.0; // you can change this to draw ellipses	 ]
В строке 39 [ // This function plots points that belongs to the circle	 ]
В строке 40 [ // It recieves offsets from center for the fist quadrant	 ]
В строке 41 [ // and plots symmetrical points in all four quadrants	 ]
В строке 45 [   // the distanse between start and end can be greater than 1 if ratio!=1	 ]
В строке 52 [     // plot points in all four quadrants	 ]
В строке 60 [     // plot points in all four quadrants	 ]
В строке 67 [ // This is main function that draws circle using function	 ]
В строке 71 [ //     Y    *              we start from * and increase x step by step	 ]
В строке 72 [ //          |              decreasing y when needed	 ]
В строке 73 [ //          |	 ]
В строке 74 [ //          |	 ]
В строке 75 [ // --------------------	 ]
В строке 76 [ //          |         X	 ]
В строке 77 [ //          |	 ]
В строке 78 [ //          |	 ]
В строке 79 [ //          |	 ]
В строке 81 [   delta=3-2*radius; // delta is an error	 ]
В строке 82 [   // calculate values for first quadrant	 ]
В строке 83 [   for (x=0;x<y;x++) // x is a main axe	 ]
В строке 85 [     // plot points symmetrically in all quadrants	 ]
В строке 91 [       y--; // it's time to decrease y	 ]
В строке 99 [   // initializing graphics mode	 ]
В строке 101 [   /* examples */	 ]
В строке 109 [   /* clean up */	 ]
Открыт файл input\main — копия (2).c  для анализа => 
В строке 5 [ // this function initializes graphics mode	 ]
В строке 6 [ // it will work only if you're using Borland C++ compiler & BGI drivers	 ]
В строке 7 [ // if you're using another compiler you should overwrite body of this function	 ]
В строке 10 [    /* request autodetection */	 ]
В строке 12 [    /* initialize graphics mode */	 ]
В строке 14 [    /* read result of initialization */	 ]
В строке 16 [    if (errorcode != grOk)    /* an error occurred */	 ]
В строке 21 [       exit(1);               /* return with error code */	 ]
В строке 24 [ // this function shuts graphics mode down	 ]
В строке 25 [ // it will work only if you're using Borland C++ compiler & BGI drivers	 ]
В строке 26 [ // if you're using another compiler you should overwrite body of this function	 ]
В строке 31 [ // this function puts pixel on the screen in (x,y) position using color 'color'	 ]
В строке 32 [ // it will work only if you're using Borland C++ compiler & BGI drivers	 ]
В строке 33 [ // if you're using another compiler you should overwrite body of this function	 ]
В строке 38 [ float const ratio=1.0; // you can change this to draw ellipses	 ]
В строке 39 [ // This function plots points that belongs to the circle	 ]
В строке 40 [ // It recieves offsets from center for the fist quadrant	 ]
В строке 41 [ // and plots symmetrical points in all four quadrants	 ]
В строке 45 [   // the distanse between start and end can be greater than 1 if ratio!=1	 ]
В строке 52 [     // plot points in all four quadrants	 ]
В строке 60 [     // plot points in all four quadrants	 ]
В строке 67 [ // This is main function that draws circle using function	 ]
В строке 71 [ //     Y    *              we start from * and increase x step by step	 ]
В строке 72 [ //          |              decreasing y when needed	 ]
В строке 73 [ //          |	 ]
В строке 74 [ //          |	 ]
В строке 75 [ // --------------------	 ]
В строке 76 [ //          |         X	 ]
В строке 77 [ //          |	 ]
В строке 78 [ //          |	 ]
В строке 79 [ //          |	 ]
В строке 81 [   delta=3-2*radius; // delta is an error	 ]
В строке 82 [   // calculate values for first quadrant	 ]
В строке 83 [   for (x=0;x<y;x++) // x is a main axe	 ]
В строке 85 [     // plot points symmetrically in all quadrants	 ]
В строке 91 [       y--; // it's time to decrease y	 ]
В строке 99 [   // initializing graphics mode	 ]
В строке 101 [   /* examples */	 ]
В строке 109 [   /* clean up */	 ]
Открыт файл input\main — копия.c  для анализа => 
В строке 5 [ // this function initializes graphics mode	 ]
В строке 6 [ // it will work only if you're using Borland C++ compiler & BGI drivers	 ]
В строке 7 [ // if you're using another compiler you should overwrite body of this function	 ]
В строке 10 [    /* request autodetection */	 ]
В строке 12 [    /* initialize graphics mode */	 ]
В строке 14 [    /* read result of initialization */	 ]
В строке 16 [    if (errorcode != grOk)    /* an error occurred */	 ]
В строке 21 [       exit(1);               /* return with error code */	 ]
В строке 24 [ // this function shuts graphics mode down	 ]
В строке 25 [ // it will work only if you're using Borland C++ compiler & BGI drivers	 ]
В строке 26 [ // if you're using another compiler you should overwrite body of this function	 ]
В строке 31 [ // this function puts pixel on the screen in (x,y) position using color 'color'	 ]
В строке 32 [ // it will work only if you're using Borland C++ compiler & BGI drivers	 ]
В строке 33 [ // if you're using another compiler you should overwrite body of this function	 ]
В строке 38 [ float const ratio=1.0; // you can change this to draw ellipses	 ]
В строке 39 [ // This function plots points that belongs to the circle	 ]
В строке 40 [ // It recieves offsets from center for the fist quadrant	 ]
В строке 41 [ // and plots symmetrical points in all four quadrants	 ]
В строке 45 [   // the distanse between start and end can be greater than 1 if ratio!=1	 ]
В строке 52 [     // plot points in all four quadrants	 ]
В строке 60 [     // plot points in all four quadrants	 ]
В строке 67 [ // This is main function that draws circle using function	 ]
В строке 71 [ //     Y    *              we start from * and increase x step by step	 ]
В строке 72 [ //          |              decreasing y when needed	 ]
В строке 73 [ //          |	 ]
В строке 74 [ //          |	 ]
В строке 75 [ // --------------------	 ]
В строке 76 [ //          |         X	 ]
В строке 77 [ //          |	 ]
В строке 78 [ //          |	 ]
В строке 79 [ //          |	 ]
В строке 81 [   delta=3-2*radius; // delta is an error	 ]
В строке 82 [   // calculate values for first quadrant	 ]
В строке 83 [   for (x=0;x<y;x++) // x is a main axe	 ]
В строке 85 [     // plot points symmetrically in all quadrants	 ]
В строке 91 [       y--; // it's time to decrease y	 ]
В строке 99 [   // initializing graphics mode	 ]
В строке 101 [   /* examples */	 ]
В строке 109 [   /* clean up */	 ]
Открыт файл input\main.c  для анализа => 
В строке 5 [ // this function initializes graphics mode	 ]
В строке 6 [ // it will work only if you're using Borland C++ compiler & BGI drivers	 ]
В строке 7 [ // if you're using another compiler you should overwrite body of this function	 ]
В строке 10 [    /* request autodetection */	 ]
В строке 12 [    /* initialize graphics mode */	 ]
В строке 14 [    /* read result of initialization */	 ]
В строке 16 [    if (errorcode != grOk)    /* an error occurred */	 ]
В строке 21 [       exit(1);               /* return with error code */	 ]
В строке 24 [ // this function shuts graphics mode down	 ]
В строке 25 [ // it will work only if you're using Borland C++ compiler & BGI drivers	 ]
В строке 26 [ // if you're using another compiler you should overwrite body of this function	 ]
В строке 31 [ // this function puts pixel on the screen in (x,y) position using color 'color'	 ]
В строке 32 [ // it will work only if you're using Borland C++ compiler & BGI drivers	 ]
В строке 33 [ // if you're using another compiler you should overwrite body of this function	 ]
В строке 38 [ float const ratio=1.0; // you can change this to draw ellipses	 ]
В строке 39 [ // This function plots points that belongs to the circle	 ]
В строке 40 [ // It recieves offsets from center for the fist quadrant	 ]
В строке 41 [ // and plots symmetrical points in all four quadrants	 ]
В строке 45 [   // the distanse between start and end can be greater than 1 if ratio!=1	 ]
В строке 52 [     // plot points in all four quadrants	 ]
В строке 60 [     // plot points in all four quadrants	 ]
В строке 67 [ // This is main function that draws circle using function	 ]
В строке 71 [ //     Y    *              we start from * and increase x step by step	 ]
В строке 72 [ //          |              decreasing y when needed	 ]
В строке 73 [ //          |	 ]
В строке 74 [ //          |	 ]
В строке 75 [ // --------------------	 ]
В строке 76 [ //          |         X	 ]
В строке 77 [ //          |	 ]
В строке 78 [ //          |	 ]
В строке 79 [ //          |	 ]
В строке 81 [   delta=3-2*radius; // delta is an error	 ]
В строке 82 [   // calculate values for first quadrant	 ]
В строке 83 [   for (x=0;x<y;x++) // x is a main axe	 ]
В строке 85 [     // plot points symmetrically in all quadrants	 ]
В строке 91 [       y--; // it's time to decrease y	 ]
В строке 99 [   // initializing graphics mode	 ]
В строке 101 [   /* examples */	 ]
В строке 109 [   /* clean up */	 ]
Открыт файл input\PrintDocument.cs  для анализа => 
В строке 1 [ //graphics.PageUnit = GraphicsUnit.Point; ]
В строке 2 [ //graphics.PageUnit = GraphicsUnit.Millimeter; ]
В строке 3 [ //graphics.PageUnit = GraphicsUnit.Inch; ]
В строке 5 [ // Счетчик строк ]
В строке 7 [ // Строка текста ]
В строке 11 [ // Высота шрифта в выбранных единицах объекта graphics. ]
В строке 13 [ // Количество возможных строк для одной страницы. ]
В строке 24 [         // Ширина пера 1мм ]
В строке 32 [         // Ширина пера 1мм ]
В строке 45 [         // Ширина пера 1мм ]
В строке 55 [         // Ширина пера 1мм ]
В строке 69 [ // Печать последовательно всех строк файла на одной странице. ]
В строке 73 [     // Координата позиции строки по высоте от верхнего края страницы. ]
В строке 75 [     // ]
В строке 83 [     // ]

