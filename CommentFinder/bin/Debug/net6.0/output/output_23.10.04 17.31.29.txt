Total File  found in directory: 849
Total Extention All found in directory: 66
Search 1 extension file .rar
Search 5 extension file .sql
Search 57 extension file .exe
Search 7 extension file .ini
Search 48 extension file .dll
Search 2 extension file .reg
Search 24 extension file .txt
Search 27 extension file .pdb
Search 3 extension file .AE
Search 3 extension file .EA
Search 1 extension file .doc
Search 1 extension file .cat
Search 2 extension file .inf
Search 1 extension file .sys
Search 13 extension file .bat
Search 2 extension file .sdf
Search 17 extension file .sln
Search 25 extension file .suo
Search 33 extension file .cpp
Search 17 extension file .vcxproj
Search 10 extension file .filters
Search 151 extension file .h
Search 17 extension file .lib
Search 11 extension file .user
Search 3 extension file .zip
Search 4 extension file .gz
Search 2 extension file .msi
Search 3 extension file .gitignore
Search 69 extension file .c
Search 7 extension file 
Search 7 extension file .ps1
Search 1 extension file .ac
Search 1 extension file .am
Search 5 extension file .def
Search 2 extension file .orig
Search 1 extension file .dsp
Search 3 extension file .rc
Search 1 extension file .vcproj
Search 1 extension file .XML
Search 3 extension file .mak
Search 21 extension file .config
Search 133 extension file .cs
Search 7 extension file .csproj
Search 2 extension file .ico
Search 1 extension file .DBF
Search 1 extension file .Filters
Search 1 extension file .cnf
Search 1 extension file .htm
Search 2 extension file .m4
Search 6 extension file .html
Search 2 extension file .bmp
Search 1 extension file .rtf
Search 1 extension file .vbs
Search 6 extension file .wxs
Search 1 extension file .db
Search 1 extension file .xml
Search 2 extension file .props
Search 4 extension file .log
Search 4 extension file .idb
Search 2 extension file .chm
Search 1 extension file .wixproj
Search 23 extension file .out
Search 7 extension file .manifest
Search 12 extension file .cache
Search 12 extension file .tlog
Search 4 extension file .lastbuildstate

In 397 Checked file found 304 with content [СOMMENT]

Search extension:
Search 6 File with extension *.html
Search 151 File with extension *.h
Search 69 File with extension *.c
Search 133 File with extension *.cs
Search 33 File with extension *.cpp
Search 5 File with extension *.sql

Statistics by language:
HTML : 1,51%
C : 55,42%
C# : 33,5%
C++ : 8,31%
SQL : 1,26%

==================================================================================================================
Search 6 file with extension *.html
==================================================================================================================
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\docs\config-opt.html  for analysis => 
In line 0  <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"> 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\docs\config.html  for analysis => 
In line 0  <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"> 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\docs\release-7.3.html  for analysis => 
In line 0  <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"> 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\docs\release.html  for analysis => 
In line 0  <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"> 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\docs\unix-compilation.html  for analysis => 
In line 0  <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"> 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\docs\win32-compilation.html  for analysis => 
In line 0  <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"> 
==================================================================================================================
Search 151 file with extension *.h
==================================================================================================================
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\guard\eop01cda\eop01lib.h  for analysis => 
In file eop01lib.h not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\guard\eop01cda\GExport4.h  for analysis => 
In line 39  //namespace GuardNT_30 { 
In line 41  /////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 42  // Определения 
In line 43  /////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 44  // 
In line 45  // Структура ключевой информации 
In line 46  // 
In line 48      UCHAR    UserName[16];		// Имя пользователя 
In line 49      UCHAR    Password[16];		// Пароль пользователя 
In line 50      UCHAR    DomainName[16];	// Имя домена 
In line 51      ULONG    IdentType;			// Тип идентификатора 
In line 52      UCHAR    IdentSerNum[8];	// Номер идентификатора 
In line 54  // 
In line 55  // Гриф секретности 
In line 56  // 
In line 64  // 
In line 65  // Режим выполнения приложений 
In line 66  // 
In line 69      ExNormal,					// Обычный режим 
In line 70      ExSuper,					// Супер - процесс 
In line 71      ExInstall					// Инсталлятор 
In line 73  // 
In line 74  // Параметры запуска приложений 
In line 75  // 
In line 77      ParamNone,				// Не запрашивать текущий допуск 
In line 78      ParamDefault,			// Назначить допуск по умолчанию 
In line 79  					// Для неисполняемых файлов разрешить 
In line 80  					// сквозную запись по дискреционным правилам 
In line 81      ParamStart,				// Запросить допуск при старте 
In line 82      ParamCreateWindow			// Запросить допуск при создании окна 
In line 84  // 
In line 85  // Параметры для неисполняемых файлов 
In line 86  // 
In line 87  // Обход перекрестной проверки 
In line 88  // 
In line 90  // Гриф без проверки 
In line 92  // Виртуализация вложенных объектов 
In line 94  // 
In line 95  // Параметры дополнительного аудита 
In line 96  // 
In line 98      AuditNone,					// Нет аудита 
In line 99      AuditSuccess,				// Аудит успеха 
In line 100      AuditDenied,				// Аудит отказов 
In line 101      AuditFull					// Полный аудит 
In line 103  // 
In line 104  // Атрибуты безопасности файлов и каталогов 
In line 105  // 
In line 109        UCHAR Grif : 2;			// Гриф - для неисполняемых файлов 
In line 110  					// Допуск - для исполняемых файлов 
In line 111        UCHAR ExMode : 2;			// Режим запуска исполняемых файлов 
In line 112        UCHAR Param : 2;			// Не проверять доступ на запись к родительсим папкам 
In line 113  					// Запрашивать текущий допуск при старте 
In line 114        UCHAR Audit : 2;			// Дополнительный аудит 
In line 117  // 
In line 118  // Атрибуты проверки целостности 
In line 119  // 
In line 123  // Параметры проверки целостности 
In line 124        UCHAR CA_DateTime : 1;		// Проверка даты и времени изменения 
In line 125        UCHAR CA_Size : 1;		// Проверка размера файла 
In line 126        UCHAR CA_Crc : 1;			// Проверка по контрольной сумме 
In line 127  // Условия проверки целостности 
In line 128        UCHAR CA_Auto : 1;		// Проверять автоматически 
In line 129  // Действия в случае нарушения целостности 
In line 130        UCHAR CA_HaltOnError : 1;		// Останов системы 
In line 131        UCHAR CA_BlockFile: 1;		// Блокирование файла 
In line 132        UCHAR CA_AutoUpdate: 1;		// Автоматически обновлять CRC 
In line 133  // Признак для файлов системы защиты 
In line 134        UCHAR CA_SZI: 1;			// Файл системы защиты 
In line 137  // 
In line 138  // Коды событий контроля целостности 
In line 139  // 
In line 141      NotRequired,			// Проверка не требуется 
In line 142      AllRight,				// Все в порядке 
In line 143      BadCrc,					// Ошибка контрольной суммы 
In line 144      BadDateTime,			// Несовпадение даты изменения 
In line 145      BadSize,				// Несовпадение размера файла 
In line 146      FileNotFound,			// Файл не найден 
In line 147      OtherError,				// Ошибки при проверке целостности 
In line 148      GuardError				// Нарушение целостности файла СЗИ 
In line 187  // 
In line 188  // Типы идентификаторов 
In line 189  // 
In line 201  // 
In line 202  // Дополнительные параметры SECURITY_INFORMATION 
In line 203  // 
In line 214  //////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 215  // Функции 
In line 216  //////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 218  // 
In line 219  // Определить, установлена ли СЗИ "Страж NT" и, если установлена, ее версию 
In line 220  // 
In line 222  // 
In line 223  // Определить пользователя, вошедшего на компьютер 
In line 224  // 
In line 226  // 
In line 227  // Запустить процесс с текущим допуском 
In line 228  // 
In line 229  DWORD WINAPI GuardCreateProcess(LPCTSTR lpApplicationName,	// Имя запускаемого модуля 
In line 230  							LPTSTR lpCommandLine,									// Командная строка 
In line 231  							LPSECURITY_ATTRIBUTES lpProcessAttributes,				// Атрибуты безопасности процесса 
In line 232  							LPSECURITY_ATTRIBUTES lpThreadAttributes,				// Атрибуты безопасности потока 
In line 233  							BOOL bInheritHandles,									// Флаг наследования хэндла 
In line 234  							DWORD dwCreationFlags,									// Флаги создания 
In line 235  							LPVOID lpEnvironment,									// Новый блок переменных окружения 
In line 236  							LPCTSTR lpCurrentDirectory,								// Текущая папка 
In line 237  							LPSTARTUPINFO lpStartupInfo,							// Стартовая информация 
In line 238  							LPPROCESS_INFORMATION lpProcessInformation,				// Информация о новом процессе 
In line 239  							GRIF_TYPE CurrentGrif);									// Текущий гриф 
In line 240  // 
In line 241  // Установить/снять режим администрирования 
In line 242  // 
In line 244  // 
In line 245  // Определить, установлен ли режим администрирования 
In line 246  // 
In line 248  // 
In line 249  // Получить значение текущего и максимального допуска процесса 
In line 250  // 
In line 251  BOOLEAN WINAPI GuardGetCurrentGrif(HANDLE hProcess,				// Имя процесса 
In line 252  				PDWORD CurrentGrif,										// Текущий допуск 
In line 253  				PDWORD MaxGrif);										// Максимальный допуск 
In line 254  // 
In line 255  // Установить значение текущего допуска текущего процесса 
In line 256  // 
In line 257  BOOLEAN WINAPI GuardSetCurrentGrif(IN HANDLE hProcess, GRIF_TYPE CurrentGrif);		// Текущий допуск 
In line 259  } // extern "C" 
In line 260  //////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 261  // Классы 
In line 262  //////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 263  // 
In line 264  // Класс безопасности файлового объекта 
In line 265  // 
In line 276  	// Получить SecAttr файла или папки 
In line 282  	// Установить SecAttr на файл или папку 
In line 288  	// Получить CrcAttr на файл 
In line 291  	// Установить CrcAttr на файл 
In line 294  	// Проверить целостность файла 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\guard\eop01cda\stdafx.h  for analysis => 
In line 0  // stdafx.h: включаемый файл для стандартных системных включаемых файлов 
In line 1  // или включаемых файлов для конкретного проекта, которые часто используются, но 
In line 2  // не часто изменяются 
In line 3  // 
In line 14  // TODO: Установите здесь ссылки на дополнительные заголовки, требующиеся для программы 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\guard\eop01cda\targetver.h  for analysis => 
In line 2  // Включение SDKDDKVer.h обеспечивает определение самой последней доступной платформы Windows. 
In line 4  // Если требуется выполнить сборку приложения для предыдущей версии Windows, включите WinSDKVer.h и 
In line 5  // задайте для макроса _WIN32_WINNT значение поддерживаемой платформы перед включением SDKDDKVer.h. 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\guard\eop01cdb\eop01lib.h  for analysis => 
In file eop01lib.h not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\guard\eop01cdb\GExport4.h  for analysis => 
In line 39  //namespace GuardNT_30 { 
In line 41  /////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 42  // Определения 
In line 43  /////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 44  // 
In line 45  // Структура ключевой информации 
In line 46  // 
In line 48      UCHAR    UserName[16];		// Имя пользователя 
In line 49      UCHAR    Password[16];		// Пароль пользователя 
In line 50      UCHAR    DomainName[16];	// Имя домена 
In line 51      ULONG    IdentType;			// Тип идентификатора 
In line 52      UCHAR    IdentSerNum[8];	// Номер идентификатора 
In line 54  // 
In line 55  // Гриф секретности 
In line 56  // 
In line 64  // 
In line 65  // Режим выполнения приложений 
In line 66  // 
In line 69      ExNormal,					// Обычный режим 
In line 70      ExSuper,					// Супер - процесс 
In line 71      ExInstall					// Инсталлятор 
In line 73  // 
In line 74  // Параметры запуска приложений 
In line 75  // 
In line 77      ParamNone,				// Не запрашивать текущий допуск 
In line 78      ParamDefault,			// Назначить допуск по умолчанию 
In line 79  					// Для неисполняемых файлов разрешить 
In line 80  					// сквозную запись по дискреционным правилам 
In line 81      ParamStart,				// Запросить допуск при старте 
In line 82      ParamCreateWindow			// Запросить допуск при создании окна 
In line 84  // 
In line 85  // Параметры для неисполняемых файлов 
In line 86  // 
In line 87  // Обход перекрестной проверки 
In line 88  // 
In line 90  // Гриф без проверки 
In line 92  // Виртуализация вложенных объектов 
In line 94  // 
In line 95  // Параметры дополнительного аудита 
In line 96  // 
In line 98      AuditNone,					// Нет аудита 
In line 99      AuditSuccess,				// Аудит успеха 
In line 100      AuditDenied,				// Аудит отказов 
In line 101      AuditFull					// Полный аудит 
In line 103  // 
In line 104  // Атрибуты безопасности файлов и каталогов 
In line 105  // 
In line 109        UCHAR Grif : 2;			// Гриф - для неисполняемых файлов 
In line 110  					// Допуск - для исполняемых файлов 
In line 111        UCHAR ExMode : 2;			// Режим запуска исполняемых файлов 
In line 112        UCHAR Param : 2;			// Не проверять доступ на запись к родительсим папкам 
In line 113  					// Запрашивать текущий допуск при старте 
In line 114        UCHAR Audit : 2;			// Дополнительный аудит 
In line 117  // 
In line 118  // Атрибуты проверки целостности 
In line 119  // 
In line 123  // Параметры проверки целостности 
In line 124        UCHAR CA_DateTime : 1;		// Проверка даты и времени изменения 
In line 125        UCHAR CA_Size : 1;		// Проверка размера файла 
In line 126        UCHAR CA_Crc : 1;			// Проверка по контрольной сумме 
In line 127  // Условия проверки целостности 
In line 128        UCHAR CA_Auto : 1;		// Проверять автоматически 
In line 129  // Действия в случае нарушения целостности 
In line 130        UCHAR CA_HaltOnError : 1;		// Останов системы 
In line 131        UCHAR CA_BlockFile: 1;		// Блокирование файла 
In line 132        UCHAR CA_AutoUpdate: 1;		// Автоматически обновлять CRC 
In line 133  // Признак для файлов системы защиты 
In line 134        UCHAR CA_SZI: 1;			// Файл системы защиты 
In line 137  // 
In line 138  // Коды событий контроля целостности 
In line 139  // 
In line 141      NotRequired,			// Проверка не требуется 
In line 142      AllRight,				// Все в порядке 
In line 143      BadCrc,					// Ошибка контрольной суммы 
In line 144      BadDateTime,			// Несовпадение даты изменения 
In line 145      BadSize,				// Несовпадение размера файла 
In line 146      FileNotFound,			// Файл не найден 
In line 147      OtherError,				// Ошибки при проверке целостности 
In line 148      GuardError				// Нарушение целостности файла СЗИ 
In line 187  // 
In line 188  // Типы идентификаторов 
In line 189  // 
In line 201  // 
In line 202  // Дополнительные параметры SECURITY_INFORMATION 
In line 203  // 
In line 214  //////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 215  // Функции 
In line 216  //////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 218  // 
In line 219  // Определить, установлена ли СЗИ "Страж NT" и, если установлена, ее версию 
In line 220  // 
In line 222  // 
In line 223  // Определить пользователя, вошедшего на компьютер 
In line 224  // 
In line 226  // 
In line 227  // Запустить процесс с текущим допуском 
In line 228  // 
In line 229  DWORD WINAPI GuardCreateProcess(LPCTSTR lpApplicationName,	// Имя запускаемого модуля 
In line 230  							LPTSTR lpCommandLine,									// Командная строка 
In line 231  							LPSECURITY_ATTRIBUTES lpProcessAttributes,				// Атрибуты безопасности процесса 
In line 232  							LPSECURITY_ATTRIBUTES lpThreadAttributes,				// Атрибуты безопасности потока 
In line 233  							BOOL bInheritHandles,									// Флаг наследования хэндла 
In line 234  							DWORD dwCreationFlags,									// Флаги создания 
In line 235  							LPVOID lpEnvironment,									// Новый блок переменных окружения 
In line 236  							LPCTSTR lpCurrentDirectory,								// Текущая папка 
In line 237  							LPSTARTUPINFO lpStartupInfo,							// Стартовая информация 
In line 238  							LPPROCESS_INFORMATION lpProcessInformation,				// Информация о новом процессе 
In line 239  							GRIF_TYPE CurrentGrif);									// Текущий гриф 
In line 240  // 
In line 241  // Установить/снять режим администрирования 
In line 242  // 
In line 244  // 
In line 245  // Определить, установлен ли режим администрирования 
In line 246  // 
In line 248  // 
In line 249  // Получить значение текущего и максимального допуска процесса 
In line 250  // 
In line 251  BOOLEAN WINAPI GuardGetCurrentGrif(HANDLE hProcess,				// Имя процесса 
In line 252  				PDWORD CurrentGrif,										// Текущий допуск 
In line 253  				PDWORD MaxGrif);										// Максимальный допуск 
In line 254  // 
In line 255  // Установить значение текущего допуска текущего процесса 
In line 256  // 
In line 257  BOOLEAN WINAPI GuardSetCurrentGrif(IN HANDLE hProcess, GRIF_TYPE CurrentGrif);		// Текущий допуск 
In line 259  } // extern "C" 
In line 260  //////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 261  // Классы 
In line 262  //////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 263  // 
In line 264  // Класс безопасности файлового объекта 
In line 265  // 
In line 276  	// Получить SecAttr файла или папки 
In line 282  	// Установить SecAttr на файл или папку 
In line 288  	// Получить CrcAttr на файл 
In line 291  	// Установить CrcAttr на файл 
In line 294  	// Проверить целостность файла 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\guard\eop01cdb\stdafx.h  for analysis => 
In line 0  // stdafx.h: включаемый файл для стандартных системных включаемых файлов 
In line 1  // или включаемых файлов для конкретного проекта, которые часто используются, но 
In line 2  // не часто изменяются 
In line 3  // 
In line 14  // TODO: Установите здесь ссылки на дополнительные заголовки, требующиеся для программы 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\guard\eop01cdb\targetver.h  for analysis => 
In line 2  // Включение SDKDDKVer.h обеспечивает определение самой последней доступной платформы Windows. 
In line 4  // Если требуется выполнить сборку приложения для предыдущей версии Windows, включите WinSDKVer.h и 
In line 5  // задайте для макроса _WIN32_WINNT значение поддерживаемой платформы перед включением SDKDDKVer.h. 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\guard\eop01cdc\eop01lib.h  for analysis => 
In file eop01lib.h not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\guard\eop01cdc\stdafx.h  for analysis => 
In line 0  // stdafx.h: включаемый файл для стандартных системных включаемых файлов 
In line 1  // или включаемых файлов для конкретного проекта, которые часто используются, но 
In line 2  // не часто изменяются 
In line 3  // 
In line 14  // TODO: Установите здесь ссылки на дополнительные заголовки, требующиеся для программы 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\guard\eop01cdc\targetver.h  for analysis => 
In line 2  // Включение SDKDDKVer.h обеспечивает определение самой последней доступной платформы Windows. 
In line 4  // Если требуется выполнить сборку приложения для предыдущей версии Windows, включите WinSDKVer.h и 
In line 5  // задайте для макроса _WIN32_WINNT значение поддерживаемой платформы перед включением SDKDDKVer.h. 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\guard\eop01cdf\eop01lib.h  for analysis => 
In file eop01lib.h not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\guard\eop01cdf\GExport4.h  for analysis => 
In line 39  //namespace GuardNT_30 { 
In line 41  /////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 42  // Определения 
In line 43  /////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 44  // 
In line 45  // Структура ключевой информации 
In line 46  // 
In line 48      UCHAR    UserName[16];		// Имя пользователя 
In line 49      UCHAR    Password[16];		// Пароль пользователя 
In line 50      UCHAR    DomainName[16];	// Имя домена 
In line 51      ULONG    IdentType;			// Тип идентификатора 
In line 52      UCHAR    IdentSerNum[8];	// Номер идентификатора 
In line 54  // 
In line 55  // Гриф секретности 
In line 56  // 
In line 64  // 
In line 65  // Режим выполнения приложений 
In line 66  // 
In line 69      ExNormal,					// Обычный режим 
In line 70      ExSuper,					// Супер - процесс 
In line 71      ExInstall					// Инсталлятор 
In line 73  // 
In line 74  // Параметры запуска приложений 
In line 75  // 
In line 77      ParamNone,				// Не запрашивать текущий допуск 
In line 78      ParamDefault,			// Назначить допуск по умолчанию 
In line 79  					// Для неисполняемых файлов разрешить 
In line 80  					// сквозную запись по дискреционным правилам 
In line 81      ParamStart,				// Запросить допуск при старте 
In line 82      ParamCreateWindow			// Запросить допуск при создании окна 
In line 84  // 
In line 85  // Параметры для неисполняемых файлов 
In line 86  // 
In line 87  // Обход перекрестной проверки 
In line 88  // 
In line 90  // Гриф без проверки 
In line 92  // Виртуализация вложенных объектов 
In line 94  // 
In line 95  // Параметры дополнительного аудита 
In line 96  // 
In line 98      AuditNone,					// Нет аудита 
In line 99      AuditSuccess,				// Аудит успеха 
In line 100      AuditDenied,				// Аудит отказов 
In line 101      AuditFull					// Полный аудит 
In line 103  // 
In line 104  // Атрибуты безопасности файлов и каталогов 
In line 105  // 
In line 109        UCHAR Grif : 2;			// Гриф - для неисполняемых файлов 
In line 110  					// Допуск - для исполняемых файлов 
In line 111        UCHAR ExMode : 2;			// Режим запуска исполняемых файлов 
In line 112        UCHAR Param : 2;			// Не проверять доступ на запись к родительсим папкам 
In line 113  					// Запрашивать текущий допуск при старте 
In line 114        UCHAR Audit : 2;			// Дополнительный аудит 
In line 117  // 
In line 118  // Атрибуты проверки целостности 
In line 119  // 
In line 123  // Параметры проверки целостности 
In line 124        UCHAR CA_DateTime : 1;		// Проверка даты и времени изменения 
In line 125        UCHAR CA_Size : 1;		// Проверка размера файла 
In line 126        UCHAR CA_Crc : 1;			// Проверка по контрольной сумме 
In line 127  // Условия проверки целостности 
In line 128        UCHAR CA_Auto : 1;		// Проверять автоматически 
In line 129  // Действия в случае нарушения целостности 
In line 130        UCHAR CA_HaltOnError : 1;		// Останов системы 
In line 131        UCHAR CA_BlockFile: 1;		// Блокирование файла 
In line 132        UCHAR CA_AutoUpdate: 1;		// Автоматически обновлять CRC 
In line 133  // Признак для файлов системы защиты 
In line 134        UCHAR CA_SZI: 1;			// Файл системы защиты 
In line 137  // 
In line 138  // Коды событий контроля целостности 
In line 139  // 
In line 141      NotRequired,			// Проверка не требуется 
In line 142      AllRight,				// Все в порядке 
In line 143      BadCrc,					// Ошибка контрольной суммы 
In line 144      BadDateTime,			// Несовпадение даты изменения 
In line 145      BadSize,				// Несовпадение размера файла 
In line 146      FileNotFound,			// Файл не найден 
In line 147      OtherError,				// Ошибки при проверке целостности 
In line 148      GuardError				// Нарушение целостности файла СЗИ 
In line 187  // 
In line 188  // Типы идентификаторов 
In line 189  // 
In line 201  // 
In line 202  // Дополнительные параметры SECURITY_INFORMATION 
In line 203  // 
In line 214  //////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 215  // Функции 
In line 216  //////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 218  // 
In line 219  // Определить, установлена ли СЗИ "Страж NT" и, если установлена, ее версию 
In line 220  // 
In line 222  // 
In line 223  // Определить пользователя, вошедшего на компьютер 
In line 224  // 
In line 226  // 
In line 227  // Запустить процесс с текущим допуском 
In line 228  // 
In line 229  DWORD WINAPI GuardCreateProcess(LPCTSTR lpApplicationName,	// Имя запускаемого модуля 
In line 230  							LPTSTR lpCommandLine,									// Командная строка 
In line 231  							LPSECURITY_ATTRIBUTES lpProcessAttributes,				// Атрибуты безопасности процесса 
In line 232  							LPSECURITY_ATTRIBUTES lpThreadAttributes,				// Атрибуты безопасности потока 
In line 233  							BOOL bInheritHandles,									// Флаг наследования хэндла 
In line 234  							DWORD dwCreationFlags,									// Флаги создания 
In line 235  							LPVOID lpEnvironment,									// Новый блок переменных окружения 
In line 236  							LPCTSTR lpCurrentDirectory,								// Текущая папка 
In line 237  							LPSTARTUPINFO lpStartupInfo,							// Стартовая информация 
In line 238  							LPPROCESS_INFORMATION lpProcessInformation,				// Информация о новом процессе 
In line 239  							GRIF_TYPE CurrentGrif);									// Текущий гриф 
In line 240  // 
In line 241  // Установить/снять режим администрирования 
In line 242  // 
In line 244  // 
In line 245  // Определить, установлен ли режим администрирования 
In line 246  // 
In line 248  // 
In line 249  // Получить значение текущего и максимального допуска процесса 
In line 250  // 
In line 251  BOOLEAN WINAPI GuardGetCurrentGrif(HANDLE hProcess,				// Имя процесса 
In line 252  				PDWORD CurrentGrif,										// Текущий допуск 
In line 253  				PDWORD MaxGrif);										// Максимальный допуск 
In line 254  // 
In line 255  // Установить значение текущего допуска текущего процесса 
In line 256  // 
In line 257  BOOLEAN WINAPI GuardSetCurrentGrif(IN HANDLE hProcess, GRIF_TYPE CurrentGrif);		// Текущий допуск 
In line 259  } // extern "C" 
In line 260  //////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 261  // Классы 
In line 262  //////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 263  // 
In line 264  // Класс безопасности файлового объекта 
In line 265  // 
In line 276  	// Получить SecAttr файла или папки 
In line 282  	// Установить SecAttr на файл или папку 
In line 288  	// Получить CrcAttr на файл 
In line 291  	// Установить CrcAttr на файл 
In line 294  	// Проверить целостность файла 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\guard\eop01cdf\stdafx.h  for analysis => 
In line 0  // stdafx.h: включаемый файл для стандартных системных включаемых файлов 
In line 1  // или включаемых файлов для конкретного проекта, которые часто используются, но 
In line 2  // не часто изменяются 
In line 3  // 
In line 6  //#define _WIN32_WINNT 0x0600 
In line 14  // TODO: Установите здесь ссылки на дополнительные заголовки, требующиеся для программы 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\guard\eop01cdf\targetver.h  for analysis => 
In line 2  // Включение SDKDDKVer.h обеспечивает определение самой последней доступной платформы Windows. 
In line 4  // Если требуется выполнить сборку приложения для предыдущей версии Windows, включите WinSDKVer.h и 
In line 5  // задайте для макроса _WIN32_WINNT значение поддерживаемой платформы перед включением SDKDDKVer.h. 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\bind.h  for analysis => 
In line 0  /* File:			bind.h 
In line 1   * 
In line 2   * Description:		See "bind.c" 
In line 3   * 
In line 4   * Comments:		See "readme.txt" for copyright and license information. 
In line 5   * 
In line 6   */ 
In line 14  /* 
In line 15   * BindInfoClass -- stores information about a bound column 
In line 16   */ 
In line 19  	SQLLEN	buflen;			/* size of buffer */ 
In line 20  	char	*buffer;		/* pointer to the buffer */ 
In line 21  	SQLLEN	*used;			/* used space in the buffer (for strings 
In line 22  					 * not counting the '\0') */ 
In line 23  	SQLLEN	*indicator;		/* indicator == used in many cases ? */ 
In line 24  	SQLSMALLINT	returntype;	/* kind of conversion to be applied when 
In line 25  					 * returning (SQL_C_DEFAULT, 
In line 26  					 * SQL_C_CHAR... etc) */ 
In line 27  	SQLSMALLINT	precision;	/* the precision for numeric or timestamp type */ 
In line 28  	SQLSMALLINT	scale;		/* the scale for numeric type */ 
In line 29  	/* area for work variables */ 
In line 30  	char	dummy_data;		/* currently not used */		 
In line 34  	char	*ttlbuf;		/* to save the large result */ 
In line 35  	SQLLEN	ttlbuflen;		/* the buffer length */ 
In line 36  	SQLLEN	ttlbufused;		/* used length of the buffer */ 
In line 37  	SQLLEN	data_left;		/* amount of data left to read 
In line 38  					 * (SQLGetData) */ 
In line 41  /* 
In line 42   * ParameterInfoClass -- stores information about a bound parameter 
In line 43   */ 
In line 49  	SQLLEN	*indicator;	/* indicator == used in many cases ? */ 
In line 51  	SQLSMALLINT	precision;	/* the precision for numeric or timestamp type */ 
In line 52  	SQLSMALLINT	scale;		/* the scale for numeric type */ 
In line 53  	/* area for work variables */ 
In line 59  	SQLLEN	*EXEC_used;	/* amount of data */ 
In line 60  	char	*EXEC_buffer; 	/* the data */ 
In line 64  /* 
In line 65   * ParameterImplClass -- stores implementation information about a parameter 
In line 66   */ 
In line 69  	pgNAME		paramName;	/* this is unavailable even in 8.1 */ 
In line 75  	SQLSMALLINT	precision;	/* the precision for numeric or timestamp type */ 
In line 76  	SQLSMALLINT	scale;		/* the scale for numeric type */ 
In line 91  /* Macros to handle pgtype of parameters */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\catfunc.h  for analysis => 
In line 0  /* File:			catfunc.h 
In line 1   * 
In line 2   * Description:		See "info.c" 
In line 3   * 
In line 4   * Comments:		See "readme.txt" for copyright and license information. 
In line 5   * 
In line 6   */ 
In line 13  /*	SQLTables field position	*/ 
In line 23  /*	SQLColumns field position	*/ 
In line 37  	,COLUMNS_COLUMN_DEF /* ODBC 3.0 but always use it */ 
In line 44  #endif	/* ODBCVER */ 
In line 54  /*	SQLPrimaryKeys field position	*/ 
In line 64  /*	SQLForeignKeys field position	*/ 
In line 81  #endif	/* ODBCVER */ 
In line 85  /* SQLColAttribute */ 
In line 117  /*	SQLStatistics field position	*/ 
In line 135  /*	SQLProcedureColumns field position	*/ 
In line 157  #endif /* ODBCVER */ 
In line 160  #endif /* __CARFUNC_H__ */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\columninfo.h  for analysis => 
In line 0  /* File:			columninfo.h 
In line 1   * 
In line 2   * Description:		See "columninfo.c" 
In line 3   * 
In line 4   * Comments:		See "readme.txt" for copyright and license information. 
In line 5   * 
In line 6   */ 
In line 15  	UInt4		refcount;	/* reference count. A ColumnInfo can be shared by 
In line 16  							 * several qresults. */ 
In line 20  		char	*name;		/* field name */ 
In line 21  		OID	adtid;		/* type oid */ 
In line 22  		Int2	adtsize;	/* type size */ 
In line 23  		Int4	display_size;	/* the display size (longest row) */ 
In line 24  		Int4	atttypmod;	/* the length of bpchar/varchar */ 
In line 25  		OID	relid;		/* the relation id */ 
In line 26  		Int2	attid;		/* the attribute number */ 
In line 44  /* functions for setting up the fields from within the program, */ 
In line 45  /* without reading from a socket */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\connection.h  for analysis => 
In line 0  /* File:			connection.h 
In line 1   * 
In line 2   * Description:		See "connection.c" 
In line 3   * 
In line 4   * Comments:		See "readme.txt" for copyright and license information. 
In line 5   * 
In line 6   */ 
In line 27  	CONN_NOT_CONNECTED,	/* Connection has not been established */ 
In line 28  	CONN_CONNECTED,		/* Connection is up and has been established */ 
In line 29  	CONN_DOWN,		/* Connection is broken */ 
In line 30  	CONN_EXECUTING		/* the connection is currently executing a 
In line 31  				 * statement */ 
In line 36  	DISALLOW_UPDATABLE_CURSORS = 0,	/* No cursors are updatable */ 
In line 37  	ALLOW_STATIC_CURSORS = 1L, /* Static cursors are updatable */ 
In line 38  	ALLOW_KEYSET_DRIVEN_CURSORS = (1L << 1), /* Keyset-driven cursors are updatable */ 
In line 39  	ALLOW_DYNAMIC_CURSORS = (1L << 2), /* Dynamic cursors are updatable */ 
In line 40  	ALLOW_BULK_OPERATIONS = (1L << 3), /* Bulk operations available */ 
In line 41  	SENSE_SELF_OPERATIONS = (1L << 4), /* Sense self update/delete/add */ 
In line 44  /*	These errors have general sql error state */ 
In line 59  /*	These errors correspond to specific SQL states */ 
In line 65  /* Used by SetConnectoption to indicate unsupported options */ 
In line 67  /* SetConnectOption: corresponds to ODBC--"S1009" */ 
In line 80  /* Conn_status defines */ 
In line 86  /* AutoCommit functions */ 
In line 91  /* Transaction in/not functions */ 
In line 96  /* Manual transaction in/not functions */ 
In line 101  /* Error waiting for ROLLBACK */ 
In line 110  /* Unicode handling */ 
In line 140  /* For Multi-thread */ 
In line 185  #endif /* WIN_MULTITHREAD_SUPPORT */ 
In line 204  /* Authentication types */ 
In line 216  /*	Startup Packet sizes */ 
In line 223  /*	Old 6.2 protocol defines */ 
In line 239  /*	This startup packet is to support latest Postgres protocol (6.4, 6.3) */ 
In line 251  /*	This startup packet is to support pre-Postgres 6.3 protocol */ 
In line 262  /* Transferred from pqcomm.h:  */ 
In line 271  	/* Note that each field is stored in network byte order! */ 
In line 272  	MsgType		cancelRequestCode;	/* code to identify a cancel request */ 
In line 273  	unsigned int	backendPID;	/* PID of client's backend */ 
In line 274  	unsigned int	cancelAuthCode; /* secret key to authorize cancel */ 
In line 277  /*	Structure to hold all the connection attributes for a specific 
In line 278  	connection (used for both registry and file, DSN and DRIVER) 
In line 279  */ 
In line 323  #endif /* _HANDLE_ENLIST_IN_DTC_ */ 
In line 324  	GLOBAL_VALUES drivers;		/* moved from driver's option */ 
In line 327  /*	Macro to determine is the connection using 6.2 protocol? */ 
In line 330  /*	Macro to determine is the connection using 6.3 protocol? */ 
In line 333  /*	Macro to determine is the connection using 6.4 protocol? */ 
In line 336  /*	Macro to determine is the connection using 7.4 protocol? */ 
In line 339  /*	Macro to determine is the connection using 7.4 rejected? */ 
In line 343  /* 
In line 344   *	Macros to compare the server's version with a specified version 
In line 345   *		1st parameter: pointer to a ConnectionClass object 
In line 346   *		2nd parameter: major version number 
In line 347   *		3rd parameter: minor version number 
In line 348   */ 
In line 359  /*#if ! defined(HAVE_CONFIG_H) || defined(HAVE_STRINGIZE)*/ 
In line 361  /*#else 
In line 362  #define STRING_AFTER_DOT(str)	(strchr("str", '.') + 1) 
In line 363  #endif*/ 
In line 364  /* 
In line 365   *	Simplified macros to compare the server's version with a 
In line 366   *		specified version 
In line 367   *	Note: Never pass a variable as the second parameter. 
In line 368   *		  It must be a decimal constant of the form %d.%d . 
In line 369   */ 
In line 379  /*	This is used to store cached table information in the connection */ 
In line 403   /* Translation DLL entry points */ 
In line 419  /*******	The Connection handle	************/ 
In line 422  	HENV		henv;		/* environment this connection was 
In line 423  					 * created on */ 
In line 445  	Int2		driver_version;		/* prepared for ODBC3.0 */ 
In line 446  	char		transact_status;	/* Is a transaction is currently 
In line 447  						 * in progress */ 
In line 448  	char		errormsg_created;	/* has an informative error msg 
In line 449  						 * been created ? */ 
In line 450  	char		pg_version[MAX_INFO_STRING];	/* Version of PostgreSQL 
In line 451  							 * we're connected to - 
In line 452  							 * DJP 25-1-2001 */ 
In line 467  	int		be_pid;	/* pid returned by backend */ 
In line 468  	int		be_key; /* auth code needed to send cancel */ 
In line 478  #endif /* ODBCVER */ 
In line 484  #endif /* USE_SSPI */ 
In line 491  #endif /* WIN_MULTITHREAD_SUPPORT */ 
In line 495  #endif /* _HANDLE_ENLIST_IN_DTC_ */ 
In line 499  /* Accessor functions */ 
In line 508  #define CC_fake_mss(x)	(/* 0 != (x)->ms_jet && */ 0 < (x)->connInfo.fake_mss) 
In line 510  #define CC_default_is_c(x)	(CC_is_in_ansi_app(x) || x->ms_jet /* not only */ || TRUE /* but for any other ? */) 
In line 511  /*	for CC_DSN_info */ 
In line 536  #endif /* _HANDLE_ENLIST_IN_DTC_ */ 
In line 539  /*	prototypes */ 
In line 541  enum { /* CC_conninfo_init option */ 
In line 542  	CLEANUP_FOR_REUSE	= 1L		/* reuse the info */ 
In line 543  	,COPY_GLOBALS		= (1L << 1) /* copy globals to drivers */ 
In line 562  #endif /* ODBCVER */ 
In line 571  /* 
In line 572  char		*CC_create_errormsg(ConnectionClass *self); 
In line 573  void		CC_lookup_lo(ConnectionClass *conn); 
In line 574  void		CC_lookup_pg_version(ConnectionClass *conn); 
In line 575  */ 
In line 603  /* CC_send_query options */ 
In line 605  	IGNORE_ABORT_ON_CONN	= 1L /* not set the error result even when  */ 
In line 606  	,CREATE_KEYSET		= (1L << 1) /* create keyset for updatable curosrs */ 
In line 607  	,GO_INTO_TRANSACTION	= (1L << 2) /* issue begin in advance */ 
In line 608  	,ROLLBACK_ON_ERROR	= (1L << 3) /* rollback the query when an error occurs */ 
In line 609  	,END_WITH_COMMIT	= (1L << 4) /* the query ends with COMMMIT command */ 
In line 610  	,IGNORE_ROUND_TRIP	= (1L << 5) /* the commincation round trip time is considered ignorable */ 
In line 612  /* CC_on_abort options */ 
In line 614  #define	CONN_DEAD		(1L << 1) /* connection is no longer valid */ 
In line 619  #endif /* __CONNECTION_H__ */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\connexp.h  for analysis => 
In line 0  /* File:			connexp.h 
In line 1   * 
In line 2   * Description:		See "connection.c" 
In line 3   * 
In line 4   * Comments:		See "notice.txt" for copyright and license information. 
In line 5   * 
In line 6   */ 
In line 11  /* 
In line 12   *	The psqlodbc dll exports functions below used in the pgenlist dll. 
In line 13   * 
In line 14   */ 
In line 24  #endif /* _PGDTC_FUNC_IMPORT_ */ 
In line 25  #endif /* _PGDTC_FUNCS_IMPLEMENT_ */ 
In line 31  /*	Property */ 
In line 35  	,inTrans			/* read-only */ 
In line 36  	,errorNumber			/* read_only */ 
In line 37  	,idleInGlobalTransaction	/* read-only */ 
In line 38  	,connected			/* read-only */ 
In line 42  /* 	PgDtc_isolate option */ 
In line 48  /* 	One phase commit operations */ 
In line 56  /* 	Two phase commit operations */ 
In line 79  #endif /* __CONNEXPORT_H__ */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\convert.h  for analysis => 
In line 0  /* File:			convert.h 
In line 1   * 
In line 2   * Description:		See "convert.c" 
In line 3   * 
In line 4   * Comments:		See "readme.txt" for copyright and license information. 
In line 5   * 
In line 6   */ 
In line 16  /* copy_and_convert results */ 
In line 23  /* convert_escape results */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\descriptor.h  for analysis => 
In line 0  /* File:			descriptor.h 
In line 1   * 
In line 2   * Description:		This file contains defines and declarations that are related to 
In line 3   *					the entire driver. 
In line 4   * 
In line 5   * Comments:		See "readme.txt" for copyright and license information. 
In line 6   */ 
In line 22  	COL_INFO	*col_info; /* cached SQLColumns info for this table */ 
In line 55  	TABLE_INFO *ti;	/* to resolve explicit table names */ 
In line 62  	int		column_size; /* precision in 2.x */ 
In line 63  	int		decimal_digits; /* scale in 2.x */ 
In line 67  	OID		basetype; /* may be the basetype when the column type is a domain */ 
In line 88  	UInt4	error_row;	/* 1-based row */ 
In line 89  	UInt4	error_index;	/* 1-based index */ 
In line 95  /* 
In line 96   *	ARD and APD are(must be) of the same format 
In line 97   */ 
In line 101  	SQLLEN		size_of_rowset; /* for ODBC3 fetch operation */ 
In line 102  #endif /* ODBCVER */ 
In line 103  	SQLUINTEGER	bind_size;	/* size of each structure if using 
In line 104  					 * Row-wise Binding */ 
In line 110  	SQLLEN		size_of_rowset_odbc2; /* for SQLExtendedFetch */ 
In line 113  /* 
In line 114   *	APD must be of the same format as ARD 
In line 115   */ 
In line 118  	SQLLEN		paramset_size;	/* really an SQLINTEGER type */  
In line 119  	SQLUINTEGER	param_bind_type; /* size of each structure if using 
In line 120  					  * Row-wise Parameter Binding */ 
In line 123  	ParameterInfoClass	*bookmark; /* dummy item to fit APD to ARD */ 
In line 126  	SQLLEN		paramset_size_dummy; /* dummy item to fit APD to ARD */ 
In line 185  /* void	InitializeIRDFields(IRDFields *self); 
In line 186  void	InitializeIPDFiedls(IPDFields *self); */ 
In line 201  #endif /* ODBCVER */ 
In line 203  /*	Error numbers about descriptor handle */ 
In line 206  	/* minus means warning/notice message */ 
In line 243  #endif /* __DESCRIPTOR_H__ */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\dlg_specific.h  for analysis => 
In line 0  /* File:			dlg_specific.h 
In line 1   * 
In line 2   * Description:		See "dlg_specific.c" 
In line 3   * 
In line 4   * Comments:		See "readme.txt" for copyright and license information. 
In line 5   * 
In line 6   */ 
In line 21  #endif /* __cplusplus */ 
In line 22  /*	Unknown data type sizes */ 
In line 29  /* ODBC initialization files */ 
In line 45  #endif /* UNICODE_SUPPORT */ 
In line 48  #endif   /* ODBCVER */ 
In line 50  #define INI_KDESC			"Description"	/* Data source 
In line 51  							 * description */ 
In line 52  #define INI_SERVER			"Servername"	/* Name of Server 
In line 53  							 * running the Postgres 
In line 54  							 * service */ 
In line 56  #define INI_PORT			"Port"	/* Port on which the 
In line 57  						 * Postmaster is listening */ 
In line 58  #define INI_DATABASE			"Database"	/* Database Name */ 
In line 59  #define INI_UID				"UID"		/* Default User Name */ 
In line 60  #define INI_USERNAME			"Username"	/* Default User Name */ 
In line 61  #define INI_PASSWORD			"Password"	/* Default Password */ 
In line 64  #define INI_DEBUG			"Debug"		/* Debug flag */ 
In line 66  #define INI_FETCH			"Fetch"		/* Fetch Max Count */ 
In line 68  #define INI_SOCKET			"Socket"	/* Socket buffer size */ 
In line 70  #define INI_READONLY			"ReadOnly"	/* Database is read only */ 
In line 72  #define INI_COMMLOG			"CommLog"	/* Communication to 
In line 73  							 * backend logging */ 
In line 75  #define INI_PROTOCOL			"Protocol"	/* What protocol (6.2) */ 
In line 77  #define INI_OPTIMIZER			"Optimizer"	/* Use backend genetic 
In line 78  							 * optimizer */ 
In line 80  #define INI_KSQO			"Ksqo"		/* Keyset query 
In line 81  							 * optimization */ 
In line 83  #define INI_CONNSETTINGS		 "ConnSettings" /* Anything to send to 
In line 84  							 * backend on successful 
In line 85  							 * connection */ 
In line 87  #define INI_UNIQUEINDEX			"UniqueIndex"	/* Recognize unique 
In line 88  							 * indexes */ 
In line 89  #define INI_UNKNOWNSIZES		"UnknownSizes"	/* How to handle unknown 
In line 90  							 * result set sizes */ 
In line 95  #define INI_USEDECLAREFETCH		"UseDeclareFetch"	/* Use Declare/Fetch 
In line 96  								 * cursors */ 
In line 99  /*	More ini stuff */ 
In line 165  #endif /* _HANDLE_ENLIST_IN_DTC_ */ 
In line 166  /* Bit representaion for abbreviated connection strings */ 
In line 198  /*	Mask for extra options	*/ 
In line 207  /*	Connection Defaults */ 
In line 210  #define DEFAULT_PROTOCOL			"7.4"	/* the latest protocol is 
In line 211  												 * the default */ 
In line 216  #define DEFAULT_OPTIMIZER			0		/* enable */ 
In line 217  #define DEFAULT_KSQO				1		/* on */ 
In line 218  #define DEFAULT_UNIQUEINDEX			1		/* dont recognize */ 
In line 219  #define DEFAULT_COMMLOG				0		/* dont log */ 
In line 227  #define DEFAULT_SHOWSYSTEMTABLES		0		/* dont show system tables */ 
In line 242  #endif	/* WIN32 */ 
In line 252  #endif /* _HANDLE_ENLIST_IN_DTC_ */ 
In line 254  /*	prototypes */ 
In line 281  #endif   /* WIN32 */ 
In line 303  #endif /* __cplusplus */ 
In line 304  #endif /* __DLG_SPECIFIC_H__ */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\environ.h  for analysis => 
In line 0  /* 
In line 1   * 
In line 2   * Description:		See "environ.c" 
In line 3   * 
In line 4   * Comments:		See "readme.txt" for copyright and license information. 
In line 5   * 
In line 6   */ 
In line 23  /**********		Environment Handle	*************/ 
In line 33  #endif /* WIN_MULTITHREAD_SUPPORT */ 
In line 36  /*	Environment prototypes */ 
In line 56  /* For Multi-thread */ 
In line 96  #endif /* WIN_MULTITHREAD_SUPPORT */ 
In line 103  #endif /* __ENVIRON_H_ */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\GExport4_c.h  for analysis => 
In line 0  //------------------------------------------------------- 
In line 1  // Подсистема    : Общесистемное ПО 
In line 2  // Задача        : ODBC драйвер СУБД PostgreSQL 
In line 3  // Модуль        : GExport4_c.h 
In line 4  // Назначение    : Адаптация заголовочного файла API СЗИ  
In line 5  //                 "Страж NT 4.0" для языка C 
In line 6  // Язык          : C (Microsoft Visual Studio 2010) 
In line 7  // Программист   : Романов Д.Г. 
In line 8  // Дата          : июль 2018 
In line 9  // Изменение     :  
In line 10  //------------------------------------------------------- 
In line 16  //#include <shlwapi.h> 
In line 17  //#include <Dsrole.h> 
In line 18  //#include <vector> 
In line 19  //#include <list> 
In line 49  //using namespace std; 
In line 51  //namespace GuardNT_30 { 
In line 53  /////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 54  // Определения 
In line 55  /////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 56  // 
In line 57  // Структура ключевой информации 
In line 58  // 
In line 60      UCHAR    UserName[16];		// Имя пользователя 
In line 61      UCHAR    Password[16];		// Пароль пользователя 
In line 62      UCHAR    DomainName[16];	// Имя домена 
In line 63      ULONG    IdentType;			// Тип идентификатора 
In line 64      UCHAR    IdentSerNum[8];	// Номер идентификатора 
In line 66  // 
In line 67  // Гриф секретности 
In line 68  // 
In line 76  // 
In line 77  // Режим выполнения приложений 
In line 78  // 
In line 81      ExNormal,					// Обычный режим 
In line 82      ExSuper,					// Супер - процесс 
In line 83      ExInstall					// Инсталлятор 
In line 85  // 
In line 86  // Параметры запуска приложений 
In line 87  // 
In line 89      ParamNone,				// Не запрашивать текущий допуск 
In line 90      ParamDefault,			// Назначить допуск по умолчанию 
In line 91  					// Для неисполняемых файлов разрешить 
In line 92  					// сквозную запись по дискреционным правилам 
In line 93      ParamStart,				// Запросить допуск при старте 
In line 94      ParamCreateWindow			// Запросить допуск при создании окна 
In line 96  // 
In line 97  // Параметры для неисполняемых файлов 
In line 98  // 
In line 99  // Обход перекрестной проверки 
In line 100  // 
In line 102  // Гриф без проверки 
In line 104  // Виртуализация вложенных объектов 
In line 106  // 
In line 107  // Параметры дополнительного аудита 
In line 108  // 
In line 110      AuditNone,					// Нет аудита 
In line 111      AuditSuccess,				// Аудит успеха 
In line 112      AuditDenied,				// Аудит отказов 
In line 113      AuditFull					// Полный аудит 
In line 115  // 
In line 116  // Атрибуты безопасности файлов и каталогов 
In line 117  // 
In line 121        UCHAR Grif : 2;			// Гриф - для неисполняемых файлов 
In line 122  					// Допуск - для исполняемых файлов 
In line 123        UCHAR ExMode : 2;			// Режим запуска исполняемых файлов 
In line 124        UCHAR Param : 2;			// Не проверять доступ на запись к родительсим папкам 
In line 125  					// Запрашивать текущий допуск при старте 
In line 126        UCHAR Audit : 2;			// Дополнительный аудит 
In line 129  // 
In line 130  // Атрибуты проверки целостности 
In line 131  // 
In line 135  // Параметры проверки целостности 
In line 136        UCHAR CA_DateTime : 1;		// Проверка даты и времени изменения 
In line 137        UCHAR CA_Size : 1;		// Проверка размера файла 
In line 138        UCHAR CA_Crc : 1;			// Проверка по контрольной сумме 
In line 139  // Условия проверки целостности 
In line 140        UCHAR CA_Auto : 1;		// Проверять автоматически 
In line 141  // Действия в случае нарушения целостности 
In line 142        UCHAR CA_HaltOnError : 1;		// Останов системы 
In line 143        UCHAR CA_BlockFile: 1;		// Блокирование файла 
In line 144        UCHAR CA_AutoUpdate: 1;		// Автоматически обновлять CRC 
In line 145  // Признак для файлов системы защиты 
In line 146        UCHAR CA_SZI: 1;			// Файл системы защиты 
In line 149  // 
In line 150  // Коды событий контроля целостности 
In line 151  // 
In line 153      NotRequired,			// Проверка не требуется 
In line 154      AllRight,				// Все в порядке 
In line 155      BadCrc,					// Ошибка контрольной суммы 
In line 156      BadDateTime,			// Несовпадение даты изменения 
In line 157      BadSize,				// Несовпадение размера файла 
In line 158      FileNotFound,			// Файл не найден 
In line 159      OtherError,				// Ошибки при проверке целостности 
In line 160      GuardError				// Нарушение целостности файла СЗИ 
In line 199  // 
In line 200  // Типы идентификаторов 
In line 201  // 
In line 213  // 
In line 214  // Дополнительные параметры SECURITY_INFORMATION 
In line 215  // 
In line 226  //////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 227  // Функции 
In line 228  //////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 229  //extern "C" { 
In line 230  // 
In line 231  // Определить, установлена ли СЗИ "Страж NT" и, если установлена, ее версию 
In line 232  // 
In line 234  // 
In line 235  // Определить пользователя, вошедшего на компьютер 
In line 236  // 
In line 238  // 
In line 239  // Запустить процесс с текущим допуском 
In line 240  // 
In line 241  DWORD WINAPI GuardCreateProcess(LPCTSTR lpApplicationName,	// Имя запускаемого модуля 
In line 242  							LPTSTR lpCommandLine,									// Командная строка 
In line 243  							LPSECURITY_ATTRIBUTES lpProcessAttributes,				// Атрибуты безопасности процесса 
In line 244  							LPSECURITY_ATTRIBUTES lpThreadAttributes,				// Атрибуты безопасности потока 
In line 245  							BOOL bInheritHandles,									// Флаг наследования хэндла 
In line 246  							DWORD dwCreationFlags,									// Флаги создания 
In line 247  							LPVOID lpEnvironment,									// Новый блок переменных окружения 
In line 248  							LPCTSTR lpCurrentDirectory,								// Текущая папка 
In line 249  							LPSTARTUPINFO lpStartupInfo,							// Стартовая информация 
In line 250  							LPPROCESS_INFORMATION lpProcessInformation,				// Информация о новом процессе 
In line 251  							GRIF_TYPE CurrentGrif);									// Текущий гриф 
In line 252  // 
In line 253  // Установить/снять режим администрирования 
In line 254  // 
In line 256  // 
In line 257  // Определить, установлен ли режим администрирования 
In line 258  // 
In line 260  // 
In line 261  // Получить значение текущего и максимального допуска процесса 
In line 262  // 
In line 263  BOOLEAN WINAPI GuardGetCurrentGrif(HANDLE hProcess,				// Имя процесса 
In line 264  				PDWORD CurrentGrif,										// Текущий допуск 
In line 265  				PDWORD MaxGrif);										// Максимальный допуск 
In line 266  // 
In line 267  // Установить значение текущего допуска текущего процесса 
In line 268  // 
In line 269  BOOLEAN WINAPI GuardSetCurrentGrif(IN HANDLE hProcess, GRIF_TYPE CurrentGrif);		// Текущий допуск 
In line 271  //} // extern "C" 
In line 272  //////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 273  // Классы 
In line 274  //////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 275  // 
In line 276  // Класс безопасности файлового объекта 
In line 277  // 
In line 278  /*class __declspec(dllexport) CGFileObjectSecurity { 
In line 279  	LPTSTR FileName; 
In line 280   
In line 281  public: 
In line 282  		CGFileObjectSecurity(void); 
In line 283  		CGFileObjectSecurity(IN LPCTSTR Name); 
In line 284  		~CGFileObjectSecurity(); 
In line 285   
In line 286  	DWORD	SetFileName(LPCTSTR Name); 
In line 287   
In line 288  	// Получить SecAttr файла или папки 
In line 289  	DWORD	GetSecAttr(OUT PSEC_ATTRIBUTES SecAttr); 
In line 290  	DWORD	GetGrif(OUT PGRIF_TYPE Grif); 
In line 291  	DWORD	GetExMode(OUT PEX_TYPE ExMode, OUT PPARAM_TYPE ExParam); 
In line 292  	DWORD	GetAudit(OUT PAUDIT_TYPE Audit); 
In line 293   
In line 294  	// Установить SecAttr на файл или папку 
In line 295  	DWORD	SetSecAttr(IN PSEC_ATTRIBUTES SecAttr); 
In line 296  	DWORD	SetGrif(IN GRIF_TYPE Grif); 
In line 297  	DWORD	SetExMode(IN EX_TYPE ExMode, IN PARAM_TYPE ExParam); 
In line 298  	DWORD	SetAudit(IN AUDIT_TYPE Audit); 
In line 299   
In line 300  	// Получить CrcAttr на файл 
In line 301  	DWORD	GetCrcAttr(OUT PCRC_ATTRIBUTES CrcAttr); 
In line 302   
In line 303  	// Установить CrcAttr на файл 
In line 304  	DWORD	SetCrcAttr(IN PCRC_ATTRIBUTES CrcAttr); 
In line 305   
In line 306  	// Проверить целостность файла 
In line 307  	DWORD	CheckCrc(OUT PCRC_EVENT CrcStatus); 
In line 308  };*/ 
In line 288  	// Получить SecAttr файла или папки 
In line 294  	// Установить SecAttr на файл или папку 
In line 300  	// Получить CrcAttr на файл 
In line 303  	// Установить CrcAttr на файл 
In line 306  	// Проверить целостность файла 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\gsssvcs.h  for analysis => 
In line 4  #endif   /* USE_GSS */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\guard_check.h  for analysis => 
In file guard_check.h not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\loadlib.h  for analysis => 
In line 0  /* File:			loadlib.h 
In line 1   * 
In line 2   * Description:		See "loadlib.c" 
In line 3   * 
In line 4   * Comments:		See "readme.txt" for copyright and license information. 
In line 5   * 
In line 6   */ 
In line 17  #endif /* HAVE_DLFCN_H */ 
In line 18  #endif /* HAVE_LIBLTDL */ 
In line 29  #endif /* NOT_USE_LIBPQ */ 
In line 36  #endif /* _HANDLE_ENLIST_IN_DTC_ */ 
In line 37  /* void	UnloadDelayLoadedDLLs(BOOL); */ 
In line 43  #endif /* __LOADLIB_H__ */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\lobj.h  for analysis => 
In line 0  /* File:			lobj.h 
In line 1   * 
In line 2   * Description:		See "lobj.c" 
In line 3   * 
In line 4   * Comments:		See "readme.txt" for copyright and license information. 
In line 5   * 
In line 6   */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\md5.h  for analysis => 
In line 0  /* File:			md5.h 
In line 1   * 
In line 2   * Description:		See "md5.h" 
In line 3   * 
In line 4   * Comments:		See "readme.txt" for copyright and license information. 
In line 5   * 
In line 6   */ 
In line 18  /* From c.h */ 
In line 34  #endif   /* not C++ */ 
In line 35  #endif   /* __BEOS__ */ 
In line 37  /* Also defined in include/c.h */ 
In line 39  typedef unsigned char uint8;	/* == 8 bits */ 
In line 40  typedef unsigned short uint16;	/* == 16 bits */ 
In line 41  typedef unsigned int uint32;	/* == 32 bits */ 
In line 42  #endif /* not HAVE_UINT8 */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\misc.h  for analysis => 
In line 0  /* File:			misc.h 
In line 1   * 
In line 2   * Description:		See "misc.c" 
In line 3   * 
In line 4   * Comments:		See "readme.txt" for copyright and license information. 
In line 5   * 
In line 6   */ 
In line 24  #endif /* HAVE_STRLCPY */ 
In line 35  /* #define	GET_SCHEMA_NAME(nspname) 	(stricmp(nspname, "public") ? nspname : "") */ 
In line 40  /* defines for return value of my_strcpy */ 
In line 52  #endif /* __MISC_H__ */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\multibyte.h  for analysis => 
In line 2  /* 
In line 3   * 
In line 4   * Multibyte library header ( psqlODBC Only ) 
In line 5   * 
In line 6   */ 
In line 10  /* PostgreSQL client encoding */ 
In line 12  	SQL_ASCII 	= 0	/* SQL/ASCII */ 
In line 13  	,EUC_JP			/* EUC for Japanese */ 
In line 14  	,EUC_CN			/* EUC for Chinese */ 
In line 15  	,EUC_KR			/* EUC for Korean */ 
In line 16  	,EUC_TW			/* EUC for Taiwan */ 
In line 18  	,UTF8			/* Unicode UTF-8 */ 
In line 19  	,MULE_INTERNAL		/* Mule internal code */ 
In line 20  	,LATIN1			/* ISO-8859 Latin 1 */ 
In line 21  	,LATIN2			/* ISO-8859 Latin 2 */ 
In line 22  	,LATIN3			/* ISO-8859 Latin 3 */ 
In line 23  	,LATIN4			/* ISO-8859 Latin 4 */ 
In line 24  	,LATIN5			/* ISO-8859 Latin 5 */ 
In line 25  	,LATIN6			/* ISO-8859 Latin 6 */ 
In line 26  	,LATIN7			/* ISO-8859 Latin 7 */ 
In line 27  	,LATIN8			/* ISO-8859 Latin 8 */ 
In line 28  	,LATIN9			/* ISO-8859 Latin 9 */ 
In line 29  	,LATIN10		/* ISO-8859 Latin 10 */ 
In line 30  	,WIN1256		/* Arabic Windows */ 
In line 31  	,WIN1258		/* Vietnamese Windows */ 
In line 32  	,WIN866			/* Alternativny Variant (MS-DOS CP866) */ 
In line 33  	,WIN874			/* Thai Windows */ 
In line 34  	,KOI8R			/* KOI8-R/U */ 
In line 35  	,WIN1251		/* Cyrillic Windows */ 
In line 36  	,WIN1252		/* Western Europe Windows */ 
In line 37  	,ISO_8859_5		/* ISO-8859-5 */ 
In line 38  	,ISO_8859_6		/* ISO-8859-6 */ 
In line 39  	,ISO_8859_7		/* ISO-8859-7 */ 
In line 40  	,ISO_8859_8		/* ISO-8859-8 */ 
In line 41  	,WIN1250		/* Central Europe Windows */ 
In line 42  	,WIN1253		/* Greek Windows */ 
In line 43  	,WIN1254		/* Turkish Windows */ 
In line 44  	,WIN1255		/* Hebrew Windows */ 
In line 45  	,WIN1257		/* Baltic(North Europe) Windows */ 
In line 46  	,EUC_JIS_2004		/* EUC for SHIFT-JIS-2004 Japanese */ 
In line 47  	,SJIS			/* Shift JIS */ 
In line 48  	,BIG5			/* Big5 */ 
In line 49  	,GBK			/* GBK */ 
In line 50  	,UHC			/* UHC */ 
In line 51  	,GB18030		/* GB18030 */ 
In line 52  	,SHIFT_JIS_2004		/* SHIFT-JIS-2004 Japanese, JIS X 0213 */ 
In line 59  /* OLD Type */ 
In line 60  // extern int	multibyte_client_encoding;	/* Multibyte client encoding. */ 
In line 60  // extern int	multibyte_client_encoding;	/* Multibyte client encoding. */ 
In line 61  // extern int	multibyte_status;	/* Multibyte charcter status. */ 
In line 61  // extern int	multibyte_status;	/* Multibyte charcter status. */ 
In line 62  // 
In line 63  // void		multibyte_init(void); 
In line 64  // unsigned char *check_client_encoding(unsigned char *sql_string); 
In line 65  // int			multibyte_char_check(unsigned char s); 
In line 66  // unsigned char *multibyte_strchr(const unsigned char *string, unsigned int c); 
In line 68  /* New Type */ 
In line 86  /* Old Type Compatible */ 
In line 101  /* #define check_client_encoding(X) pg_CS_name(pg_CS_code(X)) 
In line 102  UCHAR *check_client_encoding(const UCHAR *sql_string); */ 
In line 104  #endif /* __MULTIBUYTE_H__ */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\mylog.h  for analysis => 
In line 0  /* File:			mylog.h 
In line 1   * 
In line 2   * Description:		See "mylog.c" 
In line 3   * 
In line 4   * Comments:		See "notice.txt" for copyright and license information. 
In line 5   * 
In line 6   */ 
In line 20  #endif /* _MYLOG_FUNCS_IMPORT_ */ 
In line 21  #endif /* _MYLOG_FUNCS_IMPLEMENT_ */ 
In line 24  #endif /* WIN32 */ 
In line 34  /*	Uncomment MY_LOG define to compile in the mylog() statements. 
In line 35  	Then, debug logging will occur if 'Debug' is set to 1 in the ODBCINST.INI 
In line 36  	portion of the registry.  You may have to manually add this key. 
In line 37  	This logfile is intended for development use, not for an end user! 
In line 38  */ 
In line 42  /*	Uncomment Q_LOG to compile in the qlog() statements (Communications log, i.e. CommLog). 
In line 43  	This logfile contains serious log statements that are intended for an 
In line 44  	end user to be able to read and understand.  It is controlled by the 
In line 45  	'CommLog' flag in the ODBCINST.INI portion of the registry (see above), 
In line 46  	which is manipulated on the setup/connection dialog boxes. 
In line 47  */ 
In line 53  #define	inolog	if (get_mylog() > 1) mylog /* for really temporary debug */ 
In line 55  #else /* MY_LOG */ 
In line 57  #define mylog(args...)		/* GNU convention for variable arguments */ 
In line 58  #define forcelog(args...)	/* GNU convention for variable arguments */ 
In line 59  #define inolog(args...)		/* GNU convention for variable arguments */ 
In line 63  #define mylog		if (0) DumLog		/* mylog */ 
In line 64  #define forcelog	if (0) DumLog		/* forcelog */ 
In line 65  #define inolog		if (0) DumLog		/* inolog */ 
In line 66  #endif /* WIN32 */ 
In line 67  #endif /* MY_LOG */ 
In line 71  #define	inoqlog	if (get_qlog() > 1) qlog /* for really temporary debug */ 
In line 74  #define qlog(args...)		/* GNU convention for variable arguments */ 
In line 75  #define inoqlog(args...)	/* GNU convention for variable arguments */ 
In line 80  #endif /* _DUMMY_LOG_IMPL_ */ 
In line 81  #define qlog	if (0) DumLog			/* qlog */ 
In line 82  #define inoqlog	if (0) DumLog			/* inoqlog */ 
In line 83  #endif /* WIN32 */ 
In line 84  #endif /* QLOG */ 
In line 95  #endif /* __MYLOG_H__ */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\pgapifunc.h  for analysis => 
In line 0  /*------- 
In line 1   * Module:			pgapifunc.h 
In line 2   * 
In line 3   *------- 
In line 4   */ 
In line 14  #endif /* __cplusplus */ 
In line 15  /*	Internal flags for catalog functions */ 
In line 19  /*	Internal flags for PGAPI_AllocStmt functions */ 
In line 20  #define	PODBC_EXTERNAL_STATEMENT	1L	/* visible to the driver manager */ 
In line 22  /*	Internal flags for PGAPI_Exec... functions */ 
In line 25  /*	Flags for the error handling */ 
In line 75  /* Helper functions for Error handling */ 
In line 333  #endif /* ODBCVER */ 
In line 337  #endif /* __cplusplus */ 
In line 338  #endif   /* define_PG_API_FUNC_H__ */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\pgenlist.h  for analysis => 
In line 0  /* File:			enlist.h 
In line 1   * 
In line 2   * Description:		See "msdtc_enlist.c" 
In line 3   * 
In line 4   * Comments:		See "readme.txt" for copyright and license information. 
In line 5   * 
In line 6   */ 
In line 21  #endif /* _HANDLE_ENLIST_IN_DTC_ */ 
In line 22  #endif /* WIN32 */ 
In line 27  #endif /* __PGENLIST_H__ */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\pgtypes.h  for analysis => 
In line 0  /* File:			pgtypes.h 
In line 1   * 
In line 2   * Description:		See "pgtypes.c" 
In line 3   * 
In line 4   * Comments:		See "readme.txt" for copyright and license information. 
In line 5   * 
In line 6   */ 
In line 13  /* the type numbers are defined by the OID's of the types' rows */ 
In line 14  /* in table pg_type */ 
In line 18  #define PG_TYPE_LO				????	/* waiting for permanent type */ 
In line 69  #define PG_TYPE_TIMESTAMP_NO_TMZONE	1114		/* since 7.2 */ 
In line 72  #define PG_TYPE_TIME_WITH_TMZONE	1266		/* since 7.1 */ 
In line 73  #define PG_TYPE_TIMESTAMP		1296	/* deprecated since 7.0 */ 
In line 83  /* extern Int4 pgtypes_defined[]; */ 
In line 86  /*	Defines for pgtype_precision */ 
In line 92  /*  
In line 93   *	SQL_INTERVAL support is disabled because I found 
In line 94   *	some applications which are unhappy with it. 
In line 95   * 
In line 96  #define	PG_INTERVAL_AS_SQL_INTERVAL 
In line 97   */ 
In line 98  #endif /* ODBCVER */ 
In line 120  /*	These functions can use static numbers or result sets(col parameter) */ 
In line 121  Int4		pgtype_column_size(const StatementClass *stmt, OID type, int col, int handle_unknown_size_as); /* corresponds to "precision" in ODBC 2.x */ 
In line 122  SQLSMALLINT	pgtype_precision(const StatementClass *stmt, OID type, int col, int handle_unknown_size_as); /* "precsion in ODBC 3.x */ 
In line 123  /* the following size/length are of Int4 due to PG restriction */  
In line 127  // Int4		pgtype_transfer_octet_length(const ConnectionClass *conn, OID type, int column_size); 
In line 129  SQLSMALLINT	pgtype_decimal_digits(const StatementClass *stmt, OID type, int col); /* corresponds to "scale" in ODBC 2.x */ 
In line 130  SQLSMALLINT	pgtype_min_decimal_digits(const ConnectionClass *conn, OID type); /* corresponds to "min_scale" in ODBC 2.x */ 
In line 131  SQLSMALLINT	pgtype_max_decimal_digits(const ConnectionClass *conn, OID type); /* corresponds to "max_scale" in ODBC 2.x */ 
In line 132  SQLSMALLINT	pgtype_scale(const StatementClass *stmt, OID type, int col); /* ODBC 3.x " */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\psqlodbc.h  for analysis => 
In line 0  /* File:			psqlodbc.h 
In line 1   * 
In line 2   * Description:		This file contains defines and declarations that are related to 
In line 3   *					the entire driver. 
In line 4   * 
In line 5   * Comments:		See "readme.txt" for copyright and license information. 
In line 6   */ 
In line 11  /* #define	__MS_REPORTS_ANSI_CHAR__ */ 
In line 20  #include <stdio.h>				/* for FILE* pointers: see GLOBAL_VALUES */ 
In line 30  #if (_MSC_VER < 1400) /* in case of VC7 or under */ 
In line 32  #endif /* _MSC_VER */ 
In line 35  #endif /* _MEMORY_DEBUG_ */ 
In line 36  #else  /* _DEBUG */ 
In line 38  #endif /* _DEBUG */ 
In line 39  #endif /* WIN32 */ 
In line 56  #endif /* WIN32 */ 
In line 64  /* #define strncpy_null	pgdebug_strncpy_null */ 
In line 67  #endif   /* _MEMORY_DEBUG_ */ 
In line 71  #endif /* WIN32 */ 
In line 72  /* Must come before sql.h */ 
In line 75  #endif   /* ODBCVER_REP */ 
In line 81  #endif   /* NAMEDATALEN */ 
In line 90  #if defined(WIN32) && (_MSC_VER < 1300) /* in case of VC6 or under */ 
In line 94  /* VC6 bypasses 64bit mode. */ 
In line 105  #endif /* WIN32 */ 
In line 127  #define	FORMAT_INT4	"%d"	/* Int4 */ 
In line 128  #define	FORMAT_UINT4	"%u"	/* UInt4 */ 
In line 132  #endif /* SQL_TRUE */ 
In line 135  #endif /* SQL_FALSE */ 
In line 142  #define	FORMAT_SIZE_T	"%Iu"	/* size_t */ 
In line 143  #define	FORMAT_SSIZE_T	"%Id"	/* ssize_t */ 
In line 144  #define	FORMAT_INTEGER	"%ld"	/* SQLINTEGER */ 
In line 145  #define	FORMAT_UINTEGER	"%lu"	/* SQLUINTEGER */ 
In line 147  #define	FORMAT_LEN	"%I64d" /* SQLLEN */ 
In line 148  #define	FORMAT_ULEN	"%I64u" /* SQLULEN */ 
In line 149  #define	FORMAT_LPTR	"%I64d" /* LONG_PTR */ 
In line 150  #define	FORMAT_ULPTR	"%I64u" /* ULONG_PTR */ 
In line 152  #define	FORMAT_LEN	"%ld"	/* SQLLEN */ 
In line 153  #define	FORMAT_ULEN	"%lu"	/* SQLULEN */ 
In line 154  #define	FORMAT_LPTR	"%ld"	/* LONG_PTR */ 
In line 155  #define	FORMAT_ULPTR	"%lu"	/* ULONG_PTR */ 
In line 156  #endif /* _WIN64 */ 
In line 158  #define	FORMAT_SIZE_T	"%zu"	/* size_t */	 
In line 159  #define	FORMAT_SSIZE_T	"%zd"	/* ssize_t */ 
In line 162  #endif /* HAVE_SSIZE_T */ 
In line 167  #define	FORMAT_LPTR	"%ld"	/* LONG_PTR */ 
In line 168  #define	FORMAT_ULPTR	"%lu"	/* ULONG_PTR */ 
In line 172  #define	FORMAT_LPTR	"%lld"	/* LONG_PTR */ 
In line 173  #define	FORMAT_ULPTR	"%llu"	/* ULONG_PTR */ 
In line 176  #endif /* SIZEOF_VOID_P */ 
In line 178  #define	FORMAT_INTEGER	"%d"	/* SQLINTEGER */ 
In line 179  #define	FORMAT_UINTEGER	"%u"	/* SQLUINTEGER */ 
In line 181  #define FORMAT_LEN	"%d"	/* SQLLEN */ 
In line 182  #define FORMAT_ULEN	"%u"	/* SQLULEN */ 
In line 184  #define FORMAT_LEN	"%ld"	/* SQLLEN */ 
In line 185  #define FORMAT_ULEN	"%lu"	/* SQLULEN */ 
In line 186  #endif /* WITH_UNIXODBC */ 
In line 188  #define	FORMAT_LEN	"%ld"	/* SQLLEN */ 
In line 189  #define	FORMAT_ULEN	"%lu"	/* SQLULEN */ 
In line 190  #define	FORMAT_INTEGER	"%ld"	/* SQLINTEGER */ 
In line 191  #define	FORMAT_UINTEGER	"%lu"	/* SQLUINTEGER */ 
In line 192  #endif /* SIZEOF_VOID_P */ 
In line 193  #endif /* WIN32 */ 
In line 198  #endif /* SQL_IS_LEN */ 
In line 203  #endif /* HAVE_SIGNED_CHAR */ 
In line 209  #endif /* WITH_UNIXODBC */ 
In line 213  #endif /* CALLBACK */ 
In line 214  #endif /* WIN32 */ 
In line 221  #endif /* TRUE */ 
In line 224  #endif /* FALSE */ 
In line 229  #endif /* strdup */ 
In line 233  #endif /* WIN32 */ 
In line 248  /* Driver stuff */ 
In line 256  #endif /* ODBCVER 0x0351 */ 
In line 262  #endif /* UNICODE_SUPPORT */ 
In line 263  #endif /* DBMS_NAME */ 
In line 268  #endif   /* DBMS_NAME */ 
In line 269  #endif   /* ODBCVER */ 
In line 278  #endif /* ODBCVER 0x0350 */ 
In line 281  #endif   /* UNICODE_SUPPORT */ 
In line 284  #endif   /* ODBCVER 0x0300 */ 
In line 291  #endif   /* WIN32 */ 
In line 298  /* ESCAPEs */ 
In line 311  /* Limits */ 
In line 315  #define MAX_MESSAGE_LEN				65536		/* This puts a limit on 
In line 316  												 * query size but I don't */ 
In line 317   /* see an easy way round this - DJP 24-1-2001 */ 
In line 320  #define FETCH_MAX					100 /* default number of rows to cache 
In line 321  										 * for declare/fetch */ 
In line 323  #define SOCK_BUFFER_SIZE			4096		/* default socket buffer 
In line 324  												 * size */ 
In line 325  #define MAX_CONNECTIONS				128 /* conns per environment 
In line 326  										 * (arbitrary)	*/ 
In line 335  #define NAME_FIELD_SIZE				NAMEDATALEN /* size of name fields */ 
In line 340  #endif /* NAMEDATALEN */ 
In line 348  /*	Registry length limits */ 
In line 349  #define LARGE_REGISTRY_LEN			4096		/* used for special cases */ 
In line 350  #define MEDIUM_REGISTRY_LEN			256 /* normal size for 
In line 351  										 * user,database,etc. */ 
In line 352  #define SMALL_REGISTRY_LEN			10	/* for 1/0 settings */ 
In line 355  /*	These prefixes denote system tables */ 
In line 359  /*	Info limits */ 
In line 362  #define MAX_KEYLEN				512 	/* max key of the form 
In line 363   
In line 364  										 * "date+outlet+invoice" */ 
In line 365  /* POSIX defines a PATH_MAX.( wondows is _MAX_PATH ..) */ 
In line 371  #endif /* _MAX_PATH */ 
In line 372  #endif /* PATH_MAX */ 
In line 374  #define MAX_ROW_SIZE				0	/* Unlimited rowsize with the 
In line 375  										 * Tuple Toaster */ 
In line 376  #define MAX_STATEMENT_LEN			0	/* Unlimited statement size with 
In line 377  										 * 7.0 */ 
In line 379  /* Previously, numerous query strings were defined of length MAX_STATEMENT_LEN */ 
In line 380  /* Now that's 0, lets use this instead. DJP 24-1-2001 */ 
In line 383  #define PG62						"6.2"		/* "Protocol" key setting 
In line 384  												 * to force Postgres 6.2 */ 
In line 385  #define PG63						"6.3"		/* "Protocol" key setting 
In line 386  												 * to force postgres 6.3 */ 
In line 414  /*	pgNAME type define */ 
In line 480  /*	pgNAME define end */ 
In line 495  	char		onlyread;		/* readonly is reserved on Digital C++ 
In line 496  								 * compiler */ 
In line 524  #endif /* ODBCVER */ 
In line 527  /*	Used to pass extra query info to send_query */ 
In line 535  /*	Used to save the error information */ 
In line 554  #define PG_TYPE_LO_UNDEFINED			(-999)		/* hack until permanent 
In line 555  												 * type available */ 
In line 557  #define CTID_ATTNUM				(-1)	/* the attnum of ctid */ 
In line 558  #define OID_ATTNUM				(-2)	/* the attnum of oid */ 
In line 559  #define XMIN_ATTNUM				(-3)	/* the attnum of xmin */ 
In line 561  /* sizes */ 
In line 562  #define TEXT_FIELD_SIZE			8190	/* size of default text fields 
In line 563  						 * (not including null term) */ 
In line 564  #define MAX_VARCHAR_SIZE		255	/* default maximum size of 
In line 565  						 * varchar fields (not including null term) */ 
In line 566  #define INFO_VARCHAR_SIZE		254	/* varchar field size 
In line 567  						 * used in info.c */ 
In line 572  #define INFO_INQUIRY_LEN		8192	/* this seems sufficiently big for 
In line 573  										 * queries used in info.c inoue 
In line 574  										 * 2001/05/17 */ 
In line 582  #endif /* HAVE_ECO_THREAD_LOCKS */ 
In line 583  #endif /* POSIX_MULTITHREAD_SUPPORT */ 
In line 587  #endif /* POSIX_THREADMUTEX_SUPPORT */ 
In line 596  #endif /* UNICODE_SUPPORT */ 
In line 598  /* Define a type for defining a constant string expression */ 
In line 601  #endif	/* CSTR */ 
In line 613  #endif /* __PSQLODBC_H__ */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\qresult.h  for analysis => 
In line 0  /* File:			qresult.h 
In line 1   * 
In line 2   * Description:		See "qresult.c" 
In line 3   * 
In line 4   * Comments:		See "readme.txt" for copyright and license information. 
In line 5   * 
In line 6   */ 
In line 26  	PORES_COMMAND_OK,	/* a query command that doesn't return 
In line 27  				 * anything was executed properly by the backend */ 
In line 28  	PORES_TUPLES_OK,	/* a query command that returns tuples 
In line 29  				 * was executed properly by the backend, PGresult 
In line 30  				 * contains the resulttuples */ 
In line 33  	PORES_BAD_RESPONSE,	/* an unexpected response was recv'd from 
In line 34  				 * the backend */ 
In line 38  	PORES_FIELDS_OK = 100,	/* field information from a query was 
In line 39  				 * successful */ 
In line 40  	/* PORES_END_TUPLES, */ 
In line 46  	FQR_FETCHING_TUPLES = 1L	/* is fetching tuples from db */ 
In line 47  	,FQR_REACHED_EOF = (1L << 1)	/* reached eof */ 
In line 49  	,FQR_NEEDS_SURVIVAL_CHECK = (1L << 3) /* check if the cursor is open */ 
In line 54  	ColumnInfoClass *fields;	/* the Column information */ 
In line 55  	ConnectionClass *conn;		/* the connection this result is using 
In line 56  								 * (backend) */ 
In line 57  	QResultClass	*next;		/* the following result class */ 
In line 59  	/* Stuff for declare/fetch tuples */ 
In line 60  	SQLULEN		num_total_read;	/* the highest absolute position ever read in + 1 */ 
In line 61  	SQLULEN		count_backend_allocated;/* m(re)alloced count */ 
In line 62  	SQLULEN		num_cached_rows;	/* count of tuples kept in backend_tuples member */ 
In line 63  	SQLLEN		fetch_number;	/* 0-based index to the tuple to read next */ 
In line 64  	SQLLEN		cursTuple;	/* absolute current position in the servr's cursor used to retrieve tuples from the DB */ 
In line 66  	SQLLEN		base;		/* relative position of rowset start in the current data cache(backend_tuples) */ 
In line 68  	UInt2		num_fields;	/* number of fields in the result */ 
In line 69  	UInt2		num_key_fields;	/* number of key fields in the result */ 
In line 71  	UInt4		rowset_size_include_ommitted; /* PG restriction */ 
In line 74  	QueryResultCode	rstatus;	/* result status */ 
In line 79  	char *cursor_name;	/* The name of the cursor for select 
In line 80  					 * statements */ 
In line 84  	TupleField *backend_tuples;	/* data from the backend (the tuple cache) */ 
In line 85  	TupleField *tupleField;		/* current backend tuple being retrieved */ 
In line 87  	char	pstatus;		/* processing status */ 
In line 88  	char	aborted;		/* was aborted ? */ 
In line 89  	char	flags;			/* this result contains keyset etc ? */ 
In line 90  	char	move_direction;		/* must move before fetching this 
In line 91  						result set */ 
In line 92  	SQLULEN		count_keyset_allocated; /* m(re)alloced count */ 
In line 93  	SQLULEN		num_cached_keys;	/* count of keys kept in backend_keys member */ 
In line 95  	SQLLEN		key_base;	/* relative position of rowset start in the current keyset cache */ 
In line 97  	UInt2		rb_alloc;	/* count of allocated rollback info */	 
In line 98  	UInt2		rb_count;	/* count of rollback info */ 
In line 99  	char		dataFilled;	/* Cache is filled with data ? */	 
In line 101  	UInt4		ad_alloc;	/* count of allocated added info */ 
In line 102  	UInt4		ad_count;	/* count of newly added rows */ 
In line 103  	KeySet		*added_keyset;	/* added keyset info */ 
In line 104  	TupleField	*added_tuples;	/* added data by myself */ 
In line 105  	UInt2		dl_alloc;	/* count of allocated deleted info */	 
In line 106  	UInt2		dl_count;	/* count of deleted info */	 
In line 107  	SQLULEN		*deleted;	/* deleted index info */ 
In line 108  	KeySet		*deleted_keyset;	/* deleted keyset info */ 
In line 109  	UInt2		up_alloc;	/* count of allocated updated info */	 
In line 110  	UInt2		up_count;	/* count of updated info */	 
In line 111  	SQLULEN		*updated;	/* updated index info */ 
In line 112  	KeySet		*updated_keyset;	/* uddated keyset info */ 
In line 113  	TupleField	*updated_tuples;	/* uddated data by myself */ 
In line 119  	,FQR_HOLDPERMANENT = (1L << 2) /* the cursor is alive across transactions */  
In line 120  	,FQR_SYNCHRONIZEKEYS = (1L<<3) /* synchronize the keyset range with that of cthe tuples cache */ 
In line 130  /*	These functions are for retrieving data from the qresult */ 
In line 136  /*	These functions are used by both manual and backend results */ 
In line 147  /*	These functions are used only for manual result sets */ 
In line 154  /* status macros */ 
In line 220  /*	Core Functions */ 
In line 237  void		QR_set_num_fields(QResultClass *self, int new_num_fields); /* catalog functions' result only */ 
In line 277  #endif /* __QRESULT_H__ */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\resource.h  for analysis => 
In line 0  //{{NO_DEPENDENCIES}} 
In line 1  // Microsoft Developer Studio generated include file. 
In line 2  // Used by psqlodbc.rc 
In line 3  // 
In line 101  // Next default values for new objects 
In line 102  //  
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\socket.h  for analysis => 
In line 0  /* File:			socket.h 
In line 1   * 
In line 2   * Description:		See "socket.c" 
In line 3   * 
In line 4   * Comments:		See "readme.txt" for copyright and license information. 
In line 5   * 
In line 6   */ 
In line 25  #endif /* HAVE_POLL */ 
In line 42  #endif /* _IN_ADDR_T */ 
In line 44  #endif /* _IN_ADDR_NONE */ 
In line 50  #endif /* HAVE_SYS_UN_H */ 
In line 57  /* 
In line 58   *      The order of the structure elements on Win32 doesn't match the 
In line 59   *      order specified in the standard, but we have to match it for 
In line 60   *      IPv6 to work. 
In line 61   */ 
In line 63  #define AI_PASSIVE     0x1  // Socket address will be used in bind() call. 
In line 64  #define AI_CANONNAME   0x2  // Return canonical name in first ai_canonname. 
In line 65  #define AI_NUMERICHOST 0x4  // Nodename must be a numeric address string. 
In line 93  #endif /* _MSC_VER */ 
In line 100  #endif /* EINTR */ 
In line 103  #endif /* EWOULDBLOCK */ 
In line 106  #endif /* ECONNRESET */ 
In line 109  #endif /* EINPROGRESS */ 
In line 110  #endif /* WIN32 */ 
In line 127  #endif /* MSG_NOSIGNAL */ 
In line 160  	struct sockaddr_storage sadr_area; /* Used for various connections */ 
In line 164  #endif /* USE_SSPI */ 
In line 166  	/* SSL stuff */ 
In line 167  	void		*ssl;		/* libpq ssl */ 
In line 168  #endif /* USE_SSL */ 
In line 170  	void		*pqconn;	/* libpq PGConn */ 
In line 171  	BOOL		via_libpq;	/* using libpq library ? */ 
In line 172  #endif /* NOT_USE_LIBPQ */ 
In line 174  	gss_ctx_id_t	gctx;		/* GSS context */ 
In line 175  	gss_name_t	gtarg_nam;	/* GSS target name */ 
In line 176  #endif /* USE_GSS */ 
In line 178  	char		reverse;	/* used to handle Postgres 6.2 protocol 
In line 179  						* (reverse byte order) */ 
In line 180  	char		keepalive;	/* TCP keepalive */ 
In line 187  /* error functions */ 
In line 191  /* 
In line 192   *	code taken from postgres libpq et al. 
In line 193   */ 
In line 202  /* 
In line 203   *	We do this because sun_len is in BSD's struct, while others don't. 
In line 204   *	We never actually set BSD's sun_len, and I can't think of a 
In line 205   *	platform-safe way of doing it, but the code still works. bjm 
In line 206   */ 
In line 209  #endif /* offsetof */ 
In line 215  #endif /* SUN_LEN */ 
In line 216  #endif /* WIN32 */ 
In line 217  /* 
In line 218   *	END code taken from postgres libpq et al. 
In line 219   */ 
In line 222  /* Socket prototypes */ 
In line 238  #endif /* __SOCKET_H__ */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\sspisvcs.h  for analysis => 
In line 0  /* File:			sspisvcs.h 
In line 1   * 
In line 2   * Description:		See "sspisvcs.c" 
In line 3   * 
In line 4   * Comments:		See "readme.txt" for copyright and license information. 
In line 5   * 
In line 6   */ 
In line 13  /* SSPI Services */ 
In line 27  #endif /* __SSPISVCS_H__ */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\statement.h  for analysis => 
In line 0  /* File:			statement.h 
In line 1   * 
In line 2   * Description:		See "statement.c" 
In line 3   * 
In line 4   * Comments:		See "readme.txt" for copyright and license information. 
In line 5   * 
In line 6   */ 
In line 24  	STMT_ALLOCATED,				/* The statement handle is allocated, but 
In line 25  								 * not used so far */ 
In line 26  	STMT_READY,					/* the statement is waiting to be executed */ 
In line 27  	STMT_PREMATURE,				/* ODBC states that it is legal to call 
In line 28  								 * e.g. SQLDescribeCol before a call to 
In line 29  								 * SQLExecute, but after SQLPrepare. To 
In line 30  								 * get all the necessary information in 
In line 31  								 * such a case, we simply execute the 
In line 32  								 * query _before_ the actual call to 
In line 33  								 * SQLExecute, so that statement is 
In line 34  								 * considered to be "premature". */ 
In line 35  	STMT_FINISHED,				/* statement execution has finished */ 
In line 36  	STMT_EXECUTING				/* statement execution is still going on */ 
In line 38  /* 
In line 39   *		ERROR status code 
In line 40   * 
In line 41   *		The code for warnings must be minus 
In line 42   *		and  LOWEST_STMT_ERROR must be set to 
In line 43   *		the least code number. 
In line 44   *		The code for STMT_OK is 0 and error 
In line 45   *		codes follow after it. 
In line 46   */ 	 
In line 49  	/* minus values mean warning returns */ 
In line 56  				/* not an error message, 
In line 57  				 * just a notification 
In line 58  				 * to be returned by 
In line 59  				 * SQLError 
In line 60  				 */ 
In line 99  /* statement types */ 
In line 137  /*	Parsing status */ 
In line 141  	,STMT_PARSE_COMPLETE	/* the driver parsed the statement */ 
In line 147  	,STMT_HAS_ROW_DESCRIPTION = (1L << 4) /* already got the col info */ 
In line 151  /*	transition status */ 
In line 160  /*	Result style */ 
In line 177  /********	Statement Handle	***********/ 
In line 180  	ConnectionClass *hdbc;		/* pointer to ConnectionClass this 
In line 181  								 * statement belongs to */ 
In line 182  	QResultClass *result;		/* result of the current statement */ 
In line 183  	QResultClass *curres;		/* the current result in the chain */ 
In line 187  	/* attached descriptor handles */ 
In line 192  	/* implicit descriptor handles */ 
In line 203  	SQLLEN		currTuple;	/* current absolute row number (GetData, 
In line 204  						 * SetPos, SQLFetch) */ 
In line 206  	SQLLEN		save_rowset_size;	/* saved rowset size in case of 
In line 207  							 * change/FETCH_NEXT */ 
In line 208  	SQLLEN		rowset_start;	/* start of rowset (an absolute row 
In line 209  								 * number) */ 
In line 210  	SQLSETPOSIROW	bind_row;	/* current offset for Multiple row/column 
In line 211  						 * binding */ 
In line 212  	Int2		current_col;	/* current column for GetData -- used to 
In line 213  						 * handle multiple calls */ 
In line 214  	SQLLEN		last_fetch_count;	/* number of rows retrieved in 
In line 215  						 * last fetch/extended fetch */ 
In line 216  	int		lobj_fd;		/* fd of the current large object */ 
In line 218  	char	   *statement;		/* if non--null pointer to the SQL 
In line 219  					 * statement that has been executed */ 
In line 224  	Int2		statement_type; /* According to the defines above */ 
In line 226  	Int2		data_at_exec; /* Number of params needing SQLPutData */ 
In line 227  	Int2		current_exec_param;	/* The current parameter for 
In line 228  						 * SQLPutData */ 
In line 229  	UDWORD		iflag;		/* PGAPI_AllocStmt parameter */ 
In line 233  	po_ind_t	put_data;	/* Has SQLPutData been called ? */ 
In line 234  	po_ind_t	catalog_result;	/* Is this a result of catalog function ? */ 
In line 235  	po_ind_t	prepare;	/* is this a prepared statement ? */ 
In line 236  	po_ind_t	prepared;	/* is this statement already 
In line 237  					 * prepared at the server ? */ 
In line 238  	po_ind_t	internal;	/* Is this statement being called 
In line 239  							 * internally ? */ 
In line 240  	po_ind_t	transition_status;	/* Transition status */ 
In line 241  	po_ind_t	multi_statement; /* -1:unknown 0:single 1:multi */ 
In line 242  	po_ind_t	rbonerr;	/* rollback on error */ 
In line 243  	po_ind_t	discard_output_params;	 /* discard output parameters on parse stage */ 
In line 244  	po_ind_t	cancel_info;	/* cancel information */ 
In line 245  	po_ind_t	ref_CC_error;	/* refer to CC_error ? */ 
In line 246  	po_ind_t	lock_CC_for_rb;	/* lock CC for statement rollback ? */ 
In line 247  	po_ind_t	join_info;	/* have joins ? */ 
In line 248  	po_ind_t	parse_method;	/* parse_statement is forced or ? */ 
In line 249  	po_ind_t	curr_param_result; /* current param result is set ? */ 
In line 253  	char		*stmt_with_params;	/* statement after parameter 
In line 254  							 * substitution */ 
In line 255  	Int4		stmt_size_limit; /* PG restriction */ 
In line 260  	po_ind_t	pre_executing;	/* This statement is prematurely executing */ 
In line 261  	po_ind_t	inaccurate_result;	/* Current status is PREMATURE but 
In line 262  						 * result is inaccurate */ 
In line 266  	char		*load_statement; /* to (re)load updatable individual rows */ 
In line 267  	char		*execute_statement; /* to execute the prepared plans */ 
In line 272  	/* SQL_NEED_DATA Callback list */ 
In line 282  #endif /* WIN_MULTITHREAD_SUPPORT */ 
In line 342  #endif /* ODBCVER */ 
In line 363  /*	options for SC_free_params() */ 
In line 367  /*	prepare state */ 
In line 378  /*	prepared state */ 
In line 389  /*	misc info */ 
In line 435  /* For Multi-thread */ 
In line 454  #endif /* WIN_MULTITHREAD_SUPPORT */ 
In line 455  /*	Statement prototypes */ 
In line 520  /* 
In line 521   *	Macros to convert global index <-> relative index in resultset/rowset 
In line 522   */ 
In line 523  /* a global index to the relative index in a rowset */ 
In line 526  /* a global index to the relative index in a resultset(not a rowset) */ 
In line 529  /* a relative index in a rowset to the global index */ 
In line 531  /* a relative index in a resultset to the global index */ 
In line 538  #endif /* __STATEMENT_H__ */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\tuple.h  for analysis => 
In line 0  /* File:			tuple.h 
In line 1   * 
In line 2   * Description:		See "tuple.c" 
In line 3   * 
In line 4   * Important NOTE:	The TupleField structure is used both to hold backend 
In line 5  			data and manual result set data. The "set_" functions 
In line 6  			are only used for manual result sets by info routines. 
In line 7   * 
In line 8   * Comments:		See "readme.txt" for copyright and license information. 
In line 9   * 
In line 10   */ 
In line 17  /*	Used by backend data AND manual result sets */ 
In line 20  	Int4	len;		/* PG length of the current Tuple */ 
In line 21  	void	*value;		/* an array representing the value */ 
In line 24  /*	keyset(TID + OID) info */ 
In line 32  /*	Rollback(index + original TID) info */ 
In line 51  /*	These macros are wrappers for the corresponding set_tuplefield functions 
In line 52  	but these handle automatic NULL determination and call set_tuplefield_null() 
In line 53  	if appropriate for the datatype (used by SQLGetTypeInfo). 
In line 54  */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\version.h  for analysis => 
In line 0  /* File:			version.h 
In line 1   * 
In line 2   * Description:		This file defines the driver version. 
In line 3   * 
In line 4   * Comments:		See "readme.txt" for copyright and license information. 
In line 5   * 
In line 6   */ 
In line 11  /* 
In line 12   *	BuildAll may pass POSTGRESDRIVERVERSION and PG_DRVFILE_VERSION 
In line 13   *	via winbuild/psqlodbc.vcxproj.	 
In line 14   */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\win_setup.h  for analysis => 
In line 5  #endif /* INTFUNC */ 
In line 6  #define	MAXDSNAME	(32+1)	/* Max data source name length */ 
In line 7  /* Globals */ 
In line 8  /* NOTE:  All these are used by the dialog procedures */ 
In line 11  	HWND		hwndParent;		/* Parent window handle */ 
In line 12  	LPCSTR		lpszDrvr;		/* Driver description */ 
In line 14  	char		szDSN[MAXDSNAME];		/* Original data source name */ 
In line 15  	BOOL		fNewDSN;		/* New data source flag */ 
In line 16  	BOOL		fDefault;		/* Default data source flag */ 
In line 20  /* Prototypes */ 
In line 27  #endif /* _WIN_SETUP_H__ */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab03\Pab03cbk\pab03cbz.h  for analysis => 
In line 0  //-------------------------------------------------------------------- 
In line 1  //  Задача       -  PAB03 
In line 2  //  Модуль       -  PAB03CBF.H 
In line 3  //  Назначение   -  Заголовочный файл для модулей, работающих   
In line 4  //                  с эмулируемыми дисками S370 ЕС5063 
In line 5  //-------------------------------------------------------------------- 
In line 7  #define Code_SUCCESS				0  //Запись файла завершена успешно 
In line 8  #define Code_Invalid_Parameters		1  //TextInvalidParameters 
In line 9  #define Code_Open_Log_FAILED		2  //Ошибка открытия log-файла 
In line 10  #define Code_Open_PLEA_FAILED		3  //Ошибка открытия файла PREDLAT.EA 
In line 11  #define Code_Open_PLAE_FAILED		4  //Ошибка открытия файла PREDLAT.AE 
In line 12  #define Code_Read_S370_FAILED		5  //Ошибка чтения эмулируемого диска 
In line 13  #define Code_Test_S370_FAILED		6  //Указанный файл-том не является диском S370 
In line 14  #define Code_Label_Not_Found		7  //Отсутствует запись метки тома 
In line 15  #define Code_Invalid_Label			8  //Неверная метка тома 
In line 16  #define Code_Record4_Not_Found		9  //Ошибка в структуре VTOC эмулируемого диска: Запись формата 4 не найдена 
In line 17  #define Code_File_Exists			10 //Файл с заданным именем уже существует 
In line 18  #define Code_Write_FLabel_FAILED	11 //Ошибка записи метки файла во VTOC 
In line 19  #define Code_Record5_Not_Found		12 //Ошибка в структуре VTOC эмулируемого диска: Запись формата 5 не найдена 
In line 20  #define Code_Too_Many_Record5		13 //Ошибка в структуре VTOC эмулируемого диска: Неверное количество записей формата 5 
In line 21  #define Code_Open_InFile_FAILED		14 //Ошибка открытия входного файла 
In line 22  #define Code_InFile_Is_Empty		15 //Входной файл пуст 
In line 23  #define Code_Disk_Full				16 //Cвободный участок с требуемым количеством цилиндров не найден 
In line 24  #define Code_Read_S370_Prm_FAILED	20 //Ошибка чтения эмулируемого диска - ... 
In line 25  #define Code_Invalid_Structure		21 //Ошибка в структуре эмулируемого диска - ... 
In line 26  #define Code_Open_WPLEA_FAILED		22 //Ошибка открытия файла WPREDLAT.EA 
In line 27  #define Code_Open_PREA_FAILED		23 //Ошибка открытия файла PREDRUS.EA 
In line 28  #define Code_InFile_Not_Found		24 //Входной файл не найден 
In line 29  #define Code_Invalid_File_Type		25 //Организация входного файла не последовательная 
In line 30  #define Code_Uncertain_Length		26 //Входной файл имеет записи неопределенной длины 
In line 31  #define Code_Record3_Not_Found		27 //Ошибка в структуре VTOC эмулируемого диска: Запись формата 3 не найдена 
In line 32  #define Code_Create_OutFile_FAILED	28 //Ошибка создания выходного файла 
In line 33  #define Code_Length_Isnt_Multiple	29 //Ошибка чтения входного файла: Длина блока не кратна длине записи 
In line 34  #define Code_Invalid_File_PRNType	30 //Входной файл не является принт-файлом 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab03\Pab03cbk\stdafx.h  for analysis => 
In line 0  // stdafx.h: включаемый файл для стандартных системных включаемых файлов 
In line 1  // или включаемых файлов для конкретного проекта, которые часто используются, но 
In line 2  // не часто изменяются 
In line 3  // 
In line 14  // TODO. Установите здесь ссылки на дополнительные заголовки, требующиеся для программы 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab03\Pab03cbk\targetver.h  for analysis => 
In line 2  // Следующие макросы определяют минимальные требования к версии платформы. Минимальные требования к версии платформы 
In line 3  // - это самая ранняя версия Windows, Internet Explorer и т. д., имеющая все необходимые функции для выполнения  
In line 4  // вашего приложения. В результате выполнения макроса включаются все функции, доступные для версий платформы вплоть до указанной и  
In line 5  // включая указанную версию. 
In line 7  // Измените следующие определения, если версия вашей платформы более ранняя, чем указанная ниже. 
In line 8  // Последние данные о соответствующих значениях для различных платформ см. в MSDN. 
In line 9  #ifndef WINVER                          // Указывает, что минимально необходимой версией платформы является Windows Vista. 
In line 10  #define WINVER 0x0600           // Выберите значение, указывающее на другие версии Windows. 
In line 13  #ifndef _WIN32_WINNT            // Указывает, что минимально необходимой версией платформы является Windows Vista. 
In line 14  #define _WIN32_WINNT 0x0600     // Выберите значение, указывающее на другие версии Windows. 
In line 17  #ifndef _WIN32_WINDOWS          // Указывает, что минимально необходимой версией платформы является Windows 98. 
In line 18  #define _WIN32_WINDOWS 0x0410 // Выберите значение, указывающее на Windows Me или более поздние версии Windows. 
In line 21  #ifndef _WIN32_IE                       // Указывает, что минимально необходимой версией платформы является Internet Explorer 7.0. 
In line 22  #define _WIN32_IE 0x0700        // Выберите значение, указывающее на другие версии Internet Explorer. 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab03\Pab03cbl\pab03cbz.h  for analysis => 
In line 0  //-------------------------------------------------------------------- 
In line 1  //  Задача       -  PAB03 
In line 2  //  Модуль       -  PAB03CBF.H 
In line 3  //  Назначение   -  Заголовочный файл для модулей, работающих   
In line 4  //                  с эмулируемыми дисками S370 ЕС5063 
In line 5  //-------------------------------------------------------------------- 
In line 7  #define Code_SUCCESS				0  //Запись файла завершена успешно 
In line 8  #define Code_Invalid_Parameters		1  //TextInvalidParameters 
In line 9  #define Code_Open_Log_FAILED		2  //Ошибка открытия log-файла 
In line 10  #define Code_Open_PLEA_FAILED		3  //Ошибка открытия файла PREDLAT.EA 
In line 11  #define Code_Open_PLAE_FAILED		4  //Ошибка открытия файла PREDLAT.AE 
In line 12  #define Code_Read_S370_FAILED		5  //Ошибка чтения эмулируемого диска 
In line 13  #define Code_Test_S370_FAILED		6  //Указанный файл-том не является диском S370 
In line 14  #define Code_Label_Not_Found		7  //Отсутствует запись метки тома 
In line 15  #define Code_Invalid_Label			8  //Неверная метка тома 
In line 16  #define Code_Record4_Not_Found		9  //Ошибка в структуре VTOC эмулируемого диска: Запись формата 4 не найдена 
In line 17  #define Code_File_Exists			10 //Файл с заданным именем уже существует 
In line 18  #define Code_Write_FLabel_FAILED	11 //Ошибка записи метки файла во VTOC 
In line 19  #define Code_Record5_Not_Found		12 //Ошибка в структуре VTOC эмулируемого диска: Запись формата 5 не найдена 
In line 20  #define Code_Too_Many_Record5		13 //Ошибка в структуре VTOC эмулируемого диска: Неверное количество записей формата 5 
In line 21  #define Code_Open_InFile_FAILED		14 //Ошибка открытия входного файла 
In line 22  #define Code_InFile_Is_Empty		15 //Входной файл пуст 
In line 23  #define Code_Disk_Full				16 //Cвободный участок с требуемым количеством цилиндров не найден 
In line 24  #define Code_Read_S370_Prm_FAILED	20 //Ошибка чтения эмулируемого диска - ... 
In line 25  #define Code_Invalid_Structure		21 //Ошибка в структуре эмулируемого диска - ... 
In line 26  #define Code_Open_WPLEA_FAILED		22 //Ошибка открытия файла WPREDLAT.EA 
In line 27  #define Code_Open_PREA_FAILED		23 //Ошибка открытия файла PREDRUS.EA 
In line 28  #define Code_InFile_Not_Found		24 //Входной файл не найден 
In line 29  #define Code_Invalid_File_Type		25 //Организация входного файла не последовательная 
In line 30  #define Code_Uncertain_Length		26 //Входной файл имеет записи неопределенной длины 
In line 31  #define Code_Record3_Not_Found		27 //Ошибка в структуре VTOC эмулируемого диска: Запись формата 3 не найдена 
In line 32  #define Code_Create_OutFile_FAILED	28 //Ошибка создания выходного файла 
In line 33  #define Code_Length_Isnt_Multiple	29 //Ошибка чтения входного файла: Длина блока не кратна длине записи 
In line 34  #define Code_Invalid_File_PRNType	30 //Входной файл не является принт-файлом 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab03\Pab03cbl\stdafx.h  for analysis => 
In line 0  // stdafx.h: включаемый файл для стандартных системных включаемых файлов 
In line 1  // или включаемых файлов для конкретного проекта, которые часто используются, но 
In line 2  // не часто изменяются 
In line 3  // 
In line 14  // TODO. Установите здесь ссылки на дополнительные заголовки, требующиеся для программы 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab03\Pab03cbl\targetver.h  for analysis => 
In line 2  // Следующие макросы определяют минимальные требования к версии платформы. Минимальные требования к версии платформы 
In line 3  // - это самая ранняя версия Windows, Internet Explorer и т. д., имеющая все необходимые функции для выполнения  
In line 4  // вашего приложения. В результате выполнения макроса включаются все функции, доступные для версий платформы вплоть до указанной и  
In line 5  // включая указанную версию. 
In line 7  // Измените следующие определения, если версия вашей платформы более ранняя, чем указанная ниже. 
In line 8  // Последние данные о соответствующих значениях для различных платформ см. в MSDN. 
In line 9  #ifndef _WIN32_WINNT            // Указывает, что минимально необходимой версией платформы является Windows Vista. 
In line 10  #define _WIN32_WINNT 0x0600     // Выберите значение, указывающее на другие версии Windows. 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04c00\pab04c00.h  for analysis => 
In file pab04c00.h not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04c00\resource.h  for analysis => 
In line 0  //{{NO_DEPENDENCIES}} 
In line 1  // Microsoft Visual C++ generated include file. 
In line 2  // Used by win32_test.rc 
In line 3  // 
In line 20  // Next default values for new objects 
In line 21  //  
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04c00\stdafx.h  for analysis => 
In line 0  // stdafx.h: включаемый файл для стандартных системных включаемых файлов 
In line 1  // или включаемых файлов для конкретного проекта, которые часто используются, но 
In line 2  // не часто изменяются 
In line 3  // 
In line 9  #define WIN32_LEAN_AND_MEAN             // Исключите редко используемые компоненты из заголовков Windows 
In line 10  // Файлы заголовков Windows: 
In line 13  // Файлы заголовков C RunTime 
In line 20  // TODO: Установите здесь ссылки на дополнительные заголовки, требующиеся для программы 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04c00\targetver.h  for analysis => 
In line 2  // Включение SDKDDKVer.h обеспечивает определение самой последней доступной платформы Windows. 
In line 4  // Если требуется выполнить сборку приложения для предыдущей версии Windows, включите WinSDKVer.h и 
In line 5  // задайте для макроса _WIN32_WINNT значение поддерживаемой платформы перед включением SDKDDKVer.h. 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracConsolesNew\common\Application.h  for analysis => 
In line 0  //#include "stdafx.h" 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracConsolesNew\common\PassStructs.h  for analysis => 
In line 4  //через IRP мы передаём массив байт известного размера 
In line 5  //первый байт - код операции, остальные уже относятся к передаваемой информации 
In line 6  //дотупные операции: 
In line 7  //		изменить адрес и порт сервера 
In line 9  //		включить/выключить адрес 
In line 11  //		изменить/удалить добавляемую//удаляемую опцию 
In line 13  //		включить/выключить драйвер 
In line 15  //		изменить/получить всё сразу 
In line 17  //		обнулить правила 
In line 19  //		изменить подсчет чексуммы 
In line 25  //для опции нет структуры. Первый информативный байт задаёт длину опции, остальные - собственно опция 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracConsolesNew\GNTPusher\GExport.h  for analysis => 
In line 39  /////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 40  // Определения 
In line 41  /////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 42  // 
In line 43  // Структура ключевой информации 
In line 44  // 
In line 46      UCHAR    UserName[16];		// Имя пользователя 
In line 47      UCHAR    Password[16];		// Пароль пользователя 
In line 48      UCHAR    DomainName[16];	// Имя домена 
In line 49      ULONG    IdentType;			// Тип идентификатора 
In line 50      UCHAR    IdentSerNum[8];	// Номер идентификатора 
In line 52  // 
In line 53  // Гриф секретности 
In line 54  // 
In line 61  // 
In line 62  // Режим выполнения приложений 
In line 63  // 
In line 66      ExNormal,					// Обычный режим 
In line 67      ExSuper,					// Супер - процесс 
In line 68      ExInstall					// Инсталлятор 
In line 70  // 
In line 71  // Параметры запуска приложений 
In line 72  // 
In line 74      ParamNone,					// Не запрашивать текущий допуск 
In line 75      ParamDefault,				// Назначить допуск по умолчанию 
In line 76  								// Для неисполняемых файлов разрешить 
In line 77  								// сквозную запись по дискреционным правилам 
In line 78      ParamStart,					// Запросить допуск при старте 
In line 79      ParamCreateWindow			// Запросить допуск при создании окна 
In line 81  // 
In line 82  // Параметры сквозной записи 
In line 83  // 
In line 85      TraverseCheckingOff,		// Не разрешена перекрестная проверка 
In line 86      TraverseCheckingOn,			// Перекрестная проверка разрешена 
In line 87      TraverseCheckingRes1,		// Неиспользуемое значение 
In line 88      TraverseCheckingRes2		// Неиспользуемое значение 
In line 90  // 
In line 91  // Параметры дополнительного аудита 
In line 92  // 
In line 94      AuditNone,					// Нет аудита 
In line 95      AuditSuccess,				// Аудит успеха 
In line 96      AuditDenied,				// Аудит отказов 
In line 97      AuditFull					// Полный аудит 
In line 99  // 
In line 100  // Атрибуты безопасности файлов и каталогов 
In line 101  // 
In line 103      UCHAR Grif : 2;				// Гриф - для неисполняемых файлов 
In line 104  								// Допуск - для исполняемых файлов 
In line 105      UCHAR ExMode : 2;			// Режим запуска исполняемых файлов 
In line 106      UCHAR Param : 2;			// Не проверять доступ на запись к родительсим папкам 
In line 107  								// Запрашивать текущий допуск при старте 
In line 108      UCHAR Audit : 2;			// Дополнительный аудит 
In line 110  // 
In line 111  // Атрибуты проверки целостности 
In line 112  // 
In line 114  // Параметры проверки целостности 
In line 115      UCHAR CA_DateTime : 1;		// Проверка даты и времени изменения 
In line 116      UCHAR CA_Size : 1;			// Проверка размера файла 
In line 117      UCHAR CA_Crc : 1;			// Проверка по контрольной сумме 
In line 118  // Условия проверки целостности 
In line 119      UCHAR CA_Auto : 1;			// Проверять автоматически 
In line 120  // Действия в случае нарушения целостности 
In line 121      UCHAR CA_HaltOnError : 1;	// Останов системы 
In line 122      UCHAR CA_BlockFile: 1;		// Блокирование файла 
In line 123      UCHAR CA_AutoUpdate: 1;		// Автоматически обновлять CRC 
In line 124  // Признак для файлов системы защиты 
In line 125      UCHAR CA_SZI: 1;			// Файл системы защиты 
In line 127  // 
In line 128  // Коды событий контроля целостности 
In line 129  // 
In line 131      NotRequired,			// Проверка не требуется 
In line 132      AllRight,				// Все в порядке 
In line 133      BadCrc,					// Ошибка контрольной суммы 
In line 134      BadDateTime,			// Несовпадение даты изменения 
In line 135      BadSize,				// Несовпадение размера файла 
In line 136      FileNotFound,			// Файл не найден 
In line 137      OtherError,				// Ошибки при проверке целостности 
In line 138      GuardError				// Нарушение целостности файла СЗИ 
In line 140  // 
In line 141  // Типы идентификаторов 
In line 142  // 
In line 155  //////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 156  // Функции 
In line 157  //////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 159  // 
In line 160  // Определить, установлена ли СЗИ "Страж NT" и, если установлена, ее версию 
In line 161  // 
In line 163  // 
In line 164  // Определить пользователя, вошедшего на компьютер 
In line 165  // 
In line 167  // 
In line 168  // Установить/снять режим администрирования 
In line 169  // 
In line 171  // 
In line 172  // Определить, установлен ли режим администрирования 
In line 173  // 
In line 175  // 
In line 176  // Запустить процесс с текущим допуском 
In line 177  // 
In line 178  DWORD __declspec(dllexport) WINAPI GuardCreateProcess(LPCTSTR lpApplicationName,	// Имя запускаемого модуля 
In line 179  							LPTSTR lpCommandLine,									// Командная строка 
In line 180  							LPSECURITY_ATTRIBUTES lpProcessAttributes,				// Атрибуты безопасности процесса 
In line 181  							LPSECURITY_ATTRIBUTES lpThreadAttributes,				// Атрибуты безопасности потока 
In line 182  							BOOL bInheritHandles,									// Флаг наследования хэндла 
In line 183  							DWORD dwCreationFlags,									// Флаги создания 
In line 184  							LPVOID lpEnvironment,									// Новый блок переменных окружения 
In line 185  							LPCTSTR lpCurrentDirectory,								// Текущая папка 
In line 186  							LPSTARTUPINFO lpStartupInfo,							// Стартовая информация 
In line 187  							LPPROCESS_INFORMATION lpProcessInformation,				// Информация о новом процессе 
In line 188  							GRIF_TYPE CurrentGrif);									// Текущий гриф 
In line 189  // 
In line 190  // Получить значение текущего и максимального допуска процесса 
In line 191  // 
In line 192  DWORD __declspec(dllexport) WINAPI GuardGetCurrentGrif(HANDLE hProcess,				// Имя процесса 
In line 193  							PDWORD CurrentGrif,										// Текущий допуск 
In line 194  							PDWORD MaxGrif);										// Максимальный допуск 
In line 195  // 
In line 196  // Установить значение текущего допуска текущего процесса 
In line 197  // 
In line 198  DWORD __declspec(dllexport) WINAPI GuardSetCurrentGrif(GRIF_TYPE CurrentGrif);		// Текущий допуск 
In line 200  } // extern "C" 
In line 201  //////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 202  // Классы 
In line 203  //////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 204  // 
In line 205  // Класс безопасности файлового объекта 
In line 206  // 
In line 217  	// Получить SecAttr файла или папки 
In line 223  	// Установить SecAttr на файл или папку 
In line 229  	// Получить CrcAttr на файл 
In line 232  	// Установить CrcAttr на файл 
In line 235  	// Проверить целостность файла 
In line 238  // 
In line 239  // Класс пользователя 
In line 240  // 
In line 296  // 
In line 297  // Класс базы пользователей 
In line 298  // 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracConsolesNew\GNTPusher\stdafx.h  for analysis => 
In line 0  // stdafx.h: включаемый файл для стандартных системных включаемых файлов 
In line 1  // или включаемых файлов для конкретного проекта, которые часто используются, но 
In line 2  // не часто изменяются 
In line 3  // 
In line 15  // TODO: Установите здесь ссылки на дополнительные заголовки, требующиеся для программы 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracConsolesNew\GNTPusher\targetver.h  for analysis => 
In line 2  // Включение SDKDDKVer.h обеспечивает определение самой последней доступной платформы Windows. 
In line 4  // Если требуется выполнить построение приложения для предыдущей версии Windows, включите WinSDKVer.h и 
In line 5  // задайте для макроса _WIN32_WINNT значение поддерживаемой платформы перед включением SDKDDKVer.h. 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracConsolesNew\IctraAdmin\KeyKeeper.h  for analysis => 
In file KeyKeeper.h not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracConsolesNew\IctraAdmin\stdafx.h  for analysis => 
In line 0  // stdafx.h: включаемый файл для стандартных системных включаемых файлов 
In line 1  // или включаемых файлов для конкретного проекта, которые часто используются, но 
In line 2  // не часто изменяются 
In line 3  // 
In line 15  // TODO: Установите здесь ссылки на дополнительные заголовки, требующиеся для программы 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracConsolesNew\IctraAdmin\targetver.h  for analysis => 
In line 2  // Включение SDKDDKVer.h обеспечивает определение самой последней доступной платформы Windows. 
In line 4  // Если требуется выполнить построение приложения для предыдущей версии Windows, включите WinSDKVer.h и 
In line 5  // задайте для макроса _WIN32_WINNT значение поддерживаемой платформы перед включением SDKDDKVer.h. 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracConsolesNew\Pusher\stdafx.h  for analysis => 
In line 0  // stdafx.h: включаемый файл для стандартных системных включаемых файлов 
In line 1  // или включаемых файлов для конкретного проекта, которые часто используются, но 
In line 2  // не часто изменяются 
In line 3  // 
In line 14  // TODO: Установите здесь ссылки на дополнительные заголовки, требующиеся для программы 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracConsolesNew\Pusher\targetver.h  for analysis => 
In line 2  // Включение SDKDDKVer.h обеспечивает определение самой последней доступной платформы Windows. 
In line 4  // Если требуется выполнить построение приложения для предыдущей версии Windows, включите WinSDKVer.h и 
In line 5  // задайте для макроса _WIN32_WINNT значение поддерживаемой платформы перед включением SDKDDKVer.h. 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracConsolesNew\SNPusher\SNUser.h  for analysis => 
In line 7  // 
In line 8  //	имена динамических библиотек и функций 
In line 9  // 
In line 25  // 
In line 26  //	Имя подсистемы полномочного доступа 
In line 27  // 
In line 31  //  ******************************************************************** 
In line 32  //  Structure name : _SNCC_VERSIONINFO 
In line 33  //  Description    : Структура для хранения информации о версии Secret Net 
In line 34  //				   :  
In line 35  //  ******************************************************************** 
In line 38  	USHORT	ustVersionMajor;	// Главный номер версии 
In line 39  	USHORT	ustVersionMinor;	// Вспомогательный номер версии 
In line 40  	USHORT	ustBuildMajor;		// Номер сборки старший 
In line 41  	USHORT	ustBuildMinor;		// Номер сборки младший 
In line 47  //----------------------------------------------------------------------------- 
In line 48  //	Значения флагов для структуры SN_SESSION 
In line 49  //----------------------------------------------------------------------------- 
In line 51  // 
In line 52  //	Подсистема не будет запускать поток обработки сообщений. Это может 
In line 53  //	пригодиться для некоторых подситем, т.к. не будет создаваться дополнительных 
In line 54  //	неконтролируемых потоков. Соотв. прием сообщений подсистемой также 
In line 55  //	будет невозможен. Функции обработчики сообщений игнорируются и могут быть 
In line 56  //	заданы нулями (NULL) 
In line 57  // 
In line 60  // 
In line 61  //	Подсистема-невидимка, она не регистрируется в нулевом кольце, для 
In line 62  //	нее нет очереди сообщений, ее не надо прописывать в реестре.  
In line 63  //	Расчитана на подключение, быстрое получение параметров и отключение. 
In line 64  // 
In line 68  //  ******************************************************************** 
In line 69  //  Structure name  : _SN_SESSION 
In line 70  //  Description     : Это структура для открытия сессии с ядром 
In line 71  //                  :  
In line 72  //	Примечания		: 
In line 73  //					: dwFlags - опциональные флаги. Oпределены значения: 
In line 74  //					: SNS_IGNORE_DISPATCH_ROUTINE	- не запускать поток сообщений в подсистеме 
In line 75  //					: SNS_STEALTH_SUBSYSTEM - подсистема невидимка 
In line 76  //                  :  
In line 77  //  ******************************************************************** 
In line 80  	// 
In line 81  	//	имя подсистемы 
In line 82  	// 
In line 85  	// 
In line 86  	//	зарезервированные поля, используются внутри Secret Net 
In line 87  	// 
In line 91  	// 
In line 92  	//	версия подсистемы заполняется самой подсистемой 
In line 93  	// 
In line 96  	// 
In line 97  	//	ожидаемая версия ядра 
In line 98  	// 
In line 101  	// 
In line 102  	//	зарезервированное поле 
In line 103  	// 
In line 106  	// 
In line 107  	//	опциональные флаги 
In line 108  	// 
In line 111  	// 
In line 112  	//	дескриптор сессии - возвращается из функции SnOpenSession 
In line 113  	// 
In line 116  	// 
In line 117  	//	идентификатор сессии - возвращается из функции SnOpenSession 
In line 118  	// 
In line 121  	// 
In line 122  	//	массив зарезервированных полей, нужен для совместимости со старыми версиями Secret Net 
In line 123  	// 
In line 128  //  ******************************************************************** 
In line 129  //  Enum name      : _SNE_USER_INFO 
In line 130  //  Description    : классы информации о пользователе 
In line 131  //  ******************************************************************** 
In line 134  	SNUI_MANDAT		= 0x02,	//	Параметры подсистемы полномочного управления доступом 
In line 135  	SNUI_SESSION	= 0x0B	//	Параметры конфиденциальности сессии пользователя (только для открытой сессии) 
In line 138  //  ******************************************************************** 
In line 139  //  Structure name : SN_USER_INFO_MANDAT 
In line 140  //  Description    : Параметры работы с полномочкой 
In line 141  //  ******************************************************************** 
In line 144  	ULONG	MandatAccessLevel;	// уровень допуска 
In line 148  		ULONG	Privileges;		// привилегии - все в одном 
In line 150  		// привилегии по битам 
In line 153  			ULONG	PrintSecretPrivilege:1;		// печать конфиденциальных документов 
In line 154  			ULONG	OutputSecretPrivilege:1;	// вывод конфиденциальной информации 
In line 155  			ULONG	ControlLabelsPrivilege:1;	// управление категориями конфиденциальности 
In line 162  // 
In line 163  // Уровни допуска 
In line 164  // 
In line 165  #define SECURITY_LEVEL_NONCONFIDENTIAL			0	// Неконфиденциально 
In line 166  #define SECURITY_LEVEL_CONFIDENTIAL				1	// Конфиденциально 
In line 167  #define SECURITY_LEVEL_STRICTLY_CONFIDENTIAL	2	// Строго конфиденциально 
In line 169  // 
In line 170  // Флаги наследования для каталогов 
In line 171  // 
In line 172  #define SNAF_PROPAGATE_LEVEL	0x00000001	// распространять уровень на вложенные файлы 
In line 173  #define SNAF_PROPAGATE_LEVEL_FOLDER	0x00000002	// распространять уровень на вложенные каталоги 
In line 175  // 
In line 176  //	Привилегии пользователя (поле SN_USER_INFO_MANDAT::Privileges) 
In line 177  // 
In line 178  #define SN_PRINT_SECRET_PRIVILEGE	0x00000001	// печать конфиденциальных документов 
In line 179  #define SN_OUTPUT_SECRET_PRIVILEGE	0x00000002	// вывод конфиденциальной информации 
In line 180  #define SN_CONTROL_LABEL_PRIVILEGE	0x00000004	// управление категориями конфиденциальности 
In line 182  //  ******************************************************************** 
In line 183  //  Structure name : SN_USER_INFO_SESSION 
In line 184  //  Description    : Параметры сессии пользователя 
In line 185  //  ******************************************************************** 
In line 188  	// 
In line 189  	//	Уровень конфиденциальности сессии 
In line 190  	// 
In line 195  //  ******************************************************************** 
In line 196  // Получение текущего режима работы подсистемы полномочного управления доступом 
In line 197  // На входе ничего нет 
In line 198  // На выходе нужно указать структуру _SSnMCGetModeParamsOut 
In line 199  // Выходные статусы: 
In line 200  // STATUS_SUCCESS - Все Ok 
In line 201  // Любые другие статусы это ошибки, которые соответствуют системным кодам 
In line 203  //	идентификатор сообщения для: 
In line 204  //	Secret Net версии 5.1 для операционных систем Windows Vista, 2008. 
In line 205  //	Secret Net версий 6.х.  
In line 208  //	идентификатор сообщения для: 
In line 209  //	Secret Net версии 5.0; 
In line 210  //	Secret Net версии 5.1 для операционных систем Windows 2003, XP, 2000. 
In line 212  //  ******************************************************************** 
In line 214  //  ******************************************************************** 
In line 215  //  Structure name : _SN_MANDAT_MODE 
In line 216  //  Description    : Выходная структура для SNM_SNMC_GETMODEPARAMS и SNM_SNMC_GETMODEPARAMS_V180 
In line 217  //                 :  
In line 218  //  Members        : ULONG ulMode - режим работы подсистемы полномочного доступа.  
In line 219  //                 : Возможные значения: 
In line 220  //                 : 0 - контроль потоков информации и контроль вывода конфиденциальной информации отключены; 
In line 221  //                 : 1 - контроль потоков информации включен, контроль вывода конфиденциальной информации работает в базовом режиме; 
In line 222  //                 : 2 - контроль потоков информации включен, контроль вывода конфиденциальной информации работает в расширенном режиме. 
In line 223  //                 :  
In line 224  //  ******************************************************************** 
In line 230  //----------------------------------------------------------------------------- 
In line 231  //	Маски для задания масок в функциях полномочного доступа 
In line 232  //----------------------------------------------------------------------------- 
In line 233  #define SNAF_DIRECTORY_FLAG 0x10000000						 // признак каталога 
In line 234  // 
In line 235  //	признак наследования метки конфидециальности 
In line 236  // 
In line 237  #define SNAF_MANDAT_FLAGS	(SNAF_DIRECTORY_FLAG|0x00000001) // получить флаги каталога 
In line 238  // 
In line 239  //	уровень конфидециальности 
In line 240  // 
In line 241  #define SNAF_MANDAT_LEVEL	0x00000002						 // получить уровень допуска 
In line 245  //----------------------------------------------------------------------------- 
In line 246  //	Макросы для формирования и извлечения уровня доступа и флагов 
In line 247  //----------------------------------------------------------------------------- 
In line 252  //  ******************************************************************** 
In line 254  //  ******************************************************************** 
In line 255  //  Function name   : SnOpenSession 
In line 256  //  Description     : Функция устанавливает сессию с сервисом ядра 
In line 257  //                  :  
In line 258  //  Parameters      : IN OUT PSN_SESSION pSession - структура с описанием подсистемы 
In line 259  //					: на выходе заполнены поля 
In line 260  //					: hSessionHandle;	// дескриптор сессии 
In line 261  //					: dwSessionId;		// идентификатор сессии 
In line 262  //					:  
In line 263  //  Return values   : ERROR_SUCCESS 
In line 264  //                  : ERROR_INVALID_PARAMETER - переданы некорректные входные параметры 
In line 265  //                  : SN_KERNEL_NOT_LOADED - ядро не загружено 
In line 266  //                  : SN_TOO_MANY_SUBSYSTEMS - превышено допустимое количество загруженных подсистем 
In line 267  //                  : SN_WRONG_KERNEL_VERSION - запрошенная версия ядра не поддерживается 
In line 268  //                  : SN_SUBSYSTEM_NOT_REGISTERED - подсистема не зарегистрирована в реестре и не может обращаться к ядру 
In line 269  //                  : SN_SUBSYSTEM_INVALID - данный тип подсистемы не поддерживается  
In line 270  //					: (например, попытка открытия сессии подсистемой нулевого кольца) 
In line 271  //                  : SN_SUBSYSTEM_ALREADY_REGISTERED - подсистема с тем же именем уже зарегистрирована 
In line 272  //                  : SN_WRONG_SUBSYSTEM_VERSION - данная версия подсистемы не поддерживается 
In line 273  //                  :  
In line 274  //  Remarks         :  
In line 275  //                  :  
In line 276  //  ******************************************************************** 
In line 280  //  ******************************************************************** 
In line 281  //  Function name   : SnCloseSession 
In line 282  //  Description     : Функция закрывает сессию с сервисом ядра 
In line 283  //                  :  
In line 284  //  Parameters      : IN HANDLE hHandle – дескриптор сессии с ядром 
In line 285  //                  :  
In line 286  //  Return values   : При успешном выполнении возвращает ERROR_SUCCESS. 
In line 287  //                  : При неудачном выполнении – код ошибки. 
In line 288  //					: SN_INVALID_CLIENT_CONTEXT - вместо дескриптора сессии в функцию передали непонятно что 
In line 289  //					: SN_FUNCTION_NOT_CALLED - функция не может быть выполнена (Нельзя вызывать закрытие сессии  
In line 290  //                  :  
In line 291  //  Remarks         :  
In line 292  //                  :  
In line 293  //  ******************************************************************** 
In line 297  //  ******************************************************************** 
In line 298  //  Function name  : SnUserGetInfoByName 
In line 299  //  Description    : Получение параметров пользователя по имени 
In line 300  //                 :  
In line 301  //  Parameters     : IN HANDLE hHandle – дескриптор сессии с ядром 
In line 302  //                 : (который был получен в SnOpenSession) 
In line 303  //                 :  
In line 304  //                 : IN LPCWSTR pUserName - имя пользователя 
In line 305  //                 : для доменных пользователей в виде DOMAIN_NAME\USER_NAME 
In line 306  //                 : для локальных пользователей в виде WORKSTATION_NAME\USER_NAME 
In line 307  //                 :  
In line 308  //                 : IN SNE_USER_INFO eInfoClass - класс информации: 
In line 309  //                 : SNUI_MANDAT - получение настроек подсистемы полномочного управления доступом 
In line 310  //                 :  
In line 311  //                 : OUT PVOID* ppInfoData - буфер с выходными данными 
In line 312  //                 : Функция выделяет необходимый буфер, который после использования нужно 
In line 313  //                 : освободить через вызов SnApiBufferFree 
In line 314  //                 : Тип возвращаемого буфера класса информации SNUI_MANDAT: 
In line 315  //                 : SNUI_MANDAT -> PSN_USER_INFO_MANDAT 
In line 316  //                 :  
In line 317  //  Return values   : При успешном выполнении возвращает ERROR_SUCCESS. 
In line 318  //                  : При неудачном выполнении– код ошибки. 
In line 319  //                 :  
In line 320  //  Remarks        : 
In line 321  //                 : Если пользователь не найден в базе данные Secret Net - возвращаются 
In line 322  //                 : параметры по-умолчанию, если такого пользователя вообще нет 
In line 323  //                 : SN_USER_NOT_FOUND 
In line 324  //                 :  
In line 325  //  ******************************************************************** 
In line 329  //  ******************************************************************** 
In line 330  //  Function name  : SnUserSetInfoByName 
In line 331  //  Description    : Установка параметров пользователя по имени 
In line 332  //                 :  
In line 333  //  Parameters     : IN HANDLE hHandle – дескриптор соединения с ядром 
In line 334  //                 : (который был получен в SnOpenSession) 
In line 335  //                 :  
In line 336  //                 : IN LPCWSTR pUserName - имя пользователя 
In line 337  //                 : для доменных пользователей в виде DOMAIN_NAME\USER_NAME 
In line 338  //                 : для локальных пользователей в виде WORKSTATION_NAME\USER_NAME 
In line 339  //                 :  
In line 340  //                 : IN SNE_USER_INFO eInfoClass - класс информации: 
In line 341  //                 : SNUI_MANDAT - установка настроек подсистемы полномочного управления доступом 
In line 342  //                 :  
In line 343  //                 : IN PVOID pInfoData - устанавливаемые параметры 
In line 344  //                 : Тип передаваемого буфера для класса информации SNUI_MANDAT: 
In line 345  //                 : PSN_USER_INFO_MANDAT 
In line 346  //                 :  
In line 347  //  Return values   : При успешном выполнении возвращает ERROR_SUCCESS. 
In line 348  //                  : При неудачном выполнении– код ошибки. 
In line 349  //                 :  
In line 350  //  Remarks        : 
In line 351  //                 : 
In line 352  //  ******************************************************************** 
In line 356  //  ******************************************************************** 
In line 357  //  Function name  : SnSessionGetInfo 
In line 358  //  Description    : Получить информацию о сессии пользователя  
In line 359  //                 :  
In line 360  //  Parameters     : IN HANDLE hHandle - дескриптор сессии с ядром 
In line 361  //                 :  
In line 362  //                 : IN PLUID pSession - идентификатор сессии пользователя.  
In line 363  //                 : Можно задавать нулем, в этом случае при выполнении функции  
In line 364  //                 : для получения информации используется идентификатор сессии текущего пользователя. 
In line 365  //                 :  
In line 366  //                 : IN SNE_USER_INFO eInfoClass - класс информации: 
In line 367  //                 : SNUI_SESSION - получение параметров конфиденциальности сессии пользователя 
In line 368  //                 :  
In line 369  //                 : OUT PVOID* ppInfoData - буфер с выходными данными 
In line 370  //                 : Функция выделяет необходимый буфер, который после использования нужно 
In line 371  //                 : освободить через вызов SnApiBufferFree 
In line 372  //                 : Тип возвращаемого буфера класса информации SNUI_SESSION: 
In line 373  //                 : SNUI_SESSION -> PSN_USER_INFO_SESSION 
In line 374  //                 :  
In line 375  //  Return values  : При успешном выполнении возвращает ERROR_SUCCESS. 
In line 376  //                 : При неудачном выполнении – код ошибки 
In line 377  //                 :  
In line 378  //  Remarks        :  
In line 379  //                 :  
In line 380  //  ******************************************************************** 
In line 384  //  ******************************************************************** 
In line 385  //  Function name   : SnGetSubsystemIds 
In line 386  //  Description     : Функция возвращает массив экземпляров  
In line 387  //					: запущенных подсистем  с заданным именем 
In line 388  //                  :  
In line 389  //  Parameters      : IN HANDLE hHandle – дескриптор сессии с ядром 
In line 390  //                  : (который был получен в SnOpenSession) 
In line 391  //                  :  
In line 392  //                  : IN LPCWSTR pszName - уникальное имя запрашиваемой подсистемы 
In line 393  //                  :  
In line 394  //                  : IN OUT ULONG* pnCount – количество элементов в массиве IdsArray, на входе содержит размер массива,  
In line 395  //					: на выходе - количество полученных идентификаторов 
In line 396  //                  :  
In line 397  //                  : IN OUT ULONG* pdwArray – массив идентификаторов подсистем 
In line 398  //                  :  
In line 399  //  Return values   : ERROR_SUCCESS 
In line 400  //					: SN_SUBSYSTEM_NOT_REGISTERED - подсистема с таким именем не зарегистрирована в реестре 
In line 401  //					: (скорее всего виноват установщик, либо передали заведомо невалидное имя подсистемы) 
In line 402  //					: 
In line 403  //					: SN_SUBSYSTEM_STOPPED - подсистема остановлена (т.е. в реестре поставлен тип старта "Disabled") 
In line 404  //					: 
In line 405  //					: SN_MANDAT_SUBSYSTEM_STOPPED - то же самое, но выделенный случай при запросе к подсистеме полномочного управления доступом 
In line 406  //					: 
In line 407  //					: SN_SUBSYSTEM_NOT_FOUND - подсистема не найдена, т.е. такая система зарегистрирована в реестре, 
In line 408  //					: и явно не отключена, но почему-то не найдена в списке клиентов ядра (не запущена или сломалась) 
In line 409  //					: 
In line 410  //					: SN_INVALID_CLIENT_CONTEXT - вместо дескриптора сессии в функцию передали непонятно что 
In line 411  //					: 
In line 412  //                  : ERROR_INSUFFICIENT_BUFFER - недостаточный размер буффера, 
In line 413  //                  : в pnCount содержится необходимый размер 
In line 414  //					: 
In line 415  //  Remarks         : можно передать в *pnCount - 0, а pdwArray == NULL, тогда  
In line 416  //                  : функция вернет необходимый размер буффера и ошибку 
In line 417  //					: ERROR_INSUFFICIENT_BUFFER 
In line 418  //					: 
In line 419  //  ******************************************************************** 
In line 423  //  ******************************************************************** 
In line 424  //  Function name   : SnSendMessage 
In line 425  //  Description     : Функция посылает сообщение idMessage, подсистеме idReceiver,  
In line 426  //					: и ждет ответа 
In line 427  //                  :  
In line 428  //  Parameters      : IN HANDLE hHandle – дескриптор сессии с ядром 
In line 429  //                  : (который был получен в SnOpenSession) 
In line 430  //                  :  
In line 431  //                  : IN ULONG idReceiver – идентификатор получателя 
In line 432  //                  :  
In line 433  //                  : IN ULONG idMessage – идентификатор сообщения 
In line 434  //                  :  
In line 435  //                  : IN ULONG cbSizeIn – размер передаваемого сообщения в байтах 
In line 436  //                  :  
In line 437  //                  : IN PVOID pDataIn – передаваемые данные  
In line 438  //                  :  
In line 439  //                  : IN OUT ULONG* pcbSizeOut – размер буфера для получения ответа, 
In line 440  //					: на выходе - размер полученных данных 
In line 441  //                  :  
In line 442  //                  : IN OUT PVOID pDataOut – буфер, в который помещается ответ на сообщение  
In line 443  //                  :  
In line 444  //  Return values   : ERROR_SUCCESS 
In line 445  //					: SN_INVALID_CLIENT_CONTEXT - вместо дескриптора сессии в функцию передали непонятно что 
In line 446  //                  : SN_SUBSYSTEM_NOT_FOUND - получатель не найден 
In line 447  //                  : SN_INVALID_MESSAGE_OPERATION - недопустимая операция с сообщением 
In line 448  //                  : например, сообщение типа POST передается через функцию Send  
In line 449  //                  : SN_NOT_SUBSCRIBED - подсистема не подписана на данное сообщение 
In line 450  //                  : SN_SUBSYSTEM_NOT_READY - подсистема не установила статус готовности  
In line 451  //					: ERROR_INSUFFICIENT_BUFFER - недостаточный размер буффера для ответа 
In line 452  //                  :  
In line 453  //  ******************************************************************** 
In line 461  //  ******************************************************************** 
In line 462  //  Function name  : SnApiBufferFree 
In line 463  //  Description    : Функция освобождает буфер, выделенный функциями SnSessionGetInfo и SnUserGetInfoByName. 
In line 464  //                 :  
In line 465  //  Parameters     : IN PVOID pBuffer - буфер 
In line 466  //                 :  
In line 467  //  Return values  : При успешном выполнении возвращает ERROR_SUCCESS. 
In line 468  //                 : При неудачном выполнении – код ошибки 
In line 469  //                 :  
In line 470  //  Remarks        : функция не обращается к ядру 
In line 471  //                 :  
In line 472  //  ******************************************************************** 
In line 476  //  ******************************************************************** 
In line 477  //  Function name  : SnaMandatGetAttributes 
In line 478  //  Description    : Получить атрибуты полномочного управления доступом для файла или каталога 
In line 479  //                 :  
In line 480  //  Parameters     : IN HANDLE Session OPTIONAL - дескриптор сессии с ядром или NULL 
In line 481  //                 :  
In line 482  //                 : IN LPCWSTR FileName - имя файла или каталога 
In line 483  //                 :  
In line 484  //                 : IN ULONG AttributesMask - маска 
In line 485  //                 :  
In line 486  //                 : OUT PULONG Attributes - результат 
In line 487  //                 :  
In line 488  //  Return values  : При успешном выполнении возвращает ERROR_SUCCESS. 
In line 489  //                 : При неудачном выполнении – код ошибки. 
In line 490  //                 :  
In line 491  //  Remarks        : Можно задавать Session равным NULL, тогда соединение  
In line 492  //                 : с ядром будет установленно при выполнении функции, 
In line 493  //                 : а после выполнения функции сессия с ядром будет закрыта. 
In line 494  //                 :  
In line 495  //  ******************************************************************** 
In line 499  //  ******************************************************************** 
In line 500  //  Function name  : SnaMandatSetAttributes 
In line 501  //  Description    : Установить атрибуты полномочного управления доступом для файла или каталога 
In line 502  //                 :  
In line 503  //  Parameters     : IN HANDLE Session OPTIONAL - дескриптор сессии с ядром или NULL 
In line 504  //                 :  
In line 505  //                 : IN LPCWSTR FileName - имя файла или каталога 
In line 506  //                 :  
In line 507  //                 : IN ULONG AttributesMask - маска 
In line 508  //                 :  
In line 509  //                 : IN ULONG Attributes - устанавливаемые атрибуты 
In line 510  //                 :  
In line 511  //  Return values  : При успешном выполнении возвращает ERROR_SUCCESS. 
In line 512  //                 : При неудачном выполнении – код ошибки. 
In line 513  //                 :  
In line 514  //  Remarks        : Можно задавать Session равным NULL, тогда соединение  
In line 515  //                 : с ядром будет установленно при выполнении функции, 
In line 516  //                 : а после выполнения функции сессия с ядром будет закрыта. 
In line 517  //                 :  
In line 518  //  ******************************************************************** 
In line 522  //  ******************************************************************** 
In line 523  //					Коды и описание ошибок 
In line 524  //  ******************************************************************** 
In line 526  // 
In line 527  // MessageId: SN_KERNEL_NOT_LOADED 
In line 528  // 
In line 529  // MessageText: 
In line 530  // 
In line 531  // Сервис Ядра не запущен. 
In line 532  // 
In line 535  // 
In line 536  // MessageId: SN_SUBSYSTEM_NOT_REGISTERED 
In line 537  // 
In line 538  // MessageText: 
In line 539  // 
In line 540  // Подсистема (%1) не зарегистрирована как часть Secret Net. 
In line 541  // 
In line 544  // 
In line 545  // MessageId: SN_SUBSYSTEM_INVALID 
In line 546  // 
In line 547  // MessageText: 
In line 548  // 
In line 549  // Регистрационная информация для подсистемы испорчена. 
In line 550  // 
In line 553  // 
In line 554  // MessageId: SN_SUBSYSTEM_ALREADY_REGISTERED 
In line 555  // 
In line 556  // MessageText: 
In line 557  // 
In line 558  // Подсистема уже зарегистрирована в ядре Secret Net. 
In line 559  // 
In line 562  // 
In line 563  // MessageId: SN_INVALID_CLIENT_CONTEXT 
In line 564  // 
In line 565  // MessageText: 
In line 566  // 
In line 567  // Недопустимый контекст вызова (%1). 
In line 568  // 
In line 571  // 
In line 572  // MessageId: SN_SUBSYSTEM_NOT_FOUND 
In line 573  // 
In line 574  // MessageText: 
In line 575  // 
In line 576  // Подсистема (%1) не обнаружена в списке клиентов ядра (возможно, не запущена). 
In line 577  // 
In line 580  // 
In line 581  // MessageId: SN_NOT_SUBSCRIBED 
In line 582  // 
In line 583  // MessageText: 
In line 584  // 
In line 585  // Подсистема не подписана на данное сообщение. 
In line 586  // 
In line 589  // 
In line 590  // MessageId: SN_WRONG_SUBSYSTEM_VERSION 
In line 591  // 
In line 592  // MessageText: 
In line 593  // 
In line 594  // Версия подсистемы не поддерживается ядром. 
In line 595  // 
In line 598  // 
In line 599  // MessageId: SN_WRONG_KERNEL_VERSION 
In line 600  // 
In line 601  // MessageText: 
In line 602  // 
In line 603  // Запрошенная версия ядра не поддерживается. 
In line 604  // 
In line 607  // 
In line 608  // MessageId: SN_INVALID_MESSAGE_OPERATION 
In line 609  // 
In line 610  // MessageText: 
In line 611  // 
In line 612  // Запрошенная операция не поддерживается для данного типа сообщений. 
In line 613  // 
In line 616  // 
In line 617  // MessageId: SN_SUBSYSTEM_NOT_READY 
In line 618  // 
In line 619  // MessageText: 
In line 620  // 
In line 621  // Подсистема не готова обрабатывать запросы. 
In line 622  // 
In line 625  // 
In line 626  // MessageId: SN_TOO_MANY_SUBSYSTEMS 
In line 627  // 
In line 628  // MessageText: 
In line 629  // 
In line 630  // Достигнуто предельное число подсистем. 
In line 631  // 
In line 634  // 
In line 635  // MessageId: SN_FUNCTION_NOT_CALLED 
In line 636  // 
In line 637  // MessageText: 
In line 638  // 
In line 639  // Функция не может быть выполнена. 
In line 640  // 
In line 643  // 
In line 644  // MessageId: SN_USER_NOT_FOUND 
In line 645  // 
In line 646  // MessageText: 
In line 647  // 
In line 648  // Пользователь не найден в базе данных Secret Net. 
In line 649  // 
In line 652  // 
In line 653  // MessageId: SN_MANDAT_SUBSYSTEM_STOPPED 
In line 654  // 
In line 655  // MessageText: 
In line 656  // 
In line 657  // Подсистема полномочного управления доступом остановлена. 
In line 658  // 
In line 661  // 
In line 662  // MessageId: SN_SUBSYSTEM_STOPPED 
In line 663  // 
In line 664  // MessageText: 
In line 665  // 
In line 666  // Подсистема (%1) остановлена. 
In line 667  // 
In line 671  #endif	// #ifndef __SNMANDATAPI_H 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracConsolesNew\SNPusher\stdafx.h  for analysis => 
In line 0  // stdafx.h: включаемый файл для стандартных системных включаемых файлов 
In line 1  // или включаемых файлов для конкретного проекта, которые часто используются, но 
In line 2  // не часто изменяются 
In line 3  // 
In line 14  // TODO: Установите здесь ссылки на дополнительные заголовки, требующиеся для программы 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracConsolesNew\SNPusher\targetver.h  for analysis => 
In line 2  // Включение SDKDDKVer.h обеспечивает определение самой последней доступной платформы Windows. 
In line 4  // Если требуется выполнить построение приложения для предыдущей версии Windows, включите WinSDKVer.h и 
In line 5  // задайте для макроса _WIN32_WINNT значение поддерживаемой платформы перед включением SDKDDKVer.h. 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracWin7SrcNew\Solution\filter.h  for analysis => 
In line 3  #pragma warning(disable:28930) // Unused assignment of pointer, by design in samples 
In line 4  #pragma warning(disable:28931) // Unused assignment of variable, by design in samples 
In line 16  extern NDIS_HANDLE         FilterDriverHandle; // NDIS handle for filter driver 
In line 29  #define FILTER_SERVICE_NAME         L"ICTRAC"					//InformContactTRustedACcess 
In line 98  // 
In line 99  // Define the filter struct 
In line 100  // 
In line 104      //Reference to this filter 
In line 116      FILTER_LOCK                     Lock;    // Lock for protection of state and outstanding sends and recvs 
In line 118      FILTER_STATE                    State;   // Which state the filter is in 
In line 149  // 
In line 150  // The driver should maintain a list of NDIS filter handles 
In line 151  // 
In line 159  // 
In line 160  // The context inside a cloned request 
In line 161  // 
In line 165  // 
In line 166  // function prototypes 
In line 167  // 
In line 259  #endif  //_FILT_H 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracWin7SrcNew\Solution\filteruser.h  for analysis => 
In line 3  // 
In line 4  // Temp file to test filter 
In line 5  // 
In line 84  #endif //__FILTERUSER_H__ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracWin7SrcNew\Solution\flt_dbg.h  for analysis => 
In line 0  //*++ 
In line 0  //*++ 
In line 1  // 
In line 2  //Copyright (c) 2001  Microsoft Corporation 
In line 3  // 
In line 4  //Module Name: 
In line 5  // 
In line 6  //    debug.h 
In line 7  // 
In line 8  //Abstract: 
In line 9  // 
In line 10  //    This module contains all debug related prototypes for MS FILTER 
In line 11  // 
In line 12  //Revision History: 
In line 13  // 
In line 14  // 
In line 15  //Notes: 
In line 16  // 
In line 17  //--*/ 
In line 1  // 
In line 2  //Copyright (c) 2001  Microsoft Corporation 
In line 3  // 
In line 4  //Module Name: 
In line 5  // 
In line 6  //    debug.h 
In line 7  // 
In line 8  //Abstract: 
In line 9  // 
In line 10  //    This module contains all debug related prototypes for MS FILTER 
In line 11  // 
In line 12  //Revision History: 
In line 13  // 
In line 14  // 
In line 15  //Notes: 
In line 16  // 
In line 17  //--*/ 
In line 18  // 
In line 19  //// disable warnings 
In line 20  // 
In line 21  // 
In line 22  //#ifndef _FILTDEBUG__H 
In line 23  //#define _FILTDEBUG__H 
In line 24  // 
In line 25  //// 
In line 26  //// Message verbosity: lower values indicate higher urgency 
In line 27  //// 
In line 28  //#define DL_EXTRA_LOUD       20 
In line 29  //#define DL_VERY_LOUD        10 
In line 30  //#define DL_LOUD             8 
In line 31  //#define DL_INFO             6 
In line 32  //#define DL_TRACE            5 
In line 33  //#define DL_WARN             4 
In line 34  //#define DL_ERROR            2 
In line 35  //#define DL_FATAL            0 
In line 36  // 
In line 37  //#if DBG_SPIN_LOCK 
In line 38  // 
In line 39  //typedef struct _FILTER_LOCK 
In line 40  //{ 
In line 41  //    ULONG                   Signature; 
In line 42  //    ULONG                   IsAcquired; 
In line 43  //    ULONG                   TouchedByFileNumber; 
In line 44  //    ULONG                   TouchedInLineNumber; 
In line 45  //    NDIS_SPIN_LOCK          NdisLock; 
In line 46  //} FILTER_LOCK, *PFILTER_LOCK; 
In line 47  // 
In line 48  //#define FILT_LOCK_SIG    'kcoL' 
In line 49  // 
In line 50  //extern NDIS_SPIN_LOCK       filterDbgLogLock; 
In line 51  // 
In line 52  //extern 
In line 53  //VOID 
In line 54  //filterAllocateSpinLock( 
In line 55  //    IN  PFILTER_LOCK        pLock, 
In line 56  //    IN  ULONG               FileNumber, 
In line 57  //    IN  ULONG               LineNumber 
In line 58  //); 
In line 59  // 
In line 60  //extern 
In line 61  //VOID 
In line 62  //filterFreeSpinLock( 
In line 63  //    IN  PFILTER_LOCK        pLock 
In line 64  // 
In line 65  //); 
In line 66  // 
In line 67  // 
In line 68  //extern 
In line 69  //VOID 
In line 70  //filterAcquireSpinLock( 
In line 71  //    IN  PFILTER_LOCK        pLock, 
In line 72  //    IN  ULONG               FileNumber, 
In line 73  //    IN  ULONG               LineNumber, 
In line 74  //    IN  BOOLEAN             DispatchLevel 
In line 75  //); 
In line 76  // 
In line 77  //extern 
In line 78  //VOID 
In line 79  //filterReleaseSpinLock( 
In line 80  //    IN  PFILTER_LOCK        pLock, 
In line 81  //    IN  ULONG               FileNumber, 
In line 82  //    IN  ULONG               LineNumber, 
In line 83  //    IN  BOOLEAN             DispatchLevel 
In line 84  //); 
In line 85  // 
In line 86  // 
In line 87  //#else 
In line 88  // 
In line 89  //typedef NDIS_SPIN_LOCK      FILTER_LOCK; 
In line 90  //typedef PNDIS_SPIN_LOCK     PFILTER_LOCK; 
In line 91  // 
In line 92  //#endif    // DBG_SPIN_LOCK 
In line 93  // 
In line 94  //#if DBG 
In line 95  // 
In line 96  //extern INT                filterDebugLevel; 
In line 97  // 
In line 98  // 
In line 99  //#define DEBUGP(lev, ...)                                                \ 
In line 100  //        {                                                               \ 
In line 101  //            if ((lev) <= filterDebugLevel)                              \ 
In line 102  //            {                                                           \ 
In line 103  //                DbgPrint("NDISLWF: "); DbgPrint(__VA_ARGS__);           \ 
In line 104  //            }                                                           \ 
In line 105  //        } 
In line 106  // 
In line 107  //#define DEBUGPDUMP(lev, pBuf, Len)                                      \ 
In line 108  //        {                                                               \ 
In line 109  //            if ((lev) <= filterDebugLevel)                              \ 
In line 110  //            {                                                           \ 
In line 111  //                DbgPrintHexDump((PUCHAR)(pBuf), (ULONG)(Len));          \ 
In line 112  //            }                                                           \ 
In line 113  //        } 
In line 114  // 
In line 115  //#define FILTER_ASSERT(exp)                                              \ 
In line 116  //        {                                                               \ 
In line 117  //            if (!(exp))                                                 \ 
In line 118  //            {                                                           \ 
In line 119  //                DbgPrint("Filter: assert " #exp " failed in"            \ 
In line 120  //                    " file %s, line %d\n", __FILE__, __LINE__);         \ 
In line 121  //                DbgBreakPoint();                                        \ 
In line 122  //            }                                                           \ 
In line 123  //        } 
In line 124  // 
In line 125  // 
In line 126  // 
In line 127  //// 
In line 128  //// Memory Allocation/Freeing Audit: 
In line 129  //// 
In line 130  // 
In line 131  //// 
In line 132  //// The FILTER_ALLOCATION structure stores all info about one allocation 
In line 133  //// 
In line 134  //typedef struct _FILTERD_ALLOCATION { 
In line 135  // 
In line 136  //        ULONG                       Signature; 
In line 137  //        struct _FILTERD_ALLOCATION   *Next; 
In line 138  //        struct _FILTERD_ALLOCATION   *Prev; 
In line 139  //        ULONG                       FileNumber; 
In line 140  //        ULONG                       LineNumber; 
In line 141  //        ULONG                       Size; 
In line 142  //        NDIS_HANDLE                 OwnerHandle; 
In line 143  //        union 
In line 144  //        { 
In line 145  //            ULONGLONG               Alignment; 
In line 146  //            UCHAR                   UserData; 
In line 147  //        }; 
In line 148  // 
In line 149  //} FILTERD_ALLOCATION, *PFILTERD_ALLOCATION; 
In line 150  // 
In line 151  //#define FILTERD_MEMORY_SIGNATURE    (ULONG)'TFSM' 
In line 152  // 
In line 153  //extern 
In line 154  //PVOID 
In line 155  //filterAuditAllocMem ( 
In line 156  //    NDIS_HANDLE  NdisHandle, 
In line 157  //    ULONG        Size, 
In line 158  //    ULONG        FileNumber, 
In line 159  //    ULONG        LineNumber 
In line 160  //); 
In line 161  // 
In line 162  //extern 
In line 163  //VOID 
In line 164  //filterAuditFreeMem( 
In line 165  //    PVOID        Pointer 
In line 166  //); 
In line 167  // 
In line 168  //extern 
In line 169  //VOID 
In line 170  //filterAuditShutdown( 
In line 171  //    VOID 
In line 172  //); 
In line 173  // 
In line 174  //extern 
In line 175  //VOID 
In line 176  //DbgPrintHexDump( 
In line 177  //    PUCHAR        pBuffer, 
In line 178  //    ULONG        Length 
In line 179  //); 
In line 180  // 
In line 181  //#else 
In line 182  // 
In line 183  //// 
In line 184  //// No debug 
In line 185  //// 
In line 186  //#define DEBUGP(lev, ...) 
In line 187  //#define DEBUGPDUMP(lev, pBuf, Len) 
In line 188  // 
In line 189  //#define FILTER_ASSERT(exp) 
In line 190  // 
In line 191  //#endif    // DBG 
In line 192  // 
In line 193  // 
In line 194  //#endif // _FILTDEBUG__H 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracWin7SrcNew\Solution\Passthru.h  for analysis => 
In line 41  //через IRP мы передаём массив байт известного размера 
In line 42  //первый байт - код операции, остальные уже относятся к передаваемой информации 
In line 43  //дотупные операции: 
In line 44  //		изменить адрес и порт сервера 
In line 46  //		включить/выключить адрес 
In line 48  //		изменить/удалить добавляемую//удаляемую опцию 
In line 50  //		включить/выключить драйвер 
In line 52  //		изменить/получить всё сразу 
In line 54  //		обнулить правила 
In line 56  //		изменить подсчет чексуммы 
In line 59  //для опции нет структуры. Первый информативный байт задаёт длину опции, остальные - собственно опция 
In line 97  NDIS_HANDLE         FilterDriverHandle; // NDIS handle for filter driver 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracWin7SrcNew\Solution\precomp.h  for analysis => 
In line 0  #pragma warning(disable:4201)  //nonstandard extension used : nameless struct/union 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracWin7SrcNew\Solution\resource.h  for analysis => 
In line 0  //{{NO_DEPENDENCIES}} 
In line 1  // Включаемый файл, созданный в Microsoft Visual C++. 
In line 2  // Используется filter.rc 
In line 3  // 
In line 1561  // Next default values for new objects 
In line 1562  //  
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04c00\guard_lib\GExport.h  for analysis => 
In line 39  //namespace GuardNT_30 { 
In line 41  /////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 42  // Определения 
In line 43  /////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 44  // 
In line 45  // Структура ключевой информации 
In line 46  // 
In line 48      UCHAR    UserName[16];		// Имя пользователя 
In line 49      UCHAR    Password[16];		// Пароль пользователя 
In line 50      UCHAR    DomainName[16];	// Имя домена 
In line 51      ULONG    IdentType;			// Тип идентификатора 
In line 52      UCHAR    IdentSerNum[8];	// Номер идентификатора 
In line 54  // 
In line 55  // Гриф секретности 
In line 56  // 
In line 64  // 
In line 65  // Режим выполнения приложений 
In line 66  // 
In line 69      ExNormal,					// Обычный режим 
In line 70      ExSuper,					// Супер - процесс 
In line 71      ExInstall					// Инсталлятор 
In line 73  // 
In line 74  // Параметры запуска приложений 
In line 75  // 
In line 77      ParamNone,				// Не запрашивать текущий допуск 
In line 78      ParamDefault,			// Назначить допуск по умолчанию 
In line 79  					// Для неисполняемых файлов разрешить 
In line 80  					// сквозную запись по дискреционным правилам 
In line 81      ParamStart,				// Запросить допуск при старте 
In line 82      ParamCreateWindow			// Запросить допуск при создании окна 
In line 84  // 
In line 85  // Параметры для неисполняемых файлов 
In line 86  // 
In line 87  // Обход перекрестной проверки 
In line 88  // 
In line 90  // Гриф без проверки 
In line 92  // Виртуализация вложенных объектов 
In line 94  // 
In line 95  // Параметры дополнительного аудита 
In line 96  // 
In line 98      AuditNone,					// Нет аудита 
In line 99      AuditSuccess,				// Аудит успеха 
In line 100      AuditDenied,				// Аудит отказов 
In line 101      AuditFull					// Полный аудит 
In line 103  // 
In line 104  // Атрибуты безопасности файлов и каталогов 
In line 105  // 
In line 109        UCHAR Grif : 2;			// Гриф - для неисполняемых файлов 
In line 110  					// Допуск - для исполняемых файлов 
In line 111        UCHAR ExMode : 2;			// Режим запуска исполняемых файлов 
In line 112        UCHAR Param : 2;			// Не проверять доступ на запись к родительсим папкам 
In line 113  					// Запрашивать текущий допуск при старте 
In line 114        UCHAR Audit : 2;			// Дополнительный аудит 
In line 117  // 
In line 118  // Атрибуты проверки целостности 
In line 119  // 
In line 123  // Параметры проверки целостности 
In line 124        UCHAR CA_DateTime : 1;		// Проверка даты и времени изменения 
In line 125        UCHAR CA_Size : 1;		// Проверка размера файла 
In line 126        UCHAR CA_Crc : 1;			// Проверка по контрольной сумме 
In line 127  // Условия проверки целостности 
In line 128        UCHAR CA_Auto : 1;		// Проверять автоматически 
In line 129  // Действия в случае нарушения целостности 
In line 130        UCHAR CA_HaltOnError : 1;		// Останов системы 
In line 131        UCHAR CA_BlockFile: 1;		// Блокирование файла 
In line 132        UCHAR CA_AutoUpdate: 1;		// Автоматически обновлять CRC 
In line 133  // Признак для файлов системы защиты 
In line 134        UCHAR CA_SZI: 1;			// Файл системы защиты 
In line 137  // 
In line 138  // Коды событий контроля целостности 
In line 139  // 
In line 141      NotRequired,			// Проверка не требуется 
In line 142      AllRight,				// Все в порядке 
In line 143      BadCrc,					// Ошибка контрольной суммы 
In line 144      BadDateTime,			// Несовпадение даты изменения 
In line 145      BadSize,				// Несовпадение размера файла 
In line 146      FileNotFound,			// Файл не найден 
In line 147      OtherError,				// Ошибки при проверке целостности 
In line 148      GuardError				// Нарушение целостности файла СЗИ 
In line 187  // 
In line 188  // Типы идентификаторов 
In line 189  // 
In line 201  // 
In line 202  // Дополнительные параметры SECURITY_INFORMATION 
In line 203  // 
In line 214  //////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 215  // Функции 
In line 216  //////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 218  // 
In line 219  // Определить, установлена ли СЗИ "Страж NT" и, если установлена, ее версию 
In line 220  // 
In line 222  // 
In line 223  // Определить пользователя, вошедшего на компьютер 
In line 224  // 
In line 226  // 
In line 227  // Запустить процесс с текущим допуском 
In line 228  // 
In line 229  DWORD WINAPI GuardCreateProcess(LPCTSTR lpApplicationName,	// Имя запускаемого модуля 
In line 230  							LPTSTR lpCommandLine,									// Командная строка 
In line 231  							LPSECURITY_ATTRIBUTES lpProcessAttributes,				// Атрибуты безопасности процесса 
In line 232  							LPSECURITY_ATTRIBUTES lpThreadAttributes,				// Атрибуты безопасности потока 
In line 233  							BOOL bInheritHandles,									// Флаг наследования хэндла 
In line 234  							DWORD dwCreationFlags,									// Флаги создания 
In line 235  							LPVOID lpEnvironment,									// Новый блок переменных окружения 
In line 236  							LPCTSTR lpCurrentDirectory,								// Текущая папка 
In line 237  							LPSTARTUPINFO lpStartupInfo,							// Стартовая информация 
In line 238  							LPPROCESS_INFORMATION lpProcessInformation,				// Информация о новом процессе 
In line 239  							GRIF_TYPE CurrentGrif);									// Текущий гриф 
In line 240  // 
In line 241  // Установить/снять режим администрирования 
In line 242  // 
In line 244  // 
In line 245  // Определить, установлен ли режим администрирования 
In line 246  // 
In line 248  // 
In line 249  // Получить значение текущего и максимального допуска процесса 
In line 250  // 
In line 251  BOOLEAN WINAPI GuardGetCurrentGrif(HANDLE hProcess,				// Имя процесса 
In line 252  				PDWORD CurrentGrif,										// Текущий допуск 
In line 253  				PDWORD MaxGrif);										// Максимальный допуск 
In line 254  // 
In line 255  // Установить значение текущего допуска текущего процесса 
In line 256  // 
In line 257  BOOLEAN WINAPI GuardSetCurrentGrif(IN HANDLE hProcess, GRIF_TYPE CurrentGrif);		// Текущий допуск 
In line 259  } // extern "C" 
In line 260  //////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 261  // Классы 
In line 262  //////////////////////////////////////////////////////////////////////////////////////////////////// 
In line 263  // 
In line 264  // Класс безопасности файлового объекта 
In line 265  // 
In line 276  	// Получить SecAttr файла или папки 
In line 282  	// Установить SecAttr на файл или папку 
In line 288  	// Получить CrcAttr на файл 
In line 291  	// Установить CrcAttr на файл 
In line 294  	// Проверить целостность файла 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\aes.h  for analysis => 
In line 0  /* crypto/aes/aes.h -*- mode:C; c-file-style: "eay" -*- */ 
In line 1  /* ==================================================================== 
In line 2   * Copyright (c) 1998-2002 The OpenSSL Project.  All rights reserved. 
In line 3   * 
In line 4   * Redistribution and use in source and binary forms, with or without 
In line 5   * modification, are permitted provided that the following conditions 
In line 6   * are met: 
In line 7   * 
In line 8   * 1. Redistributions of source code must retain the above copyright 
In line 9   *    notice, this list of conditions and the following disclaimer.  
In line 10   * 
In line 11   * 2. Redistributions in binary form must reproduce the above copyright 
In line 12   *    notice, this list of conditions and the following disclaimer in 
In line 13   *    the documentation and/or other materials provided with the 
In line 14   *    distribution. 
In line 15   * 
In line 16   * 3. All advertising materials mentioning features or use of this 
In line 17   *    software must display the following acknowledgment: 
In line 18   *    "This product includes software developed by the OpenSSL Project 
In line 19   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 20   * 
In line 21   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 22   *    endorse or promote products derived from this software without 
In line 23   *    prior written permission. For written permission, please contact 
In line 24   *    openssl-core@openssl.org. 
In line 25   * 
In line 26   * 5. Products derived from this software may not be called "OpenSSL" 
In line 27   *    nor may "OpenSSL" appear in their names without prior written 
In line 28   *    permission of the OpenSSL Project. 
In line 29   * 
In line 30   * 6. Redistributions of any form whatsoever must retain the following 
In line 31   *    acknowledgment: 
In line 32   *    "This product includes software developed by the OpenSSL Project 
In line 33   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 34   * 
In line 35   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 36   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 37   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 38   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 39   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 40   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 41   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 42   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 43   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 44   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 45   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 46   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 47   * ==================================================================== 
In line 48   * 
In line 49   */ 
In line 19   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 33   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 65  /* Because array size can't be a const in C, the following two are macros. 
In line 66     Both sizes are in bytes. */ 
In line 74  /* This should be a hidden type, but EVP requires that the size be known */ 
In line 124  /* NB: the IV is _two_ blocks long */ 
In line 128  /* NB: the IV is _four_ blocks long */ 
In line 146  #endif /* !HEADER_AES_H */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\asn1.h  for analysis => 
In line 0  /* crypto/asn1/asn1.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 94  #define V_ASN1_APP_CHOOSE		-2	/* let the recipient choose */ 
In line 95  #define V_ASN1_OTHER			-3	/* used in ASN1_TYPE */ 
In line 96  #define V_ASN1_ANY			-4	/* used in ASN1 template code */ 
In line 98  #define V_ASN1_NEG			0x100	/* negative flag */ 
In line 102  #define V_ASN1_BOOLEAN			1	/**/ 
In line 117  #define V_ASN1_NUMERICSTRING		18	/**/ 
In line 120  #define V_ASN1_TELETEXSTRING		20	/* alias */ 
In line 121  #define V_ASN1_VIDEOTEXSTRING		21	/**/ 
In line 124  #define V_ASN1_GENERALIZEDTIME		24	/**/ 
In line 125  #define V_ASN1_GRAPHICSTRING		25	/**/ 
In line 126  #define V_ASN1_ISO64STRING		26	/**/ 
In line 127  #define V_ASN1_VISIBLESTRING		26	/* alias */ 
In line 128  #define V_ASN1_GENERALSTRING		27	/**/ 
In line 129  #define V_ASN1_UNIVERSALSTRING		28	/**/ 
In line 132  /* For use with d2i_ASN1_type_bytes() */ 
In line 153  /* For use with ASN1_mbstring_copy() */ 
In line 167  #define DECLARE_ASN1_SET_OF(type) /* filled in by mkstack.pl */ 
In line 168  #define IMPLEMENT_ASN1_SET_OF(type) /* nothing, no longer needed */ 
In line 170  /* We MUST make sure that, except for constness, asn1_ctx_st and 
In line 171     asn1_const_ctx are exactly the same.  Fortunately, as soon as 
In line 172     the old ASN1 parsing macros are gone, we can throw this away 
In line 173     as well... */ 
In line 176  	unsigned char *p;/* work char pointer */ 
In line 177  	int eos;	/* end of sequence read for indefinite encoding */ 
In line 178  	int error;	/* error code to use when returning an error */ 
In line 179  	int inf;	/* constructed if 0x20, indefinite is 0x21 */ 
In line 180  	int tag;	/* tag from last 'get object' */ 
In line 181  	int xclass;	/* class from last 'get object' */ 
In line 182  	long slen;	/* length of last 'get object' */ 
In line 183  	unsigned char *max; /* largest value of p allowed */ 
In line 184  	unsigned char *q;/* temporary variable */ 
In line 185  	unsigned char **pp;/* variable */ 
In line 186  	int line;	/* used in error processing */ 
In line 191  	const unsigned char *p;/* work char pointer */ 
In line 192  	int eos;	/* end of sequence read for indefinite encoding */ 
In line 193  	int error;	/* error code to use when returning an error */ 
In line 194  	int inf;	/* constructed if 0x20, indefinite is 0x21 */ 
In line 195  	int tag;	/* tag from last 'get object' */ 
In line 196  	int xclass;	/* class from last 'get object' */ 
In line 197  	long slen;	/* length of last 'get object' */ 
In line 198  	const unsigned char *max; /* largest value of p allowed */ 
In line 199  	const unsigned char *q;/* temporary variable */ 
In line 200  	const unsigned char **pp;/* variable */ 
In line 201  	int line;	/* used in error processing */ 
In line 204  /* These are used internally in the ASN1_OBJECT to keep track of 
In line 205   * whether the names and data need to be free()ed */ 
In line 206  #define ASN1_OBJECT_FLAG_DYNAMIC	 0x01	/* internal use */ 
In line 207  #define ASN1_OBJECT_FLAG_CRITICAL	 0x02	/* critical x509v3 object id */ 
In line 208  #define ASN1_OBJECT_FLAG_DYNAMIC_STRINGS 0x04	/* internal use */ 
In line 209  #define ASN1_OBJECT_FLAG_DYNAMIC_DATA 	 0x08	/* internal use */ 
In line 215  	const unsigned char *data;	/* data remains const after init */ 
In line 216  	int flags;	/* Should we free this one */ 
In line 219  #define ASN1_STRING_FLAG_BITS_LEFT 0x08 /* Set if 0x07 has bits left value */ 
In line 220  /* This indicates that the ASN1_STRING is not a real value but just a place 
In line 221   * holder for the location where indefinite length constructed data should 
In line 222   * be inserted in the memory buffer  
In line 223   */ 
In line 226  /* This flag is used by the CMS code to indicate that a string is not 
In line 227   * complete and is a place holder for content when it had all been  
In line 228   * accessed. The flag will be reset when content has been written to it. 
In line 229   */ 
In line 232  /* This flag is used by ASN1 code to indicate an ASN1_STRING is an MSTRING 
In line 233   * type. 
In line 234   */ 
In line 236  /* This is the base type that holds just about everything :-) */ 
In line 242  	/* The value of the following field depends on the type being 
In line 243  	 * held.  It is mostly being used for BIT_STRING so if the 
In line 244  	 * input data has a non-zero 'unused bits' value, it will be 
In line 245  	 * handled correctly */ 
In line 249  /* ASN1_ENCODING structure: this is used to save the received 
In line 250   * encoding of an ASN1 type. This is useful to get round 
In line 251   * problems with invalid encodings which can break signatures. 
In line 252   */ 
In line 256  	unsigned char *enc;	/* DER encoding */ 
In line 257  	long len;		/* Length of encoding */ 
In line 258  	int modified;		 /* set to 1 if 'enc' is invalid */ 
In line 261  /* Used with ASN1 LONG type: if a long is set to this it is omitted */ 
In line 280  /* size limits: this stuff is taken straight from RFC2459 */ 
In line 291  /* Declarations for template structures: for full definitions 
In line 292   * see asn1t.h 
In line 293   */ 
In line 296  /* This is just an opaque pointer */ 
In line 299  /* Declare ASN1 functions: the implement macro in in asn1t.h */ 
In line 363  /* The following macros and typedefs allow an ASN1_ITEM 
In line 364   * to be embedded in a structure and referenced. Since 
In line 365   * the ASN1_ITEM pointers need to be globally accessible 
In line 366   * (possibly from shared libraries) they may exist in 
In line 367   * different forms. On platforms that support it the 
In line 368   * ASN1_ITEM structure itself will be globally exported. 
In line 369   * Other platforms will export a function that returns 
In line 370   * an ASN1_ITEM pointer. 
In line 371   * 
In line 372   * To handle both cases transparently the macros below 
In line 373   * should be used instead of hard coding an ASN1_ITEM 
In line 374   * pointer in a structure. 
In line 375   * 
In line 376   * The structure will look like this: 
In line 377   * 
In line 378   * typedef struct SOMETHING_st { 
In line 379   *      ... 
In line 380   *      ASN1_ITEM_EXP *iptr; 
In line 381   *      ... 
In line 382   * } SOMETHING;  
In line 383   * 
In line 384   * It would be initialised as e.g.: 
In line 385   * 
In line 386   * SOMETHING somevar = {...,ASN1_ITEM_ref(X509),...}; 
In line 387   * 
In line 388   * and the actual pointer extracted with: 
In line 389   * 
In line 390   * const ASN1_ITEM *it = ASN1_ITEM_ptr(somevar.iptr); 
In line 391   * 
In line 392   * Finally an ASN1_ITEM pointer can be extracted from an 
In line 393   * appropriate reference with: ASN1_ITEM_rptr(X509). This 
In line 394   * would be used when a function takes an ASN1_ITEM * argument. 
In line 395   * 
In line 396   */ 
In line 400  /* ASN1_ITEM pointer exported type */ 
In line 403  /* Macro to obtain ASN1_ITEM pointer from exported type */ 
In line 406  /* Macro to include ASN1_ITEM pointer from base type */ 
In line 416  /* Platforms that can't easily handle shared global variables are declared 
In line 417   * as functions returning ASN1_ITEM pointers. 
In line 418   */ 
In line 420  /* ASN1_ITEM pointer exported type */ 
In line 423  /* Macro to obtain ASN1_ITEM pointer from exported type */ 
In line 426  /* Macro to include ASN1_ITEM pointer from base type */ 
In line 436  /* Parameters used by ASN1_STRING_print_ex() */ 
In line 438  /* These determine which characters to escape: 
In line 439   * RFC2253 special characters, control characters and 
In line 440   * MSB set characters 
In line 441   */ 
In line 448  /* This flag determines how we do escaping: normally 
In line 449   * RC2253 backslash only, set this to use backslash and 
In line 450   * quote. 
In line 451   */ 
In line 456  /* These three flags are internal use only. */ 
In line 458  /* Character is a valid PrintableString character */ 
In line 460  /* Character needs escaping if it is the first character */ 
In line 462  /* Character needs escaping if it is the last character */ 
In line 465  /* NB the internal flags are safely reused below by flags 
In line 466   * handled at the top level. 
In line 467   */ 
In line 469  /* If this is set we convert all character strings 
In line 470   * to UTF8 first  
In line 471   */ 
In line 475  /* If this is set we don't attempt to interpret content: 
In line 476   * just assume all strings are 1 byte per character. This 
In line 477   * will produce some pretty odd looking output! 
In line 478   */ 
In line 482  /* If this is set we include the string type in the output */ 
In line 485  /* This determines which strings to display and which to 
In line 486   * 'dump' (hex dump of content octets or DER encoding). We can 
In line 487   * only dump non character strings or everything. If we 
In line 488   * don't dump 'unknown' they are interpreted as character 
In line 489   * strings with 1 octet per character and are subject to 
In line 490   * the usual escaping options. 
In line 491   */ 
In line 496  /* These determine what 'dumping' does, we can dump the 
In line 497   * content octets or the DER encoding: both use the 
In line 498   * RFC2253 #XXXXX notation. 
In line 499   */ 
In line 503  /* All the string flags consistent with RFC2253, 
In line 504   * escaping control characters isn't essential in 
In line 505   * RFC2253 but it is advisable anyway. 
In line 506   */ 
In line 542  		/* set and sequence are left complete and still 
In line 543  		 * contain the set or sequence bytes */ 
In line 564  /* This is used to contain a list of bit names */ 
In line 577  /* Macros for string operations */ 
In line 769    /* for the is_set parameter to i2d_ASN1_SET */ 
In line 799    /* Since this is used to store all sorts of things, via macros, for now, make 
In line 800       its data void * */ 
In line 926  /* General */ 
In line 927  /* given a string, return the correct type, max is the maximum length */ 
In line 934  /* type is one or more of the B_ASN1_ values. */ 
In line 938  /* PARSING */ 
In line 942  /* SPECIALS */ 
In line 952  /* Used to implement other functions */ 
In line 967  /* ASN1 alloc/free macros for when a type is only used internally */ 
In line 1036  /* Used to load and write netscape format cert */ 
In line 1082  /* ASN1 template functions */ 
In line 1084  /* Old API compatible functions */ 
In line 1096  /* ASN1 Print flags */ 
In line 1098  /* Indicate missing OPTIONAL fields */ 
In line 1100  /* Mark start and end of SEQUENCE */ 
In line 1102  /* Mark start and end of SEQUENCE/SET OF */ 
In line 1104  /* Show the ASN1 type of primitives */ 
In line 1106  /* Don't show ASN1 type of ANY */ 
In line 1108  /* Don't show ASN1 type of MSTRINGs */ 
In line 1110  /* Don't show field names in SEQUENCE */ 
In line 1112  /* Show structure names of each SEQUENCE field */ 
In line 1114  /* Don't show structure name even at top level */ 
In line 1149  /* BEGIN ERROR CODES */ 
In line 1150  /* The following lines are auto generated by the script mkerr.pl. Any changes 
In line 1151   * made after this point may be overwritten when the script is next run. 
In line 1152   */ 
In line 1155  /* Error codes for the ASN1 functions. */ 
In line 1157  /* Function codes. */ 
In line 1280  /* Reason codes. */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\asn1t.h  for analysis => 
In line 0  /* asn1t.h */ 
In line 1  /* Written by Dr Stephen N Henson (steve@openssl.org) for the OpenSSL 
In line 2   * project 2000. 
In line 3   */ 
In line 4  /* ==================================================================== 
In line 5   * Copyright (c) 2000-2005 The OpenSSL Project.  All rights reserved. 
In line 6   * 
In line 7   * Redistribution and use in source and binary forms, with or without 
In line 8   * modification, are permitted provided that the following conditions 
In line 9   * are met: 
In line 10   * 
In line 11   * 1. Redistributions of source code must retain the above copyright 
In line 12   *    notice, this list of conditions and the following disclaimer.  
In line 13   * 
In line 14   * 2. Redistributions in binary form must reproduce the above copyright 
In line 15   *    notice, this list of conditions and the following disclaimer in 
In line 16   *    the documentation and/or other materials provided with the 
In line 17   *    distribution. 
In line 18   * 
In line 19   * 3. All advertising materials mentioning features or use of this 
In line 20   *    software must display the following acknowledgment: 
In line 21   *    "This product includes software developed by the OpenSSL Project 
In line 22   *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)" 
In line 23   * 
In line 24   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 25   *    endorse or promote products derived from this software without 
In line 26   *    prior written permission. For written permission, please contact 
In line 27   *    licensing@OpenSSL.org. 
In line 28   * 
In line 29   * 5. Products derived from this software may not be called "OpenSSL" 
In line 30   *    nor may "OpenSSL" appear in their names without prior written 
In line 31   *    permission of the OpenSSL Project. 
In line 32   * 
In line 33   * 6. Redistributions of any form whatsoever must retain the following 
In line 34   *    acknowledgment: 
In line 35   *    "This product includes software developed by the OpenSSL Project 
In line 36   *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)" 
In line 37   * 
In line 38   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 39   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 40   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 41   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 42   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 43   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 44   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 45   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 46   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 47   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 48   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 49   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 50   * ==================================================================== 
In line 51   * 
In line 52   * This product includes cryptographic software written by Eric Young 
In line 53   * (eay@cryptsoft.com).  This product includes software written by Tim 
In line 54   * Hudson (tjh@cryptsoft.com). 
In line 55   * 
In line 56   */ 
In line 22   *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)" 
In line 36   *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)" 
In line 69  /* ASN1 template defines, structures and functions */ 
In line 78  /* Macro to obtain ASN1_ADB pointer from a type (only used internally) */ 
In line 82  /* Macros for start and end of ASN1_ITEM definition */ 
In line 92  /* Macro to obtain ASN1_ADB pointer from a type (only used internally) */ 
In line 96  /* Macros for start and end of ASN1_ITEM definition */ 
In line 111  /* Macros to aid ASN1 template writing */ 
In line 129  /* This is a ASN1 type which just embeds a template */ 
In line 131  /* This pair helps declare a SEQUENCE. We can do: 
In line 132   * 
In line 133   * 	ASN1_SEQUENCE(stname) = { 
In line 134   * 		... SEQUENCE components ... 
In line 135   * 	} ASN1_SEQUENCE_END(stname) 
In line 136   * 
In line 137   * 	This will produce an ASN1_ITEM called stname_it 
In line 138   *	for a structure called stname. 
In line 139   * 
In line 140   * 	If you want the same structure but a different 
In line 141   *	name then use: 
In line 142   * 
In line 143   * 	ASN1_SEQUENCE(itname) = { 
In line 144   * 		... SEQUENCE components ... 
In line 145   * 	} ASN1_SEQUENCE_END_name(stname, itname) 
In line 146   * 
In line 147   *	This will create an item called itname_it using 
In line 148   *	a structure called stname. 
In line 149   */ 
In line 233  /* This pair helps declare a CHOICE type. We can do: 
In line 234   * 
In line 235   * 	ASN1_CHOICE(chname) = { 
In line 236   * 		... CHOICE options ... 
In line 237   * 	ASN1_CHOICE_END(chname) 
In line 238   * 
In line 239   * 	This will produce an ASN1_ITEM called chname_it 
In line 240   *	for a structure called chname. The structure 
In line 241   *	definition must look like this: 
In line 242   *	typedef struct { 
In line 243   *		int type; 
In line 244   *		union { 
In line 245   *			ASN1_SOMETHING *opt1; 
In line 246   *			ASN1_SOMEOTHER *opt2; 
In line 247   *		} value; 
In line 248   *	} chname; 
In line 249   *	 
In line 250   *	the name of the selector must be 'type'. 
In line 251   * 	to use an alternative selector name use the 
In line 252   *      ASN1_CHOICE_END_selector() version. 
In line 253   */ 
In line 290  /* This helps with the template wrapper form of ASN1_ITEM */ 
In line 296  /* These help with SEQUENCE or CHOICE components */ 
In line 298  /* used to declare other types */ 
In line 304  /* used when the structure is combined with the parent */ 
In line 309  /* implicit and explicit helper macros */ 
In line 317  /* Any defined by macros: the field used is in the table itself */ 
In line 326  /* Plain simple type */ 
In line 329  /* OPTIONAL simple type */ 
In line 332  /* IMPLICIT tagged simple type */ 
In line 335  /* IMPLICIT tagged OPTIONAL simple type */ 
In line 338  /* Same as above but EXPLICIT */ 
In line 343  /* SEQUENCE OF type */ 
In line 347  /* OPTIONAL SEQUENCE OF */ 
In line 351  /* Same as above but for SET OF */ 
In line 359  /* Finally compound types of SEQUENCE, SET, IMPLICIT, EXPLICIT and OPTIONAL */ 
In line 385  /* EXPLICIT using indefinite length constructed form */ 
In line 389  /* EXPLICIT OPTIONAL using indefinite length constructed form */ 
In line 393  /* Macros for the ASN1_ADB structure */ 
In line 439  /* This is the ASN1 template structure that defines 
In line 440   * a wrapper round the actual type. It determines the 
In line 441   * actual position of the field in the value structure, 
In line 442   * various flags such as OPTIONAL and the field name. 
In line 443   */ 
In line 446  unsigned long flags;		/* Various flags */ 
In line 447  long tag;			/* tag, not used if no tagging */ 
In line 448  unsigned long offset;		/* Offset of this field in structure */ 
In line 450  const char *field_name;		/* Field name */ 
In line 452  ASN1_ITEM_EXP *item;		/* Relevant ASN1_ITEM or ASN1_ADB */ 
In line 455  /* Macro to extract ASN1_ITEM and ASN1_ADB pointer from ASN1_TEMPLATE */ 
In line 464  	unsigned long flags;	/* Various flags */ 
In line 465  	unsigned long offset;	/* Offset of selector field */ 
In line 466  	STACK_OF(ASN1_ADB_TABLE) **app_items; /* Application defined items */ 
In line 467  	const ASN1_ADB_TABLE *tbl;	/* Table of possible types */ 
In line 468  	long tblcount;		/* Number of entries in tbl */ 
In line 469  	const ASN1_TEMPLATE *default_tt;  /* Type to use if no match */ 
In line 470  	const ASN1_TEMPLATE *null_tt;  /* Type to use if selector is NULL */ 
In line 474  	long value;		/* NID for an object or value for an int */ 
In line 475  	const ASN1_TEMPLATE tt;		/* item for this value */ 
In line 478  /* template flags */ 
In line 480  /* Field is optional */ 
In line 483  /* Field is a SET OF */ 
In line 486  /* Field is a SEQUENCE OF */ 
In line 489  /* Special case: this refers to a SET OF that 
In line 490   * will be sorted into DER order when encoded *and* 
In line 491   * the corresponding STACK will be modified to match 
In line 492   * the new order. 
In line 493   */ 
In line 496  /* Mask for SET OF or SEQUENCE OF */ 
In line 499  /* These flags mean the tag should be taken from the 
In line 500   * tag field. If EXPLICIT then the underlying type 
In line 501   * is used for the inner tag. 
In line 502   */ 
In line 504  /* IMPLICIT tagging */ 
In line 508  /* EXPLICIT tagging, inner tag from underlying type */ 
In line 513  /* context specific IMPLICIT */ 
In line 516  /* context specific EXPLICIT */ 
In line 519  /* If tagging is in force these determine the 
In line 520   * type of tag to use. Otherwise the tag is 
In line 521   * determined by the underlying type. These  
In line 522   * values reflect the actual octet format. 
In line 523   */ 
In line 525  /* Universal tag */  
In line 527  /* Application tag */  
In line 529  /* Context specific tag */  
In line 531  /* Private tag */  
In line 536  /* These are for ANY DEFINED BY type. In this case 
In line 537   * the 'item' field points to an ASN1_ADB structure 
In line 538   * which contains a table of values to decode the 
In line 539   * relevant type 
In line 540   */ 
In line 548  /* This flag means a parent structure is passed 
In line 549   * instead of the field: this is useful is a 
In line 550   * SEQUENCE is being combined with a CHOICE for 
In line 551   * example. Since this means the structure and 
In line 552   * item name will differ we need to use the 
In line 553   * ASN1_CHOICE_END_name() macro for example. 
In line 554   */ 
In line 558  /* This flag when present in a SEQUENCE OF, SET OF 
In line 559   * or EXPLICIT causes indefinite length constructed 
In line 560   * encoding to be used if required. 
In line 561   */ 
In line 565  /* This is the actual ASN1 item itself */ 
In line 568  char itype;			/* The item type, primitive, SEQUENCE, CHOICE or extern */ 
In line 569  long utype;			/* underlying type */ 
In line 570  const ASN1_TEMPLATE *templates;	/* If SEQUENCE or CHOICE this contains the contents */ 
In line 571  long tcount;			/* Number of templates if SEQUENCE or CHOICE */ 
In line 572  const void *funcs;		/* functions that handle this type */ 
In line 573  long size;			/* Structure size (usually)*/ 
In line 575  const char *sname;		/* Structure name */ 
In line 579  /* These are values for the itype field and 
In line 580   * determine how the type is interpreted. 
In line 581   * 
In line 582   * For PRIMITIVE types the underlying type 
In line 583   * determines the behaviour if items is NULL. 
In line 584   * 
In line 585   * Otherwise templates must contain a single  
In line 586   * template and the type is treated in the 
In line 587   * same way as the type specified in the template. 
In line 588   * 
In line 589   * For SEQUENCE types the templates field points 
In line 590   * to the members, the size field is the 
In line 591   * structure size. 
In line 592   * 
In line 593   * For CHOICE types the templates field points 
In line 594   * to each possible member (typically a union) 
In line 595   * and the 'size' field is the offset of the 
In line 596   * selector. 
In line 597   * 
In line 598   * The 'funcs' field is used for application 
In line 599   * specific functions.  
In line 600   * 
In line 601   * For COMPAT types the funcs field gives a 
In line 602   * set of functions that handle this type, this 
In line 603   * supports the old d2i, i2d convention. 
In line 604   * 
In line 605   * The EXTERN type uses a new style d2i/i2d. 
In line 606   * The new style should be used where possible 
In line 607   * because it avoids things like the d2i IMPLICIT 
In line 608   * hack. 
In line 609   * 
In line 610   * MSTRING is a multiple string type, it is used 
In line 611   * for a CHOICE of character strings where the 
In line 612   * actual strings all occupy an ASN1_STRING 
In line 613   * structure. In this case the 'utype' field 
In line 614   * has a special meaning, it is used as a mask 
In line 615   * of acceptable types using the B_ASN1 constants. 
In line 616   * 
In line 617   * NDEF_SEQUENCE is the same as SEQUENCE except 
In line 618   * that it will use indefinite length constructed 
In line 619   * encoding if requested. 
In line 620   * 
In line 621   */ 
In line 637  /* Cache for ASN1 tag and length, so we 
In line 638   * don't keep re-reading it for things 
In line 639   * like CHOICE 
In line 640   */ 
In line 643  	char valid;	/* Values below are valid */ 
In line 644  	int ret;	/* return value */ 
In line 645  	long plen;	/* length */ 
In line 646  	int ptag;	/* class value */ 
In line 647  	int pclass;	/* class value */ 
In line 648  	int hdrlen;	/* header length */ 
In line 651  /* Typedefs for ASN1 function pointers */ 
In line 701  /* This is the ASN1_AUX structure: it handles various 
In line 702   * miscellaneous requirements. For example the use of 
In line 703   * reference counts and an informational callback. 
In line 704   * 
In line 705   * The "informational callback" is called at various 
In line 706   * points during the ASN1 encoding and decoding. It can 
In line 707   * be used to provide minor customisation of the structures 
In line 708   * used. This is most useful where the supplied routines 
In line 709   * *almost* do the right thing but need some extra help 
In line 710   * at a few points. If the callback returns zero then 
In line 711   * it is assumed a fatal error has occurred and the  
In line 712   * main operation should be abandoned. 
In line 713   * 
In line 714   * If major changes in the default behaviour are required 
In line 715   * then an external type is more appropriate. 
In line 716   */ 
In line 724  	int ref_offset;		/* Offset of reference value */ 
In line 725  	int ref_lock;		/* Lock type to use */ 
In line 727  	int enc_offset;		/* Offset of ASN1_ENCODING structure */ 
In line 730  /* For print related callbacks exarg points to this structure */ 
In line 737  /* For streaming related callbacks exarg points to this structure */ 
In line 739  	/* BIO to stream through */ 
In line 741  	/* BIO with filters appended */ 
In line 743  	/* Streaming I/O boundary */ 
In line 747  /* Flags in ASN1_AUX */ 
In line 749  /* Use a reference count */ 
In line 751  /* Save the encoding of structure (useful for signatures) */ 
In line 753  /* The Sequence length is invalid */ 
In line 756  /* operation values for asn1_cb */ 
In line 773  /* Macro to implement a primitive type */ 
In line 780  /* Macro to implement a multi string type */ 
In line 786  /* Macro to implement an ASN1_ITEM in terms of old style funcs */ 
In line 818  /* Macro to implement standard functions in terms of ASN1_ITEM structures */ 
In line 873  /* This includes evil casts to remove const: they will go away when full 
In line 874   * ASN1 constification is done. 
In line 875   */ 
In line 910  /* external definitions for primitive types */ 
In line 923  /* Functions used internally by the ASN1 code */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\asn1_mac.h  for analysis => 
In line 0  /* crypto/asn1/asn1_mac.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 108  /* Begin reading ASN1 without a surrounding sequence */ 
In line 112  /* End reading ASN1 with no check on length */ 
In line 127  /* Don't use this with d2i_ASN1_BOOLEAN() */ 
In line 134  /* Don't use this with d2i_ASN1_BOOLEAN() */ 
In line 141  /* use this instead () */ 
In line 354  /* New macros */ 
In line 363  /*	err:	ASN1_MAC_H_err((a),ERR_R_NESTED_ASN1_ERROR,c.line); \ 
In line 364  		return(NULL);*/ \ 
In line 369  /* BIG UGLY WARNING!  This is so damn ugly I wanna puke.  Unfortunately, 
In line 370     some macros that use ASN1_const_CTX still insist on writing in the input 
In line 371     stream.  ARGH!  ARGH!  ARGH!  Let's get rid of this macro package. 
In line 372     Please?						-- Richard Levitte */ 
In line 376  /*************************************************/ 
In line 382  /* Length Macros */ 
In line 472  /* Put Macros */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\bio.h  for analysis => 
In line 0  /* crypto/bio/bio.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 82  /* These are the 'types' of BIOs */ 
In line 91  #define BIO_TYPE_MD		(8|0x0200)		/* passive filter */ 
In line 92  #define BIO_TYPE_BUFFER		(9|0x0200)		/* filter */ 
In line 93  #define BIO_TYPE_CIPHER		(10|0x0200)		/* filter */ 
In line 94  #define BIO_TYPE_BASE64		(11|0x0200)		/* filter */ 
In line 95  #define BIO_TYPE_CONNECT	(12|0x0400|0x0100)	/* socket - connect */ 
In line 96  #define BIO_TYPE_ACCEPT		(13|0x0400|0x0100)	/* socket for accept */ 
In line 97  #define BIO_TYPE_PROXY_CLIENT	(14|0x0200)		/* client proxy BIO */ 
In line 98  #define BIO_TYPE_PROXY_SERVER	(15|0x0200)		/* server proxy BIO */ 
In line 99  #define BIO_TYPE_NBIO_TEST	(16|0x0200)		/* server proxy BIO */ 
In line 101  #define BIO_TYPE_BER		(18|0x0200)		/* BER -> bin filter */ 
In line 102  #define BIO_TYPE_BIO		(19|0x0400)		/* (half a) BIO pair */ 
In line 103  #define BIO_TYPE_LINEBUFFER	(20|0x0200)		/* filter */ 
In line 108  #define BIO_TYPE_ASN1 		(22|0x0200)		/* filter */ 
In line 109  #define BIO_TYPE_COMP 		(23|0x0200)		/* filter */ 
In line 111  #define BIO_TYPE_DESCRIPTOR	0x0100	/* socket, fd, connect or accept */ 
In line 115  /* BIO_FILENAME_READ|BIO_CLOSE to open or close on free. 
In line 116   * BIO_set_fp(in,stdin,BIO_NOCLOSE); */ 
In line 120  /* These are used in the following macros and are passed to 
In line 121   * BIO_ctrl() */ 
In line 122  #define BIO_CTRL_RESET		1  /* opt - rewind/zero etc */ 
In line 123  #define BIO_CTRL_EOF		2  /* opt - are we at the eof */ 
In line 124  #define BIO_CTRL_INFO		3  /* opt - extra tit-bits */ 
In line 125  #define BIO_CTRL_SET		4  /* man - set the 'IO' type */ 
In line 126  #define BIO_CTRL_GET		5  /* man - get the 'IO' type */ 
In line 127  #define BIO_CTRL_PUSH		6  /* opt - internal, used to signify change */ 
In line 128  #define BIO_CTRL_POP		7  /* opt - internal, used to signify change */ 
In line 129  #define BIO_CTRL_GET_CLOSE	8  /* man - set the 'close' on free */ 
In line 130  #define BIO_CTRL_SET_CLOSE	9  /* man - set the 'close' on free */ 
In line 131  #define BIO_CTRL_PENDING	10  /* opt - is their more data buffered */ 
In line 132  #define BIO_CTRL_FLUSH		11  /* opt - 'flush' buffered output */ 
In line 133  #define BIO_CTRL_DUP		12  /* man - extra stuff for 'duped' BIO */ 
In line 134  #define BIO_CTRL_WPENDING	13  /* opt - number of bytes still to write */ 
In line 135  /* callback is int cb(BIO *bio,state,ret); */ 
In line 136  #define BIO_CTRL_SET_CALLBACK	14  /* opt - set callback function */ 
In line 137  #define BIO_CTRL_GET_CALLBACK	15  /* opt - set callback function */ 
In line 139  #define BIO_CTRL_SET_FILENAME	30	/* BIO_s_file special */ 
In line 141  /* dgram BIO stuff */ 
In line 142  #define BIO_CTRL_DGRAM_CONNECT       31  /* BIO dgram special */ 
In line 143  #define BIO_CTRL_DGRAM_SET_CONNECTED 32  /* allow for an externally 
In line 144  					  * connected socket to be 
In line 145  					  * passed in */  
In line 146  #define BIO_CTRL_DGRAM_SET_RECV_TIMEOUT 33 /* setsockopt, essentially */ 
In line 147  #define BIO_CTRL_DGRAM_GET_RECV_TIMEOUT 34 /* getsockopt, essentially */ 
In line 148  #define BIO_CTRL_DGRAM_SET_SEND_TIMEOUT 35 /* setsockopt, essentially */ 
In line 149  #define BIO_CTRL_DGRAM_GET_SEND_TIMEOUT 36 /* getsockopt, essentially */ 
In line 151  #define BIO_CTRL_DGRAM_GET_RECV_TIMER_EXP 37 /* flag whether the last */ 
In line 152  #define BIO_CTRL_DGRAM_GET_SEND_TIMER_EXP 38 /* I/O operation tiemd out */ 
In line 154  /* #ifdef IP_MTU_DISCOVER */ 
In line 155  #define BIO_CTRL_DGRAM_MTU_DISCOVER       39 /* set DF bit on egress packets */ 
In line 156  /* #endif */ 
In line 158  #define BIO_CTRL_DGRAM_QUERY_MTU          40 /* as kernel for current MTU */ 
In line 160  #define BIO_CTRL_DGRAM_GET_MTU            41 /* get cached value for MTU */ 
In line 161  #define BIO_CTRL_DGRAM_SET_MTU            42 /* set cached value for 
In line 162  					      * MTU. want to use this 
In line 163  					      * if asking the kernel 
In line 164  					      * fails */ 
In line 166  #define BIO_CTRL_DGRAM_MTU_EXCEEDED       43 /* check whether the MTU 
In line 167  					      * was exceed in the 
In line 168  					      * previous write 
In line 169  					      * operation */ 
In line 172  #define BIO_CTRL_DGRAM_SET_PEER           44 /* Destination for the data */ 
In line 174  #define BIO_CTRL_DGRAM_SET_NEXT_TIMEOUT   45 /* Next DTLS handshake timeout to 
In line 175                                                * adjust socket timeouts */ 
In line 178  /* SCTP stuff */ 
In line 192  /* modifiers */ 
In line 204  /* "UPLINK" flag denotes file descriptors provided by application. 
In line 205     It defaults to 0, as most platforms don't require UPLINK interface. */ 
In line 209  /* Used in BIO_gethostbyname() */ 
In line 216  /* Mostly used in the SSL BIO */ 
In line 217  /* Not used anymore 
In line 218   * #define BIO_FLAGS_PROTOCOL_DELAYED_READ 0x10 
In line 219   * #define BIO_FLAGS_PROTOCOL_DELAYED_WRITE 0x20 
In line 220   * #define BIO_FLAGS_PROTOCOL_STARTUP	0x40 
In line 221   */ 
In line 225  /* This is used with memory BIOs: it means we shouldn't free up or change the 
In line 226   * data in any way. 
In line 227   */ 
In line 244  /* These are normally used internally in BIOs */ 
In line 250  /* These should be used by the application to tell why we should retry */ 
In line 257  /* The next three are used in conjunction with the 
In line 258   * BIO_should_io_special() condition.  After this returns true, 
In line 259   * BIO *BIO_get_retry_BIO(BIO *bio, int *reason); will walk the BIO  
In line 260   * stack and return the 'reason' for the special and the offending BIO. 
In line 261   * Given a BIO, BIO_get_retry_reason(bio) will return the code. */ 
In line 262  /* Returned from the SSL bio when the certificate retrieval code had an error */ 
In line 264  /* Returned from the connect BIO when a connect would have blocked */ 
In line 266  /* Returned from the accept BIO when an accept would have blocked */ 
In line 269  /* These are passed by the BIO callback */ 
In line 277  /* The callback is called before and after the underling operation, 
In line 278   * The BIO_CB_RETURN flag indicates if it is after the call */ 
In line 312  	/* bio, mode, argp, argi, argl, ret */ 
In line 314  	char *cb_arg; /* first argument for the callback */ 
In line 318  	int flags;	/* extra storage */ 
In line 322  	struct bio_st *next_bio;	/* used by filter BIOs */ 
In line 323  	struct bio_st *prev_bio;	/* used by filter BIOs */ 
In line 335  	/* Buffers are setup like this: 
In line 336  	 * 
In line 337  	 * <---------------------- size -----------------------> 
In line 338  	 * +---------------------------------------------------+ 
In line 339  	 * | consumed | remaining          | free space        | 
In line 340  	 * +---------------------------------------------------+ 
In line 341  	 * <-- off --><------- len -------> 
In line 342  	 */ 
In line 344  	/* BIO *bio; */ /* this is now in the BIO struct */ 
In line 345  	int ibuf_size;	/* how big is the input buffer */ 
In line 346  	int obuf_size;	/* how big is the output buffer */ 
In line 348  	char *ibuf;		/* the char array */ 
In line 349  	int ibuf_len;		/* how many bytes are in it */ 
In line 350  	int ibuf_off;		/* write/read offset */ 
In line 352  	char *obuf;		/* the char array */ 
In line 353  	int obuf_len;		/* how many bytes are in it */ 
In line 354  	int obuf_off;		/* write/read offset */ 
In line 357  /* Prefix and suffix callback in ASN1 BIO */ 
In line 361  /* SCTP parameter structs */ 
In line 388  /* connect BIO stuff */ 
In line 397  /*#define BIO_CONN_get_param_hostname	BIO_ctrl */ 
In line 421  #define BIO_C_SET_BUFF_READ_DATA		122 /* data to read first */ 
In line 429  #define BIO_C_SET_BUF_MEM_EOF_RETURN		130/*return end of input value*/ 
In line 436  #define BIO_C_SET_WRITE_BUF_SIZE		136/* for BIO_s_bio */ 
In line 461  /* BIO_s_connect() and BIO_s_socks4a_connect() */ 
In line 474  /* BIO_s_accept_socket() */ 
In line 477  /* #define BIO_set_nbio(b,n)	BIO_ctrl(b,BIO_C_SET_NBIO,(n),NULL) */ 
In line 491  /* BIO_s_proxy_client() */ 
In line 494  /* BIO_set_nbio(b,n) */ 
In line 496  /* BIO *BIO_get_filter_bio(BIO *bio); */ 
In line 515  /* name is cast to lose const, but might be better to route through a function 
In line 516     so we can do it safely */ 
In line 518  /* If you are wondering why this isn't defined, its because CONST_STRICT is 
In line 519   * purely a compile-time kludge to allow const to be checked. 
In line 520   */ 
In line 533  /* WARNING WARNING, this ups the reference count on the read bio of the 
In line 534   * SSL structure.  This is because the ssl read BIO is now pointed to by 
In line 535   * the next_bio field in the bio.  So when you free the BIO, make sure 
In line 536   * you are doing a BIO_free_all() to catch the underlying BIO. */ 
In line 547  /* defined in evp.h */ 
In line 548  /* #define BIO_set_md(b,md)	BIO_ctrl(b,BIO_C_SET_MD,1,(char *)md) */ 
In line 556  /* For the BIO_f_buffer() type */ 
In line 563  /* Don't use the next one unless you know what you are doing :-) */ 
In line 572  /* ...pending macros have inappropriate return type */ 
In line 580  /* For the BIO_f_buffer() type */ 
In line 583  /* For BIO_s_bio() */ 
In line 589  /* macros with inappropriate type -- but ...pending macros use int too: */ 
In line 596  /* ctrl macros for dgram */ 
In line 610  /* These two aren't currently implemented */ 
In line 611  /* int BIO_get_ex_num(BIO *bio); */ 
In line 612  /* void BIO_set_ex_free_func(BIO *bio,int idx,void (*cb)()); */ 
In line 620  /* For BIO_f_asn1() */ 
In line 690  /* BIO_METHOD *BIO_f_ber(void); */ 
In line 709  /* We might want a thread-safe interface too: 
In line 710   * struct hostent *BIO_gethostbyname_r(const char *name, 
In line 711   *     struct hostent *result, void *buffer, size_t buflen); 
In line 712   * or something similar (caller allocates a struct hostent, 
In line 713   * pointed to by "result", and additional buffer space for the various 
In line 714   * substructures; if the buffer does not suffice, NULL is returned 
In line 715   * and an appropriate error code is set). 
In line 716   */ 
In line 745  /* If successful, returns 1 and in *bio1, *bio2 two BIO pair endpoints. 
In line 746   * Otherwise returns 0 and sets *bio1 and *bio2 to NULL. 
In line 747   * Size 0 uses default value. 
In line 748   */ 
In line 752  /*long BIO_ghbn_ctrl(int cmd,int iarg,char *parg);*/ 
In line 769  /* BEGIN ERROR CODES */ 
In line 770  /* The following lines are auto generated by the script mkerr.pl. Any changes 
In line 771   * made after this point may be overwritten when the script is next run. 
In line 772   */ 
In line 775  /* Error codes for the BIO functions. */ 
In line 777  /* Function codes. */ 
In line 812  /* Reason codes. */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\blowfish.h  for analysis => 
In line 0  /* crypto/bf/blowfish.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 74  /* 
In line 75   * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
In line 76   * ! BF_LONG has to be at least 32 bits wide. If it's wider, then ! 
In line 77   * ! BF_LONG_LOG2 has to be defined along.                        ! 
In line 78   * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
In line 79   */ 
In line 86  /* 
In line 87   * _CRAY note. I could declare short, but I have no idea what impact 
In line 88   * does it have on performance on none-T3E machines. I could declare 
In line 89   * int, but at least on C90 sizeof(int) can be chosen at compile time. 
In line 90   * So I've chosen long... 
In line 91   *					<appro@fy.chalmers.se> 
In line 92   */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\bn.h  for analysis => 
In line 0  /* crypto/bn/bn.h */ 
In line 1  /* Copyright (C) 1995-1997 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 57  /* ==================================================================== 
In line 58   * Copyright (c) 1998-2006 The OpenSSL Project.  All rights reserved. 
In line 59   * 
In line 60   * Redistribution and use in source and binary forms, with or without 
In line 61   * modification, are permitted provided that the following conditions 
In line 62   * are met: 
In line 63   * 
In line 64   * 1. Redistributions of source code must retain the above copyright 
In line 65   *    notice, this list of conditions and the following disclaimer.  
In line 66   * 
In line 67   * 2. Redistributions in binary form must reproduce the above copyright 
In line 68   *    notice, this list of conditions and the following disclaimer in 
In line 69   *    the documentation and/or other materials provided with the 
In line 70   *    distribution. 
In line 71   * 
In line 72   * 3. All advertising materials mentioning features or use of this 
In line 73   *    software must display the following acknowledgment: 
In line 74   *    "This product includes software developed by the OpenSSL Project 
In line 75   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 76   * 
In line 77   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 78   *    endorse or promote products derived from this software without 
In line 79   *    prior written permission. For written permission, please contact 
In line 80   *    openssl-core@openssl.org. 
In line 81   * 
In line 82   * 5. Products derived from this software may not be called "OpenSSL" 
In line 83   *    nor may "OpenSSL" appear in their names without prior written 
In line 84   *    permission of the OpenSSL Project. 
In line 85   * 
In line 86   * 6. Redistributions of any form whatsoever must retain the following 
In line 87   *    acknowledgment: 
In line 88   *    "This product includes software developed by the OpenSSL Project 
In line 89   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 90   * 
In line 91   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 92   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 93   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 94   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 95   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 96   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 97   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 98   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 99   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 100   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 101   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 102   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 103   * ==================================================================== 
In line 104   * 
In line 105   * This product includes cryptographic software written by Eric Young 
In line 106   * (eay@cryptsoft.com).  This product includes software written by Tim 
In line 107   * Hudson (tjh@cryptsoft.com). 
In line 108   * 
In line 109   */ 
In line 75   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 89   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 110  /* ==================================================================== 
In line 111   * Copyright 2002 Sun Microsystems, Inc. ALL RIGHTS RESERVED. 
In line 112   * 
In line 113   * Portions of the attached software ("Contribution") are developed by  
In line 114   * SUN MICROSYSTEMS, INC., and are contributed to the OpenSSL project. 
In line 115   * 
In line 116   * The Contribution is licensed pursuant to the Eric Young open source 
In line 117   * license provided above. 
In line 118   * 
In line 119   * The binary polynomial arithmetic software is originally written by  
In line 120   * Sheueling Chang Shantz and Douglas Stebila of Sun Microsystems Laboratories. 
In line 121   * 
In line 122   */ 
In line 129  #include <stdio.h> /* FILE */ 
In line 138  /* These preprocessor symbols control various aspects of the bignum headers and 
In line 139   * library code. They're not defined by any "normal" configuration, as they are 
In line 140   * intended for development and testing purposes. NB: defining all three can be 
In line 141   * useful for debugging application code as well as openssl itself. 
In line 142   * 
In line 143   * BN_DEBUG - turn on various debugging alterations to the bignum code 
In line 144   * BN_DEBUG_RAND - uses random poisoning of unused words to trip up 
In line 145   * mismanagement of bignum internals. You must also define BN_DEBUG. 
In line 146   */ 
In line 147  /* #define BN_DEBUG */ 
In line 148  /* #define BN_DEBUG_RAND */ 
In line 156  /* This next option uses the C libraries (2 word)/(1 word) function. 
In line 157   * If it is not defined, I use my C version (which is slower). 
In line 158   * The reason for this flag is that when the particular C compiler 
In line 159   * library routine is used, and the library is linked with a different 
In line 160   * compiler, the library is missing.  This mostly happens when the 
In line 161   * library is built with gcc and then linked using normal cc.  This would 
In line 162   * be a common occurrence because gcc normally produces code that is 
In line 163   * 2 times faster than system compilers for the big number stuff. 
In line 164   * For machines with only one compiler (or shared libraries), this should 
In line 165   * be on.  Again this in only really a problem on machines 
In line 166   * using "long long's", are 32bit, and are not using my assembler code. */ 
In line 174  /* assuming long is 64bit - this is the DEC Alpha 
In line 175   * unsigned long long is only 64 bits :-(, don't define 
In line 176   * BN_LLONG for the DEC Alpha */ 
In line 199  /* This is where the long long data type is 64 bits, but long is 32. 
In line 200   * For machines where there are 64bit registers, this is the mode to use. 
In line 201   * IRIX, on R4000 and above should use this mode, along with the relevant 
In line 202   * assembler code :-).  Do NOT define BN_LLONG. 
In line 203   */ 
In line 255  /* 2011-02-22 SMS. 
In line 256   * In various places, a size_t variable or a type cast to size_t was 
In line 257   * used to perform integer-only operations on pointers.  This failed on 
In line 258   * VMS with 64-bit pointers (CC /POINTER_SIZE = 64) because size_t is 
In line 259   * still only 32 bits.  What's needed in these cases is an integer type 
In line 260   * with the same size as a pointer, which size_t is not certain to be.  
In line 261   * The only fix here is VMS-specific. 
In line 262   */ 
In line 266  # else /* __INITIAL_POINTER_SIZE == 64 */ 
In line 268  # endif /* __INITIAL_POINTER_SIZE == 64 [else] */ 
In line 269  #else /* defined(OPENSSL_SYS_VMS) */ 
In line 271  #endif /* defined(OPENSSL_SYS_VMS) [else] */ 
In line 277  #define BN_FLG_CONSTTIME	0x04 /* avoid leaking exponent information through timing, 
In line 278                                        * BN_mod_exp_mont() will call BN_mod_exp_mont_consttime, 
In line 279                                        * BN_div() will call BN_div_no_branch, 
In line 280                                        * BN_mod_inverse() will call BN_mod_inverse_no_branch. 
In line 281                                        */ 
In line 284  #define BN_FLG_EXP_CONSTTIME BN_FLG_CONSTTIME /* deprecated name for the flag */ 
In line 285                                        /* avoid leaking exponent information through timings 
In line 286                                        * (BN_mod_exp_mont() will call BN_mod_exp_mont_consttime) */ 
In line 290  #define BN_FLG_FREE		0x8000	/* used for debuging */ 
In line 295  /* get a clone of a BIGNUM with changed flags, for *temporary* use only 
In line 296   * (the two BIGNUMs cannot not be used in parallel!) */ 
In line 306  /* Already declared in ossl_typ.h */ 
In line 309  /* Used for temp variables (declaration hidden in bn_lcl.h) */ 
In line 319  	BN_ULONG *d;	/* Pointer to an array of 'BN_BITS2' bit chunks. */ 
In line 320  	int top;	/* Index of last used d +1. */ 
In line 321  	/* The next are internal book keeping for bn_expand. */ 
In line 322  	int dmax;	/* Size of the d array. */ 
In line 323  	int neg;	/* one if the number is negative */ 
In line 327  /* Used for montgomery multiplication */ 
In line 330  	int ri;        /* number of bits in R */ 
In line 331  	BIGNUM RR;     /* used to convert to montgomery form */ 
In line 332  	BIGNUM N;      /* The modulus */ 
In line 333  	BIGNUM Ni;     /* R*(1/R mod N) - N*Ni = 1 
In line 334  	                * (Ni is only stored for bignum algorithm) */ 
In line 335  	BN_ULONG n0[2];/* least significant word(s) of Ni; 
In line 336  	                  (type changed with 0.9.9, was "BN_ULONG n0;" before) */ 
In line 340  /* Used for reciprocal division/mod functions 
In line 341   * It cannot be shared between threads 
In line 342   */ 
In line 345  	BIGNUM N;	/* the divisor */ 
In line 346  	BIGNUM Nr;	/* the reciprocal */ 
In line 352  /* Used for slow "generation" functions. */ 
In line 355  	unsigned int ver;	/* To handle binary (in)compatibility */ 
In line 356  	void *arg;		/* callback-specific data */ 
In line 359  		/* if(ver==1) - handles old style callbacks */ 
In line 361  		/* if(ver==2) - new callback style */ 
In line 365  /* Wrapper function to make using BN_GENCB easier,  */ 
In line 367  /* Macro to populate a BN_GENCB structure with an "old"-style callback */ 
In line 373  /* Macro to populate a BN_GENCB structure with a "new"-style callback */ 
In line 380  #define BN_prime_checks 0 /* default: select number of iterations 
In line 381  			     based on the size of the number */ 
In line 383  /* number of Miller-Rabin iterations for an error rate  of less than 2^-80 
In line 384   * for random 'b'-bit input, b >= 100 (taken from table 4.4 in the Handbook 
In line 385   * of Applied Cryptography [Menezes, van Oorschot, Vanstone; CRC Press 1996]; 
In line 386   * original paper: Damgaard, Landrock, Pomerance: Average case error estimates 
In line 387   * for the strong probable prime test. -- Math. Comp. 61 (1993) 177-194) */ 
In line 399                                  /* b >= 100 */ 27) 
In line 403  /* Note that BN_abs_is_word didn't work reliably for w == 0 until 0.9.8 */ 
In line 455  /** BN_set_negative sets sign of a BIGNUM 
In line 456   * \param  b  pointer to the BIGNUM object 
In line 457   * \param  n  0 if the BIGNUM b should be positive and a value != 0 otherwise  
In line 458   */ 
In line 460  /** BN_is_negative returns 1 if the BIGNUM is negative 
In line 461   * \param  a  pointer to the BIGNUM object 
In line 462   * \return 1 if a < 0 and 0 otherwise 
In line 463   */ 
In line 534  int	BN_kronecker(const BIGNUM *a,const BIGNUM *b,BN_CTX *ctx); /* returns -2 for error */ 
In line 540  /* Deprecated versions */ 
In line 551  #endif /* !defined(OPENSSL_NO_DEPRECATED) */ 
In line 553  /* Newer versions */ 
In line 585  /* BN_BLINDING flags */ 
In line 611  int BN_get_params(int which); /* 0, mul, 1 high, 2 low, 3 mont */ 
In line 627  /* Functions for arithmetic over binary polynomials represented by BIGNUMs.  
In line 628   * 
In line 629   * The BIGNUM::neg property of BIGNUMs representing binary polynomials is 
In line 630   * ignored. 
In line 631   * 
In line 632   * Note that input arguments are not const so that their bit arrays can 
In line 633   * be expanded to the appropriate size if needed. 
In line 634   */ 
In line 636  int	BN_GF2m_add(BIGNUM *r, const BIGNUM *a, const BIGNUM *b); /*r = a + b*/ 
In line 638  int	BN_GF2m_mod(BIGNUM *r, const BIGNUM *a, const BIGNUM *p); /*r=a mod p*/ 
In line 640  	const BIGNUM *p, BN_CTX *ctx); /* r = (a * b) mod p */ 
In line 642  	BN_CTX *ctx); /* r = (a * a) mod p */ 
In line 644  	BN_CTX *ctx); /* r = (1 / b) mod p */ 
In line 646  	const BIGNUM *p, BN_CTX *ctx); /* r = (a / b) mod p */ 
In line 648  	const BIGNUM *p, BN_CTX *ctx); /* r = (a ^ b) mod p */ 
In line 650  	BN_CTX *ctx); /* r = sqrt(a) mod p */ 
In line 652  	BN_CTX *ctx); /* r^2 + r = a mod p */ 
In line 654  /* Some functions allow for representation of the irreducible polynomials 
In line 655   * as an unsigned int[], say p.  The irreducible f(t) is then of the form: 
In line 656   *     t^p[0] + t^p[1] + ... + t^p[k] 
In line 657   * where m = p[0] > p[1] > ... > p[k] = 0. 
In line 658   */ 
In line 660  	/* r = a mod p */ 
In line 662  	const int p[], BN_CTX *ctx); /* r = (a * b) mod p */ 
In line 664  	BN_CTX *ctx); /* r = (a * a) mod p */ 
In line 666  	BN_CTX *ctx); /* r = (1 / b) mod p */ 
In line 668  	const int p[], BN_CTX *ctx); /* r = (a / b) mod p */ 
In line 670  	const int p[], BN_CTX *ctx); /* r = (a ^ b) mod p */ 
In line 672  	const int p[], BN_CTX *ctx); /* r = sqrt(a) mod p */ 
In line 674  	const int p[], BN_CTX *ctx); /* r^2 + r = a mod p */ 
In line 680  /* faster mod functions for the 'NIST primes'  
In line 681   * 0 <= a < p^2 */ 
In line 694  /* library internal functions */ 
In line 701  BIGNUM *bn_dup_expand(const BIGNUM *a, int words); /* unused */ 
In line 704  /* Bignum consistency macros 
In line 705   * There is one "API" macro, bn_fix_top(), for stripping leading zeroes from 
In line 706   * bignum data after direct manipulations on the data. There is also an 
In line 707   * "internal" macro, bn_check_top(), for verifying that there are no leading 
In line 708   * zeroes. Unfortunately, some auditing is required due to the fact that 
In line 709   * bn_fix_top() has become an overabused duct-tape because bignum data is 
In line 710   * occasionally passed around in an inconsistent state. So the following 
In line 711   * changes have been made to sort this out; 
In line 712   * - bn_fix_top()s implementation has been moved to bn_correct_top() 
In line 713   * - if BN_DEBUG isn't defined, bn_fix_top() maps to bn_correct_top(), and 
In line 714   *   bn_check_top() is as before. 
In line 715   * - if BN_DEBUG *is* defined; 
In line 716   *   - bn_check_top() tries to pollute unused words even if the bignum 'top' is 
In line 717   *     consistent. (ed: only if BN_DEBUG_RAND is defined) 
In line 718   *   - bn_fix_top() maps to bn_check_top() rather than "fixing" anything. 
In line 719   * The idea is to have debug builds flag up inconsistent bignums when they 
In line 720   * occur. If that occurs in a bn_fix_top(), we examine the code in question; if 
In line 721   * the use of bn_fix_top() was appropriate (ie. it follows directly after code 
In line 722   * that manipulates the bignum) it is converted to bn_correct_top(), and if it 
In line 723   * was not appropriate, we convert it permanently to bn_check_top() and track 
In line 724   * down the cause of the bug. Eventually, no internal code should be using the 
In line 725   * bn_fix_top() macro. External applications and libraries should try this with 
In line 726   * their own code too, both in terms of building against the openssl headers 
In line 727   * with BN_DEBUG defined *and* linking with a version of OpenSSL built with it 
In line 728   * defined. This not only improves external code, it provides more test 
In line 729   * coverage for openssl's own code. 
In line 730   */ 
In line 734  /* We only need assert() when debugging */ 
In line 738  /* To avoid "make update" cvs wars due to BN_DEBUG, use some tricks */ 
In line 748  			/* We cast away const without the compiler knowing, any \ 
In line 749  			 * *genuinely* constant variables that aren't mutable \ 
In line 750  			 * wouldn't be constructed with top!=dmax. */ \ 
In line 776  #else /* !BN_DEBUG */ 
In line 804  /* Primes from RFC 2409 */ 
In line 808  /* Primes from RFC 3526 */ 
In line 818  /* BEGIN ERROR CODES */ 
In line 819  /* The following lines are auto generated by the script mkerr.pl. Any changes 
In line 820   * made after this point may be overwritten when the script is next run. 
In line 821   */ 
In line 824  /* Error codes for the BN functions. */ 
In line 826  /* Function codes. */ 
In line 868  /* Reason codes. */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\buffer.h  for analysis => 
In line 0  /* crypto/buffer/buffer.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 73  /* Already declared in ossl_typ.h */ 
In line 74  /* typedef struct buf_mem_st BUF_MEM; */ 
In line 78  	size_t length;	/* current number of bytes */ 
In line 80  	size_t max;	/* size of buffer */ 
In line 92  /* safe string functions */ 
In line 97  /* BEGIN ERROR CODES */ 
In line 98  /* The following lines are auto generated by the script mkerr.pl. Any changes 
In line 99   * made after this point may be overwritten when the script is next run. 
In line 100   */ 
In line 103  /* Error codes for the BUF functions. */ 
In line 105  /* Function codes. */ 
In line 113  /* Reason codes. */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\camellia.h  for analysis => 
In line 0  /* crypto/camellia/camellia.h -*- mode:C; c-file-style: "eay" -*- */ 
In line 1  /* ==================================================================== 
In line 2   * Copyright (c) 2006 The OpenSSL Project.  All rights reserved. 
In line 3   * 
In line 4   * Redistribution and use in source and binary forms, with or without 
In line 5   * modification, are permitted provided that the following conditions 
In line 6   * are met: 
In line 7   * 
In line 8   * 1. Redistributions of source code must retain the above copyright 
In line 9   *    notice, this list of conditions and the following disclaimer.  
In line 10   * 
In line 11   * 2. Redistributions in binary form must reproduce the above copyright 
In line 12   *    notice, this list of conditions and the following disclaimer in 
In line 13   *    the documentation and/or other materials provided with the 
In line 14   *    distribution. 
In line 15   * 
In line 16   * 3. All advertising materials mentioning features or use of this 
In line 17   *    software must display the following acknowledgment: 
In line 18   *    "This product includes software developed by the OpenSSL Project 
In line 19   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 20   * 
In line 21   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 22   *    endorse or promote products derived from this software without 
In line 23   *    prior written permission. For written permission, please contact 
In line 24   *    openssl-core@openssl.org. 
In line 25   * 
In line 26   * 5. Products derived from this software may not be called "OpenSSL" 
In line 27   *    nor may "OpenSSL" appear in their names without prior written 
In line 28   *    permission of the OpenSSL Project. 
In line 29   * 
In line 30   * 6. Redistributions of any form whatsoever must retain the following 
In line 31   *    acknowledgment: 
In line 32   *    "This product includes software developed by the OpenSSL Project 
In line 33   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 34   * 
In line 35   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 36   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 37   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 38   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 39   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 40   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 41   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 42   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 43   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 44   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 45   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 46   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 47   * ==================================================================== 
In line 48   * 
In line 49   */ 
In line 19   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 33   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 65  /* Because array size can't be a const in C, the following two are macros. 
In line 66     Both sizes are in bytes. */ 
In line 72  /* This should be a hidden type, but EVP requires that the size be known */ 
In line 78  typedef unsigned int KEY_TABLE_TYPE[CAMELLIA_TABLE_WORD_LEN]; /* to match with WORD */ 
In line 83  		double d;	/* ensures 64-bit align */ 
In line 129  #endif /* !HEADER_Camellia_H */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\cast.h  for analysis => 
In line 0  /* crypto/cast/cast.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 82  	int short_key;	/* Use reduced rounds for short key */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\cmac.h  for analysis => 
In line 0  /* crypto/cmac/cmac.h */ 
In line 1  /* Written by Dr Stephen N Henson (steve@openssl.org) for the OpenSSL 
In line 2   * project. 
In line 3   */ 
In line 4  /* ==================================================================== 
In line 5   * Copyright (c) 2010 The OpenSSL Project.  All rights reserved. 
In line 6   * 
In line 7   * Redistribution and use in source and binary forms, with or without 
In line 8   * modification, are permitted provided that the following conditions 
In line 9   * are met: 
In line 10   * 
In line 11   * 1. Redistributions of source code must retain the above copyright 
In line 12   *    notice, this list of conditions and the following disclaimer.  
In line 13   * 
In line 14   * 2. Redistributions in binary form must reproduce the above copyright 
In line 15   *    notice, this list of conditions and the following disclaimer in 
In line 16   *    the documentation and/or other materials provided with the 
In line 17   *    distribution. 
In line 18   * 
In line 19   * 3. All advertising materials mentioning features or use of this 
In line 20   *    software must display the following acknowledgment: 
In line 21   *    "This product includes software developed by the OpenSSL Project 
In line 22   *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)" 
In line 23   * 
In line 24   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 25   *    endorse or promote products derived from this software without 
In line 26   *    prior written permission. For written permission, please contact 
In line 27   *    licensing@OpenSSL.org. 
In line 28   * 
In line 29   * 5. Products derived from this software may not be called "OpenSSL" 
In line 30   *    nor may "OpenSSL" appear in their names without prior written 
In line 31   *    permission of the OpenSSL Project. 
In line 32   * 
In line 33   * 6. Redistributions of any form whatsoever must retain the following 
In line 34   *    acknowledgment: 
In line 35   *    "This product includes software developed by the OpenSSL Project 
In line 36   *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)" 
In line 37   * 
In line 38   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 39   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 40   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 41   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 42   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 43   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 44   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 45   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 46   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 47   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 48   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 49   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 50   * ==================================================================== 
In line 51   */ 
In line 22   *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)" 
In line 36   *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)" 
In line 63  /* Opaque */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\cms.h  for analysis => 
In line 0  /* crypto/cms/cms.h */ 
In line 1  /* Written by Dr Stephen N Henson (steve@openssl.org) for the OpenSSL 
In line 2   * project. 
In line 3   */ 
In line 4  /* ==================================================================== 
In line 5   * Copyright (c) 2008 The OpenSSL Project.  All rights reserved. 
In line 6   * 
In line 7   * Redistribution and use in source and binary forms, with or without 
In line 8   * modification, are permitted provided that the following conditions 
In line 9   * are met: 
In line 10   * 
In line 11   * 1. Redistributions of source code must retain the above copyright 
In line 12   *    notice, this list of conditions and the following disclaimer.  
In line 13   * 
In line 14   * 2. Redistributions in binary form must reproduce the above copyright 
In line 15   *    notice, this list of conditions and the following disclaimer in 
In line 16   *    the documentation and/or other materials provided with the 
In line 17   *    distribution. 
In line 18   * 
In line 19   * 3. All advertising materials mentioning features or use of this 
In line 20   *    software must display the following acknowledgment: 
In line 21   *    "This product includes software developed by the OpenSSL Project 
In line 22   *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)" 
In line 23   * 
In line 24   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 25   *    endorse or promote products derived from this software without 
In line 26   *    prior written permission. For written permission, please contact 
In line 27   *    licensing@OpenSSL.org. 
In line 28   * 
In line 29   * 5. Products derived from this software may not be called "OpenSSL" 
In line 30   *    nor may "OpenSSL" appear in their names without prior written 
In line 31   *    permission of the OpenSSL Project. 
In line 32   * 
In line 33   * 6. Redistributions of any form whatsoever must retain the following 
In line 34   *    acknowledgment: 
In line 35   *    "This product includes software developed by the OpenSSL Project 
In line 36   *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)" 
In line 37   * 
In line 38   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 39   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 40   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 41   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 42   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 43   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 44   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 45   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 46   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 47   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 48   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 49   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 50   * ==================================================================== 
In line 51   */ 
In line 22   *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)" 
In line 36   *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)" 
In line 91  /* S/MIME related flags */ 
In line 333  /* BEGIN ERROR CODES */ 
In line 334  /* The following lines are auto generated by the script mkerr.pl. Any changes 
In line 335   * made after this point may be overwritten when the script is next run. 
In line 336   */ 
In line 339  /* Error codes for the CMS functions. */ 
In line 341  /* Function codes. */ 
In line 413  /* Reason codes. */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\comp.h  for analysis => 
In line 14  	int type;		/* NID for compression library */ 
In line 15  	const char *name;	/* A text string to identify the library */ 
In line 24  	/* The following two do NOTHING, but are kept for backward compatibility */ 
In line 57  /* BEGIN ERROR CODES */ 
In line 58  /* The following lines are auto generated by the script mkerr.pl. Any changes 
In line 59   * made after this point may be overwritten when the script is next run. 
In line 60   */ 
In line 63  /* Error codes for the COMP functions. */ 
In line 65  /* Function codes. */ 
In line 71  /* Reason codes. */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\conf.h  for analysis => 
In line 0  /* crypto/conf/conf.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 101  /* Module definitions */ 
In line 109  /* DSO module function typedefs */ 
In line 142  /* New conf code.  The semantics are different from the functions above. 
In line 143     If that wasn't the case, the above functions would have been replaced */ 
In line 155  #if 0 /* Just to give you an idea of what I have in mind */ 
In line 173  #if 0 /* The following function has no error checking, 
In line 174  	 and should therefore be avoided */ 
In line 180  /* Module functions */ 
In line 209  /* BEGIN ERROR CODES */ 
In line 210  /* The following lines are auto generated by the script mkerr.pl. Any changes 
In line 211   * made after this point may be overwritten when the script is next run. 
In line 212   */ 
In line 215  /* Error codes for the CONF functions. */ 
In line 217  /* Function codes. */ 
In line 241  /* Reason codes. */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\conf_api.h  for analysis => 
In line 0  /* conf_api.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 68  /* Up until OpenSSL 0.9.5a, this was new_section */ 
In line 70  /* Up until OpenSSL 0.9.5a, this was get_section */ 
In line 72  /* Up until OpenSSL 0.9.5a, this was CONF_get_section */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\crypto.h  for analysis => 
In line 0  /* crypto/crypto.h */ 
In line 1  /* ==================================================================== 
In line 2   * Copyright (c) 1998-2006 The OpenSSL Project.  All rights reserved. 
In line 3   * 
In line 4   * Redistribution and use in source and binary forms, with or without 
In line 5   * modification, are permitted provided that the following conditions 
In line 6   * are met: 
In line 7   * 
In line 8   * 1. Redistributions of source code must retain the above copyright 
In line 9   *    notice, this list of conditions and the following disclaimer.  
In line 10   * 
In line 11   * 2. Redistributions in binary form must reproduce the above copyright 
In line 12   *    notice, this list of conditions and the following disclaimer in 
In line 13   *    the documentation and/or other materials provided with the 
In line 14   *    distribution. 
In line 15   * 
In line 16   * 3. All advertising materials mentioning features or use of this 
In line 17   *    software must display the following acknowledgment: 
In line 18   *    "This product includes software developed by the OpenSSL Project 
In line 19   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 20   * 
In line 21   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 22   *    endorse or promote products derived from this software without 
In line 23   *    prior written permission. For written permission, please contact 
In line 24   *    openssl-core@openssl.org. 
In line 25   * 
In line 26   * 5. Products derived from this software may not be called "OpenSSL" 
In line 27   *    nor may "OpenSSL" appear in their names without prior written 
In line 28   *    permission of the OpenSSL Project. 
In line 29   * 
In line 30   * 6. Redistributions of any form whatsoever must retain the following 
In line 31   *    acknowledgment: 
In line 32   *    "This product includes software developed by the OpenSSL Project 
In line 33   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 34   * 
In line 35   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 36   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 37   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 38   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 39   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 40   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 41   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 42   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 43   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 44   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 45   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 46   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 47   * ==================================================================== 
In line 48   * 
In line 49   * This product includes cryptographic software written by Eric Young 
In line 50   * (eay@cryptsoft.com).  This product includes software written by Tim 
In line 51   * Hudson (tjh@cryptsoft.com). 
In line 52   * 
In line 53   */ 
In line 19   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 33   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 54  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 55   * All rights reserved. 
In line 56   * 
In line 57   * This package is an SSL implementation written 
In line 58   * by Eric Young (eay@cryptsoft.com). 
In line 59   * The implementation was written so as to conform with Netscapes SSL. 
In line 60   *  
In line 61   * This library is free for commercial and non-commercial use as long as 
In line 62   * the following conditions are aheared to.  The following conditions 
In line 63   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 64   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 65   * included with this distribution is covered by the same copyright terms 
In line 66   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 67   *  
In line 68   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 69   * the code are not to be removed. 
In line 70   * If this package is used in a product, Eric Young should be given attribution 
In line 71   * as the author of the parts of the library used. 
In line 72   * This can be in the form of a textual message at program startup or 
In line 73   * in documentation (online or textual) provided with the package. 
In line 74   *  
In line 75   * Redistribution and use in source and binary forms, with or without 
In line 76   * modification, are permitted provided that the following conditions 
In line 77   * are met: 
In line 78   * 1. Redistributions of source code must retain the copyright 
In line 79   *    notice, this list of conditions and the following disclaimer. 
In line 80   * 2. Redistributions in binary form must reproduce the above copyright 
In line 81   *    notice, this list of conditions and the following disclaimer in the 
In line 82   *    documentation and/or other materials provided with the distribution. 
In line 83   * 3. All advertising materials mentioning features or use of this software 
In line 84   *    must display the following acknowledgement: 
In line 85   *    "This product includes cryptographic software written by 
In line 86   *     Eric Young (eay@cryptsoft.com)" 
In line 87   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 88   *    being used are not cryptographic related :-). 
In line 89   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 90   *    the apps directory (application code) you must include an acknowledgement: 
In line 91   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 92   *  
In line 93   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 94   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 95   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 96   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 97   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 98   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 99   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 100   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 101   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 102   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 103   * SUCH DAMAGE. 
In line 104   *  
In line 105   * The licence and distribution terms for any publically available version or 
In line 106   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 107   * copied and put under another distribution licence 
In line 108   * [including the GNU Public Licence.] 
In line 109   */ 
In line 110  /* ==================================================================== 
In line 111   * Copyright 2002 Sun Microsystems, Inc. ALL RIGHTS RESERVED. 
In line 112   * ECDH support in OpenSSL originally developed by  
In line 113   * SUN MICROSYSTEMS, INC., and contributed to the OpenSSL project. 
In line 114   */ 
In line 136  /* Resolve problems on some operating systems with symbol names that clash 
In line 137     one way or another */ 
In line 144  /* Backward compatibility to SSLeay */ 
In line 145  /* This is more to be used to check the correct DLL is being used 
In line 146   * in the MS world. */ 
In line 149  /* #define SSLEAY_OPTIONS	1 no longer supported */ 
In line 155  /* Already declared in ossl_typ.h */ 
In line 158  /* Called when a new object is created */ 
In line 161  /* Called when an object is free()ed */ 
In line 164  /* Called when we need to dup an object */ 
In line 169  /* A generic structure to pass assorted data in a expandable way */ 
In line 173  	void *value;		/* Not used for flag attributes */ 
In line 174  	size_t value_size;	/* Max size of value for output, length for input */ 
In line 175  	size_t *value_length;	/* Returned length of value for output */ 
In line 179  /* When changing the CRYPTO_LOCK_* list, be sure to maintin the text lock 
In line 180   * names in cryptlib.c 
In line 181   */ 
In line 251  /* Some applications as well as some parts of OpenSSL need to allocate 
In line 252     and deallocate locks in a dynamic fashion.  The following typedef 
In line 253     makes this possible in a type-safe manner.  */ 
In line 254  /* struct CRYPTO_dynlock_value has to be defined by the application. */ 
In line 262  /* The following can be used to detect memory leaks in the SSLeay library. 
In line 263   * It used, it turns on malloc checking */ 
In line 265  #define CRYPTO_MEM_CHECK_OFF	0x0	/* an enume */ 
In line 266  #define CRYPTO_MEM_CHECK_ON	0x1	/* a bit */ 
In line 267  #define CRYPTO_MEM_CHECK_ENABLE	0x2	/* a bit */ 
In line 268  #define CRYPTO_MEM_CHECK_DISABLE 0x3	/* an enume */ 
In line 270  /* The following are bit values to turn on or off options connected to the 
In line 271   * malloc checking functionality */ 
In line 273  /* Adds time to the memory checking information */ 
In line 274  #define V_CRYPTO_MDEBUG_TIME	0x1 /* a bit */ 
In line 275  /* Adds thread number to the memory checking information */ 
In line 276  #define V_CRYPTO_MDEBUG_THREAD	0x2 /* a bit */ 
In line 281  /* predec of the BIO type */ 
In line 287  	int dummy; /* gcc is screwing up this data structure :-( */ 
In line 291  /* This stuff is basically class callback functions 
In line 292   * The current classes are SSL_CTX, SSL, SSL_SESSION, and a few more */ 
In line 296  	long argl;	/* Arbitary long */ 
In line 297  	void *argp;	/* Arbitary void * */ 
In line 305  /* Per class, we have a STACK of CRYPTO_EX_DATA_FUNCS for each CRYPTO_EX_DATA 
In line 306   * entry. 
In line 307   */ 
In line 326  /* Dynamically assigned indexes start from this value (don't use directly, use 
In line 327   * via CRYPTO_ex_data_new_class). */ 
In line 331  /* This is the default callbacks, but we can have others as well: 
In line 332   * this is needed in Win32 where the application malloc and the 
In line 333   * library malloc may not be the same. 
In line 334   */ 
In line 339  # ifndef CRYPTO_MDEBUG /* avoid duplicate #define */ 
In line 344  /* Set standard debugging functions (not done by default 
In line 345   * unless CRYPTO_MDEBUG is defined) */ 
In line 358  /* for applications */ 
In line 362  /* for library-internal use */ 
In line 388  /* An opaque type representing an implementation of "ex_data" support */ 
In line 390  /* Return an opaque pointer to the current "ex_data" implementation */ 
In line 392  /* Sets the "ex_data" implementation to be used (if it's not too late) */ 
In line 394  /* Get a new "ex_data" class, and return the corresponding "class_index" */ 
In line 396  /* Within a given class, get/register a new index */ 
In line 400  /* Initialise/duplicate/free CRYPTO_EX_DATA variables corresponding to a given 
In line 401   * class (invokes whatever per-class callbacks are applicable) */ 
In line 406  /* Get/set data in a CRYPTO_EX_DATA variable corresponding to a particular index 
In line 407   * (relative to the class type involved) */ 
In line 410  /* This function cleans up all "ex_data" state. It mustn't be called under 
In line 411   * potential race-conditions. */ 
In line 416  int CRYPTO_num_locks(void); /* return CRYPTO_NUM_LOCKS (shared libs!) */ 
In line 427  /* Don't use this structure directly. */ 
In line 433  /* Only use CRYPTO_THREADID_set_[numeric|pointer]() within callbacks */ 
In line 462  /* CRYPTO_set_mem_functions includes CRYPTO_set_locked_mem_functions -- 
In line 463   * call the latter last if you need different functions */ 
In line 511  /* Default debugging functions (enabled by CRYPTO_malloc_debug_init() macro; 
In line 512   * used as default in CRYPTO_MDEBUG compilations): */ 
In line 513  /* The last argument has the following significance: 
In line 514   * 
In line 515   * 0:	called before the actual memory allocation has taken place 
In line 516   * 1:	called after the actual memory allocation has taken place 
In line 517   */ 
In line 521  /* Tell the debugging code about options.  By default, the following values 
In line 522   * apply: 
In line 523   * 
In line 524   * 0:                           Clear all options. 
In line 525   * V_CRYPTO_MDEBUG_TIME (1):    Set the "Show Time" option. 
In line 526   * V_CRYPTO_MDEBUG_THREAD (2):  Set the "Show Thread Number" option. 
In line 527   * V_CRYPTO_MDEBUG_ALL (3):     1 + 2 
In line 528   */ 
In line 537  /* unsigned long order, char *file, int line, int num_bytes, char *addr */ 
In line 541  /* die if we have to */ 
In line 576  /* BEGIN ERROR CODES */ 
In line 577  /* The following lines are auto generated by the script mkerr.pl. Any changes 
In line 578   * made after this point may be overwritten when the script is next run. 
In line 579   */ 
In line 582  /* Error codes for the CRYPTO functions. */ 
In line 584  /* Function codes. */ 
In line 596  /* Reason codes. */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\des.h  for analysis => 
In line 0  /* crypto/des/des.h */ 
In line 1  /* Copyright (C) 1995-1997 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 61  #include <openssl/e_os2.h>	/* OPENSSL_EXTERN, OPENSSL_NO_DES, 
In line 62  				   DES_LONG (via openssl/opensslconf.h */ 
In line 78  typedef /* const */ unsigned char const_DES_cblock[8]; 
In line 79  /* With "const", gcc 2.8.1 on Solaris thinks that DES_cblock * 
In line 80   * and const_DES_cblock * are incompatible pointer types. */ 
In line 87  	/* make sure things are correct size on machines with 
In line 88  	 * 8 byte longs */ 
In line 124  OPENSSL_DECLARE_GLOBAL(int,DES_check_key);	/* defaults to false */ 
In line 126  OPENSSL_DECLARE_GLOBAL(int,DES_rw_mode);	/* defaults to DES_PCBC_MODE */ 
In line 136  /* DES_cbc_encrypt does not update the IV!  Use DES_ncbc_encrypt instead. */ 
In line 152  /* 	This is the DES encryption function that gets called by just about 
In line 153  	every other DES routine in the library.  You should not use this 
In line 154  	function except to implement 'modes' of DES.  I say this because the 
In line 155  	functions that call this routine do the conversion from 'char *' to 
In line 156  	long, and this needs to be done to make sure 'non-aligned' memory 
In line 157  	access do not occur.  The characters are loaded 'little endian'. 
In line 158  	Data is a pointer to 2 unsigned long's and ks is the 
In line 159  	DES_key_schedule to use.  enc, is non zero specifies encryption, 
In line 160  	zero if decryption. */ 
In line 163  /* 	This functions is the same as DES_encrypt1() except that the DES 
In line 164  	initial permutation (IP) and final permutation (FP) have been left 
In line 165  	out.  As for DES_encrypt1(), you should not use this function. 
In line 166  	It is used by the routines in the library that implement triple DES. 
In line 167  	IP() DES_encrypt2() DES_encrypt2() DES_encrypt2() FP() is the same 
In line 168  	as DES_encrypt1() DES_encrypt1() DES_encrypt1() except faster :-). */ 
In line 219  /* DES_set_key (= set_key = DES_key_sched = key_sched) calls 
In line 220   * DES_set_key_checked if global variable DES_check_key is set, 
In line 221   * DES_set_key_unchecked otherwise. */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\des_old.h  for analysis => 
In line 0  /* crypto/des/des_old.h -*- mode:C; c-file-style: "eay" -*- */ 
In line 2  /* WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING 
In line 3   * 
In line 4   * The function names in here are deprecated and are only present to 
In line 5   * provide an interface compatible with openssl 0.9.6 and older as 
In line 6   * well as libdes.  OpenSSL now provides functions where "des_" has 
In line 7   * been replaced with "DES_" in the names, to make it possible to 
In line 8   * make incompatible changes that are needed for C type security and 
In line 9   * other stuff. 
In line 10   * 
In line 11   * This include files has two compatibility modes: 
In line 12   * 
In line 13   *   - If OPENSSL_DES_LIBDES_COMPATIBILITY is defined, you get an API 
In line 14   *     that is compatible with libdes and SSLeay. 
In line 15   *   - If OPENSSL_DES_LIBDES_COMPATIBILITY isn't defined, you get an 
In line 16   *     API that is compatible with OpenSSL 0.9.5x to 0.9.6x. 
In line 17   * 
In line 18   * Note that these modes break earlier snapshots of OpenSSL, where 
In line 19   * libdes compatibility was the only available mode or (later on) the 
In line 20   * prefered compatibility mode.  However, after much consideration 
In line 21   * (and more or less violent discussions with external parties), it 
In line 22   * was concluded that OpenSSL should be compatible with earlier versions 
In line 23   * of itself before anything else.  Also, in all honesty, libdes is 
In line 24   * an old beast that shouldn't really be used any more. 
In line 25   * 
In line 26   * Please consider starting to use the DES_ functions rather than the 
In line 27   * des_ ones.  The des_ functions will disappear completely before 
In line 28   * OpenSSL 1.0! 
In line 29   * 
In line 30   * WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING 
In line 31   */ 
In line 33  /* Written by Richard Levitte (richard@levitte.org) for the OpenSSL 
In line 34   * project 2001. 
In line 35   */ 
In line 36  /* ==================================================================== 
In line 37   * Copyright (c) 1998-2002 The OpenSSL Project.  All rights reserved. 
In line 38   * 
In line 39   * Redistribution and use in source and binary forms, with or without 
In line 40   * modification, are permitted provided that the following conditions 
In line 41   * are met: 
In line 42   * 
In line 43   * 1. Redistributions of source code must retain the above copyright 
In line 44   *    notice, this list of conditions and the following disclaimer.  
In line 45   * 
In line 46   * 2. Redistributions in binary form must reproduce the above copyright 
In line 47   *    notice, this list of conditions and the following disclaimer in 
In line 48   *    the documentation and/or other materials provided with the 
In line 49   *    distribution. 
In line 50   * 
In line 51   * 3. All advertising materials mentioning features or use of this 
In line 52   *    software must display the following acknowledgment: 
In line 53   *    "This product includes software developed by the OpenSSL Project 
In line 54   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 55   * 
In line 56   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 57   *    endorse or promote products derived from this software without 
In line 58   *    prior written permission. For written permission, please contact 
In line 59   *    openssl-core@openssl.org. 
In line 60   * 
In line 61   * 5. Products derived from this software may not be called "OpenSSL" 
In line 62   *    nor may "OpenSSL" appear in their names without prior written 
In line 63   *    permission of the OpenSSL Project. 
In line 64   * 
In line 65   * 6. Redistributions of any form whatsoever must retain the following 
In line 66   *    acknowledgment: 
In line 67   *    "This product includes software developed by the OpenSSL Project 
In line 68   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 69   * 
In line 70   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 71   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 72   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 73   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 74   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 75   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 76   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 77   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 78   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 79   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 80   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 81   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 82   * ==================================================================== 
In line 83   * 
In line 84   * This product includes cryptographic software written by Eric Young 
In line 85   * (eay@cryptsoft.com).  This product includes software written by Tim 
In line 86   * Hudson (tjh@cryptsoft.com). 
In line 87   * 
In line 88   */ 
In line 54   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 68   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 93  #include <openssl/e_os2.h>	/* OPENSSL_EXTERN, OPENSSL_NO_DES, DES_LONG */ 
In line 127  		/* make sure things are correct size on machines with 
In line 128  		 * 8 byte longs */ 
In line 237  #else /* libdes compatibility */ 
In line 238  /* Map all symbol names to _ossl_old_des_* form, so we avoid all 
In line 239     clashes with libdes */ 
In line 404  /* The following definitions provide compatibility with the MIT Kerberos 
In line 405   * library. The _ossl_old_des_key_schedule structure is not binary compatible. */ 
In line 442  /* for DES_read_pw_string et al */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\dh.h  for analysis => 
In line 0  /* crypto/dh/dh.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 80  #define DH_FLAG_NO_EXP_CONSTTIME 0x02 /* new with 0.9.7h; the built-in DH 
In line 81                                         * implementation now uses constant time 
In line 82                                         * modular exponentiation for secret exponents 
In line 83                                         * by default. This flag causes the 
In line 84                                         * faster variable sliding window method to 
In line 85                                         * be used for all exponents. 
In line 86                                         */ 
In line 88  /* If this flag is set the DH method is FIPS compliant and can be used 
In line 89   * in FIPS mode. This is set in the validated module method. If an 
In line 90   * application sets this flag in its own methods it is its reposibility 
In line 91   * to ensure the result is compliant. 
In line 92   */ 
In line 96  /* If this flag is set the operations normally disabled in FIPS mode are 
In line 97   * permitted it is then the applications responsibility to ensure that the 
In line 98   * usage is compliant. 
In line 99   */ 
In line 107  /* Already defined in ossl_typ.h */ 
In line 108  /* typedef struct dh_st DH; */ 
In line 109  /* typedef struct dh_method DH_METHOD; */ 
In line 114  	/* Methods here */ 
In line 119  				BN_MONT_CTX *m_ctx); /* Can be null */ 
In line 125  	/* If this is non-NULL, it will be used to generate parameters */ 
In line 131  	/* This first argument is used to pick up errors when 
In line 132  	 * a DH is passed instead of a EVP_PKEY */ 
In line 137  	long length; /* optional */ 
In line 138  	BIGNUM *pub_key;	/* g^x */ 
In line 139  	BIGNUM *priv_key;	/* x */ 
In line 143  	/* Place holders if we want to do X9.42 DH */ 
In line 157  /* #define DH_GENERATOR_3	3 */ 
In line 160  /* DH_check error codes */ 
In line 166  /* DH_check_pub_key error codes */ 
In line 170  /* primes p where (p-1)/2 is prime too are called "safe"; we define 
In line 171     this for backward compatibility: */ 
In line 199  /* Deprecated version */ 
In line 203  #endif /* !defined(OPENSSL_NO_DEPRECATED) */ 
In line 205  /* New version */ 
In line 235  /* BEGIN ERROR CODES */ 
In line 236  /* The following lines are auto generated by the script mkerr.pl. Any changes 
In line 237   * made after this point may be overwritten when the script is next run. 
In line 238   */ 
In line 241  /* Error codes for the DH functions. */ 
In line 243  /* Function codes. */ 
In line 262  /* Reason codes. */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\dsa.h  for analysis => 
In line 0  /* crypto/dsa/dsa.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 58  /* 
In line 59   * The DSS routines are based on patches supplied by 
In line 60   * Steven Schoch <schoch@sheba.arc.nasa.gov>.  He basically did the 
In line 61   * work and I have just tweaked them a little to fit into my 
In line 62   * stylistic vision for SSLeay :-) */ 
In line 91  #define DSA_FLAG_NO_EXP_CONSTTIME       0x02 /* new with 0.9.7h; the built-in DSA 
In line 92                                                * implementation now uses constant time 
In line 93                                                * modular exponentiation for secret exponents 
In line 94                                                * by default. This flag causes the 
In line 95                                                * faster variable sliding window method to 
In line 96                                                * be used for all exponents. 
In line 97                                                */ 
In line 99  /* If this flag is set the DSA method is FIPS compliant and can be used 
In line 100   * in FIPS mode. This is set in the validated module method. If an 
In line 101   * application sets this flag in its own methods it is its reposibility 
In line 102   * to ensure the result is compliant. 
In line 103   */ 
In line 107  /* If this flag is set the operations normally disabled in FIPS mode are 
In line 108   * permitted it is then the applications responsibility to ensure that the 
In line 109   * usage is compliant. 
In line 110   */ 
In line 118  /* Already defined in ossl_typ.h */ 
In line 119  /* typedef struct dsa_st DSA; */ 
In line 120  /* typedef struct dsa_method DSA_METHOD; */ 
In line 141  				BN_MONT_CTX *m_ctx); /* Can be null */ 
In line 146  	/* If this is non-NULL, it is used to generate DSA parameters */ 
In line 151  	/* If this is non-NULL, it is used to generate DSA keys */ 
In line 157  	/* This first variable is used to pick up errors where 
In line 158  	 * a DSA is passed instead of of a EVP_PKEY */ 
In line 163  	BIGNUM *q;	/* == 20 */ 
In line 166  	BIGNUM *pub_key;  /* y public key */ 
In line 167  	BIGNUM *priv_key; /* x private key */ 
In line 169  	BIGNUM *kinv;	/* Signing pre-calc */ 
In line 170  	BIGNUM *r;	/* Signing pre-calc */ 
In line 173  	/* Normally used to cache montgomery values */ 
In line 178  	/* functional reference if 'meth' is ENGINE-provided */ 
In line 209  /* "up" the DSA object's reference count */ 
In line 212  	/* next 4 return -1 on error */ 
In line 227  /* Deprecated version */ 
In line 233  #endif /* !defined(OPENSSL_NO_DEPRECATED) */ 
In line 235  /* New version */ 
In line 255  /* Primality test according to FIPS PUB 186[-1], Appendix 2.1: 
In line 256   * 50 rounds of Rabin-Miller */ 
In line 261  /* Convert DSA structure (key or just parameters) into DH structure 
In line 262   * (be careful to avoid small subgroup attacks when using this!) */ 
In line 274  /* BEGIN ERROR CODES */ 
In line 275  /* The following lines are auto generated by the script mkerr.pl. Any changes 
In line 276   * made after this point may be overwritten when the script is next run. 
In line 277   */ 
In line 280  /* Error codes for the DSA functions. */ 
In line 282  /* Function codes. */ 
In line 309  /* Reason codes. */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\dso.h  for analysis => 
In line 0  /* dso.h -*- mode:C; c-file-style: "eay" -*- */ 
In line 1  /* Written by Geoff Thorpe (geoff@geoffthorpe.net) for the OpenSSL 
In line 2   * project 2000. 
In line 3   */ 
In line 4  /* ==================================================================== 
In line 5   * Copyright (c) 2000 The OpenSSL Project.  All rights reserved. 
In line 6   * 
In line 7   * Redistribution and use in source and binary forms, with or without 
In line 8   * modification, are permitted provided that the following conditions 
In line 9   * are met: 
In line 10   * 
In line 11   * 1. Redistributions of source code must retain the above copyright 
In line 12   *    notice, this list of conditions and the following disclaimer.  
In line 13   * 
In line 14   * 2. Redistributions in binary form must reproduce the above copyright 
In line 15   *    notice, this list of conditions and the following disclaimer in 
In line 16   *    the documentation and/or other materials provided with the 
In line 17   *    distribution. 
In line 18   * 
In line 19   * 3. All advertising materials mentioning features or use of this 
In line 20   *    software must display the following acknowledgment: 
In line 21   *    "This product includes software developed by the OpenSSL Project 
In line 22   *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)" 
In line 23   * 
In line 24   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 25   *    endorse or promote products derived from this software without 
In line 26   *    prior written permission. For written permission, please contact 
In line 27   *    licensing@OpenSSL.org. 
In line 28   * 
In line 29   * 5. Products derived from this software may not be called "OpenSSL" 
In line 30   *    nor may "OpenSSL" appear in their names without prior written 
In line 31   *    permission of the OpenSSL Project. 
In line 32   * 
In line 33   * 6. Redistributions of any form whatsoever must retain the following 
In line 34   *    acknowledgment: 
In line 35   *    "This product includes software developed by the OpenSSL Project 
In line 36   *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)" 
In line 37   * 
In line 38   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 39   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 40   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 41   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 42   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 43   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 44   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 45   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 46   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 47   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 48   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 49   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 50   * ==================================================================== 
In line 51   * 
In line 52   * This product includes cryptographic software written by Eric Young 
In line 53   * (eay@cryptsoft.com).  This product includes software written by Tim 
In line 54   * Hudson (tjh@cryptsoft.com). 
In line 55   * 
In line 56   */ 
In line 22   *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)" 
In line 36   *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)" 
In line 67  /* These values are used as commands to DSO_ctrl() */ 
In line 72  /* By default, DSO_load() will translate the provided filename into a form 
In line 73   * typical for the platform (more specifically the DSO_METHOD) using the 
In line 74   * dso_name_converter function of the method. Eg. win32 will transform "blah" 
In line 75   * into "blah.dll", and dlfcn will transform it into "libblah.so". The 
In line 76   * behaviour can be overriden by setting the name_converter callback in the DSO 
In line 77   * object (using DSO_set_name_converter()). This callback could even utilise 
In line 78   * the DSO_METHOD's converter too if it only wants to override behaviour for 
In line 79   * one or two possible DSO methods. However, the following flag can be set in a 
In line 80   * DSO to prevent *any* native name-translation at all - eg. if the caller has 
In line 81   * prompted the user for a path to a driver library so the filename should be 
In line 82   * interpreted as-is. */ 
In line 84  /* An extra flag to give if only the extension should be added as 
In line 85   * translation.  This is obviously only of importance on Unix and 
In line 86   * other operating systems where the translation also may prefix 
In line 87   * the name with something, like 'lib', and ignored everywhere else. 
In line 88   * This flag is also ignored if DSO_FLAG_NO_NAME_TRANSLATION is used 
In line 89   * at the same time. */ 
In line 92  /* The following flag controls the translation of symbol names to upper 
In line 93   * case.  This is currently only being implemented for OpenVMS. 
In line 94   */ 
In line 97  /* This flag loads the library with public symbols. 
In line 98   * Meaning: The exported symbols of this library are public 
In line 99   * to all libraries loaded after this library. 
In line 100   * At the moment only implemented in unix. 
In line 101   */ 
In line 109  /* The function prototype used for method functions (or caller-provided 
In line 110   * callbacks) that transform filenames. They are passed a DSO structure pointer 
In line 111   * (or NULL if they are to be used independantly of a DSO object) and a 
In line 112   * filename to transform. They should either return NULL (if there is an error 
In line 113   * condition) or a newly allocated string containing the transformed form that 
In line 114   * the caller will need to free with OPENSSL_free() when done. */ 
In line 116  /* The function prototype used for method functions (or caller-provided 
In line 117   * callbacks) that merge two file specifications. They are passed a 
In line 118   * DSO structure pointer (or NULL if they are to be used independantly of 
In line 119   * a DSO object) and two file specifications to merge. They should 
In line 120   * either return NULL (if there is an error condition) or a newly allocated 
In line 121   * string containing the result of merging that the caller will need 
In line 122   * to free with OPENSSL_free() when done. 
In line 123   * Here, merging means that bits and pieces are taken from each of the 
In line 124   * file specifications and added together in whatever fashion that is 
In line 125   * sensible for the DSO method in question.  The only rule that really 
In line 126   * applies is that if the two specification contain pieces of the same 
In line 127   * type, the copy from the first string takes priority.  One could see 
In line 128   * it as the first specification is the one given by the user and the 
In line 129   * second being a bunch of defaults to add on if they're missing in the 
In line 130   * first. */ 
In line 136  	/* Loads a shared library, NB: new DSO_METHODs must ensure that a 
In line 137  	 * successful load populates the loaded_filename field, and likewise a 
In line 138  	 * successful unload OPENSSL_frees and NULLs it out. */ 
In line 140  	/* Unloads a shared library */ 
In line 142  	/* Binds a variable */ 
In line 144  	/* Binds a function - assumes a return type of DSO_FUNC_TYPE. 
In line 145  	 * This should be cast to the real function prototype by the 
In line 146  	 * caller. Platforms that don't have compatible representations 
In line 147  	 * for different prototypes (this is possible within ANSI C) 
In line 148  	 * are highly unlikely to have shared libraries at all, let 
In line 149  	 * alone a DSO_METHOD implemented for them. */ 
In line 152  /* I don't think this would actually be used in any circumstances. */ 
In line 154  	/* Unbinds a variable */ 
In line 156  	/* Unbinds a function */ 
In line 159  	/* The generic (yuck) "ctrl()" function. NB: Negative return 
In line 160  	 * values (rather than zero) indicate errors. */ 
In line 162  	/* The default DSO_METHOD-specific function for converting filenames to 
In line 163  	 * a canonical native form. */ 
In line 165  	/* The default DSO_METHOD-specific function for converting filenames to 
In line 166  	 * a canonical native form. */ 
In line 169  	/* [De]Initialisation handlers. */ 
In line 173  	/* Return pathname of the module containing location */ 
In line 175  	/* Perform global symbol lookup, i.e. among *all* modules */ 
In line 179  /**********************************************************************/ 
In line 180  /* The low-level handle type used to refer to a loaded shared library */ 
In line 185  	/* Standard dlopen uses a (void *). Win32 uses a HANDLE. VMS 
In line 186  	 * doesn't use anything but will need to cache the filename 
In line 187  	 * for use in the dso_bind handler. All in all, let each 
In line 188  	 * method control its own destiny. "Handles" and such go in 
In line 189  	 * a STACK. */ 
In line 193  	/* For use by applications etc ... use this for your bits'n'pieces, 
In line 194  	 * don't touch meth_data! */ 
In line 196  	/* If this callback function pointer is set to non-NULL, then it will 
In line 197  	 * be used in DSO_load() in place of meth->dso_name_converter. NB: This 
In line 198  	 * should normally set using DSO_set_name_converter(). */ 
In line 200  	/* If this callback function pointer is set to non-NULL, then it will 
In line 201  	 * be used in DSO_load() in place of meth->dso_merger. NB: This 
In line 202  	 * should normally set using DSO_set_merger(). */ 
In line 204  	/* This is populated with (a copy of) the platform-independant 
In line 205  	 * filename used for this DSO. */ 
In line 207  	/* This is populated with (a copy of) the translated filename by which 
In line 208  	 * the DSO was actually loaded. It is NULL iff the DSO is not currently 
In line 209  	 * loaded. NB: This is here because the filename translation process 
In line 210  	 * may involve a callback being invoked more than once not only to 
In line 211  	 * convert to a platform-specific form, but also to try different 
In line 212  	 * filenames in the process of trying to perform a load. As such, this 
In line 213  	 * variable can be used to indicate (a) whether this DSO structure 
In line 214  	 * corresponds to a loaded library or not, and (b) the filename with 
In line 215  	 * which it was actually loaded. */ 
In line 227  /* This function sets the DSO's name_converter callback. If it is non-NULL, 
In line 228   * then it will be used instead of the associated DSO_METHOD's function. If 
In line 229   * oldcb is non-NULL then it is set to the function pointer value being 
In line 230   * replaced. Return value is non-zero for success. */ 
In line 233  /* These functions can be used to get/set the platform-independant filename 
In line 234   * used for a DSO. NB: set will fail if the DSO is already loaded. */ 
In line 237  /* This function will invoke the DSO's name_converter callback to translate a 
In line 238   * filename, or if the callback isn't set it will instead use the DSO_METHOD's 
In line 239   * converter. If "filename" is NULL, the "filename" in the DSO itself will be 
In line 240   * used. If the DSO_FLAG_NO_NAME_TRANSLATION flag is set, then the filename is 
In line 241   * simply duplicated. NB: This function is usually called from within a 
In line 242   * DSO_METHOD during the processing of a DSO_load() call, and is exposed so that 
In line 243   * caller-created DSO_METHODs can do the same thing. A non-NULL return value 
In line 244   * will need to be OPENSSL_free()'d. */ 
In line 246  /* This function will invoke the DSO's merger callback to merge two file 
In line 247   * specifications, or if the callback isn't set it will instead use the 
In line 248   * DSO_METHOD's merger.  A non-NULL return value will need to be 
In line 249   * OPENSSL_free()'d. */ 
In line 251  /* If the DSO is currently loaded, this returns the filename that it was loaded 
In line 252   * under, otherwise it returns NULL. So it is also useful as a test as to 
In line 253   * whether the DSO is currently loaded. NB: This will not necessarily return 
In line 254   * the same value as DSO_convert_filename(dso, dso->filename), because the 
In line 255   * DSO_METHOD's load function may have tried a variety of filenames (with 
In line 256   * and/or without the aid of the converters) before settling on the one it 
In line 257   * actually loaded. */ 
In line 265  /* The all-singing all-dancing load function, you normally pass NULL 
In line 266   * for the first and third parameters. Use DSO_up and DSO_free for 
In line 267   * subsequent reference count handling. Any flags passed in will be set 
In line 268   * in the constructed DSO after its init() function but before the 
In line 269   * load operation. If 'dso' is non-NULL, 'flags' is ignored. */ 
In line 272  /* This function binds to a variable inside a shared library. */ 
In line 275  /* This function binds to a function inside a shared library. */ 
In line 278  /* This method is the default, but will beg, borrow, or steal whatever 
In line 279   * method should be the default on any particular platform (including 
In line 280   * DSO_METH_null() if necessary). */ 
In line 283  /* This method is defined for all platforms - if a platform has no 
In line 284   * DSO support then this will be the only method! */ 
In line 287  /* If DSO_DLFCN is defined, the standard dlfcn.h-style functions 
In line 288   * (dlopen, dlclose, dlsym, etc) will be used and incorporated into 
In line 289   * this method. If not, this method will return NULL. */ 
In line 292  /* If DSO_DL is defined, the standard dl.h-style functions (shl_load,  
In line 293   * shl_unload, shl_findsym, etc) will be used and incorporated into 
In line 294   * this method. If not, this method will return NULL. */ 
In line 297  /* If WIN32 is defined, use DLLs. If not, return NULL. */ 
In line 300  /* If VMS is defined, use shared images. If not, return NULL. */ 
In line 303  /* This function writes null-terminated pathname of DSO module 
In line 304   * containing 'addr' into 'sz' large caller-provided 'path' and 
In line 305   * returns the number of characters [including trailing zero] 
In line 306   * written to it. If 'sz' is 0 or negative, 'path' is ignored and 
In line 307   * required amount of charachers [including trailing zero] to 
In line 308   * accomodate pathname is returned. If 'addr' is NULL, then 
In line 309   * pathname of cryptolib itself is returned. Negative or zero 
In line 310   * return value denotes error. 
In line 311   */ 
In line 314  /* This function should be used with caution! It looks up symbols in 
In line 315   * *all* loaded modules and if module gets unloaded by somebody else 
In line 316   * attempt to dereference the pointer is doomed to have fatal 
In line 317   * consequences. Primary usage for this function is to probe *core* 
In line 318   * system functionality, e.g. check if getnameinfo(3) is available 
In line 319   * at run-time without bothering about OS-specific details such as 
In line 320   * libc.so.versioning or where does it actually reside: in libc 
In line 321   * itself or libsocket. */ 
In line 324  /* If BeOS is defined, use shared images. If not, return NULL. */ 
In line 327  /* BEGIN ERROR CODES */ 
In line 328  /* The following lines are auto generated by the script mkerr.pl. Any changes 
In line 329   * made after this point may be overwritten when the script is next run. 
In line 330   */ 
In line 333  /* Error codes for the DSO functions. */ 
In line 335  /* Function codes. */ 
In line 386  /* Reason codes. */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\dtls1.h  for analysis => 
In line 0  /* ssl/dtls1.h */ 
In line 1  /*  
In line 2   * DTLS implementation written by Nagendra Modadugu 
In line 3   * (nagendra@cs.stanford.edu) for the OpenSSL project 2005.   
In line 4   */ 
In line 5  /* ==================================================================== 
In line 6   * Copyright (c) 1999-2005 The OpenSSL Project.  All rights reserved. 
In line 7   * 
In line 8   * Redistribution and use in source and binary forms, with or without 
In line 9   * modification, are permitted provided that the following conditions 
In line 10   * are met: 
In line 11   * 
In line 12   * 1. Redistributions of source code must retain the above copyright 
In line 13   *    notice, this list of conditions and the following disclaimer.  
In line 14   * 
In line 15   * 2. Redistributions in binary form must reproduce the above copyright 
In line 16   *    notice, this list of conditions and the following disclaimer in 
In line 17   *    the documentation and/or other materials provided with the 
In line 18   *    distribution. 
In line 19   * 
In line 20   * 3. All advertising materials mentioning features or use of this 
In line 21   *    software must display the following acknowledgment: 
In line 22   *    "This product includes software developed by the OpenSSL Project 
In line 23   *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)" 
In line 24   * 
In line 25   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 26   *    endorse or promote products derived from this software without 
In line 27   *    prior written permission. For written permission, please contact 
In line 28   *    openssl-core@OpenSSL.org. 
In line 29   * 
In line 30   * 5. Products derived from this software may not be called "OpenSSL" 
In line 31   *    nor may "OpenSSL" appear in their names without prior written 
In line 32   *    permission of the OpenSSL Project. 
In line 33   * 
In line 34   * 6. Redistributions of any form whatsoever must retain the following 
In line 35   *    acknowledgment: 
In line 36   *    "This product includes software developed by the OpenSSL Project 
In line 37   *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)" 
In line 38   * 
In line 39   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 40   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 41   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 42   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 43   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 44   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 45   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 46   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 48   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 49   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 50   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 51   * ==================================================================== 
In line 52   * 
In line 53   * This product includes cryptographic software written by Eric Young 
In line 54   * (eay@cryptsoft.com).  This product includes software written by Tim 
In line 55   * Hudson (tjh@cryptsoft.com). 
In line 56   * 
In line 57   */ 
In line 23   *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)" 
In line 37   *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)" 
In line 69  /* Needed for struct timeval */ 
In line 85  /* this alert description is not specified anywhere... */ 
In line 89  /* lengths of messages */ 
In line 115  	unsigned long map;		/* track 32 packets on 32-bit systems 
In line 116  					   and 64 - on 64-bit systems */ 
In line 117  	unsigned char max_seq_num[8];	/* max record number seen so far, 
In line 118  					   64-bit value in big-endian 
In line 119  					   encoding */ 
In line 124  	EVP_CIPHER_CTX *enc_write_ctx;	/* cryptographic state */ 
In line 125  	EVP_MD_CTX *write_hash;			/* used for mac generation */ 
In line 127  	COMP_CTX *compress;				/* compression */ 
In line 154  	/* Number of read timeouts so far */ 
In line 157  	/* Number of write timeouts so far */ 
In line 160  	/* Number of alerts received so far */ 
In line 184  	/*  
In line 185  	 * The current data and handshake epoch.  This is initially 
In line 186  	 * undefined, and starts at zero once the initial handshake is 
In line 187  	 * completed  
In line 188  	 */ 
In line 192  	/* records being received in the current epoch */ 
In line 195  	/* renegotiation starts a new set of sequence numbers */ 
In line 198  	/* handshake message numbers */ 
In line 204  	/* save last sequence number for retransmissions */ 
In line 207  	/* Received handshake records (processed and unprocessed) */ 
In line 211  	/* Buffered handshake messages */ 
In line 214  	/* Buffered (sent) handshake records */ 
In line 217  	/* Buffered application records. 
In line 218  	 * Only for records between CCS and Finished 
In line 219  	 * to prevent either protocol violation or 
In line 220  	 * unnecessary message loss. 
In line 221  	 */ 
In line 224  	/* Is set when listening for new connections with dtls1_listen() */ 
In line 227  	unsigned int mtu; /* max DTLS packet size */ 
In line 234  	/* Indicates when the last handshake msg or heartbeat sent will timeout */ 
In line 237  	/* Timeout duration */ 
In line 240  	/* storage for Alert/Handshake protocol data received but not 
In line 241  	 * yet processed by ssl3_read_bytes: */ 
In line 251  	/* used when SSL_ST_XX_FLUSH is entered */ 
In line 272  /* Timeout multipliers (timeout slice is defined in apps/timeouts.h */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\ebcdic.h  for analysis => 
In line 0  /* crypto/ebcdic.h */ 
In line 7  /* Avoid name clashes with other applications */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\ec.h  for analysis => 
In line 0  /* crypto/ec/ec.h */ 
In line 1  /* 
In line 2   * Originally written by Bodo Moeller for the OpenSSL project. 
In line 3   */ 
In line 4  /** 
In line 5   * \file crypto/ec/ec.h Include file for the OpenSSL EC functions 
In line 6   * \author Originally written by Bodo Moeller for the OpenSSL project 
In line 7   */ 
In line 8  /* ==================================================================== 
In line 9   * Copyright (c) 1998-2005 The OpenSSL Project.  All rights reserved. 
In line 10   * 
In line 11   * Redistribution and use in source and binary forms, with or without 
In line 12   * modification, are permitted provided that the following conditions 
In line 13   * are met: 
In line 14   * 
In line 15   * 1. Redistributions of source code must retain the above copyright 
In line 16   *    notice, this list of conditions and the following disclaimer.  
In line 17   * 
In line 18   * 2. Redistributions in binary form must reproduce the above copyright 
In line 19   *    notice, this list of conditions and the following disclaimer in 
In line 20   *    the documentation and/or other materials provided with the 
In line 21   *    distribution. 
In line 22   * 
In line 23   * 3. All advertising materials mentioning features or use of this 
In line 24   *    software must display the following acknowledgment: 
In line 25   *    "This product includes software developed by the OpenSSL Project 
In line 26   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 27   * 
In line 28   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 29   *    endorse or promote products derived from this software without 
In line 30   *    prior written permission. For written permission, please contact 
In line 31   *    openssl-core@openssl.org. 
In line 32   * 
In line 33   * 5. Products derived from this software may not be called "OpenSSL" 
In line 34   *    nor may "OpenSSL" appear in their names without prior written 
In line 35   *    permission of the OpenSSL Project. 
In line 36   * 
In line 37   * 6. Redistributions of any form whatsoever must retain the following 
In line 38   *    acknowledgment: 
In line 39   *    "This product includes software developed by the OpenSSL Project 
In line 40   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 41   * 
In line 42   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 43   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 44   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 45   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 46   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 47   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 48   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 49   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 50   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 51   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 52   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 53   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 54   * ==================================================================== 
In line 55   * 
In line 56   * This product includes cryptographic software written by Eric Young 
In line 57   * (eay@cryptsoft.com).  This product includes software written by Tim 
In line 58   * Hudson (tjh@cryptsoft.com). 
In line 59   * 
In line 60   */ 
In line 26   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 40   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 61  /* ==================================================================== 
In line 62   * Copyright 2002 Sun Microsystems, Inc. ALL RIGHTS RESERVED. 
In line 63   * 
In line 64   * Portions of the attached software ("Contribution") are developed by  
In line 65   * SUN MICROSYSTEMS, INC., and are contributed to the OpenSSL project. 
In line 66   * 
In line 67   * The Contribution is licensed pursuant to the OpenSSL open source 
In line 68   * license provided above. 
In line 69   * 
In line 70   * The elliptic curve binary polynomial software is originally written by  
In line 71   * Sheueling Chang Shantz and Douglas Stebila of Sun Microsystems Laboratories. 
In line 72   * 
In line 73   */ 
In line 103  /** Enum for the point conversion form as defined in X9.62 (ECDSA) 
In line 104   *  for the encoding of a elliptic curve point (x,y) */ 
In line 106  	/** the point is encoded as z||x, where the octet z specifies  
In line 107  	 *  which solution of the quadratic equation y is  */ 
In line 109  	/** the point is encoded as z||x||y, where z is the octet 0x02  */ 
In line 111  	/** the point is encoded as z||x||y, where the octet z specifies 
In line 112           *  which solution of the quadratic equation y is  */ 
In line 120  	/* 
In line 121  	 EC_METHOD *meth; 
In line 122  	 -- field definition 
In line 123  	 -- curve coefficients 
In line 124  	 -- optional generator with associated information (order, cofactor) 
In line 125  	 -- optional extra data (precomputed table for fast computation of multiples of generator) 
In line 126  	 -- ASN1 stuff 
In line 127  	*/ 
In line 133  /********************************************************************/ 
In line 134  /*               EC_METHODs for curves over GF(p)                   */        
In line 135  /********************************************************************/ 
In line 137  /** Returns the basic GFp ec methods which provides the basis for the 
In line 138   *  optimized methods.  
In line 139   *  \return  EC_METHOD object 
In line 140   */ 
In line 143  /** Returns GFp methods using montgomery multiplication. 
In line 144   *  \return  EC_METHOD object 
In line 145   */ 
In line 148  /** Returns GFp methods using optimized methods for NIST recommended curves 
In line 149   *  \return  EC_METHOD object 
In line 150   */ 
In line 154  /** Returns 64-bit optimized methods for nistp224 
In line 155   *  \return  EC_METHOD object 
In line 156   */ 
In line 159  /** Returns 64-bit optimized methods for nistp256 
In line 160   *  \return  EC_METHOD object 
In line 161   */ 
In line 164  /** Returns 64-bit optimized methods for nistp521 
In line 165   *  \return  EC_METHOD object 
In line 166   */ 
In line 171  /********************************************************************/  
In line 172  /*           EC_METHOD for curves over GF(2^m)                      */ 
In line 173  /********************************************************************/ 
In line 175  /** Returns the basic GF2m ec method  
In line 176   *  \return  EC_METHOD object 
In line 177   */ 
In line 183  /********************************************************************/ 
In line 184  /*                   EC_GROUP functions                             */ 
In line 185  /********************************************************************/ 
In line 187  /** Creates a new EC_GROUP object 
In line 188   *  \param   meth  EC_METHOD to use 
In line 189   *  \return  newly created EC_GROUP object or NULL in case of an error. 
In line 190   */ 
In line 193  /** Frees a EC_GROUP object 
In line 194   *  \param  group  EC_GROUP object to be freed. 
In line 195   */ 
In line 198  /** Clears and frees a EC_GROUP object 
In line 199   *  \param  group  EC_GROUP object to be cleared and freed. 
In line 200   */ 
In line 203  /** Copies EC_GROUP objects. Note: both EC_GROUPs must use the same EC_METHOD. 
In line 204   *  \param  dst  destination EC_GROUP object 
In line 205   *  \param  src  source EC_GROUP object 
In line 206   *  \return 1 on success and 0 if an error occurred. 
In line 207   */ 
In line 210  /** Creates a new EC_GROUP object and copies the copies the content 
In line 211   *  form src to the newly created EC_KEY object 
In line 212   *  \param  src  source EC_GROUP object 
In line 213   *  \return newly created EC_GROUP object or NULL in case of an error. 
In line 214   */ 
In line 217  /** Returns the EC_METHOD of the EC_GROUP object. 
In line 218   *  \param  group  EC_GROUP object  
In line 219   *  \return EC_METHOD used in this EC_GROUP object. 
In line 220   */ 
In line 223  /** Returns the field type of the EC_METHOD. 
In line 224   *  \param  meth  EC_METHOD object 
In line 225   *  \return NID of the underlying field type OID. 
In line 226   */ 
In line 229  /** Sets the generator and it's order/cofactor of a EC_GROUP object. 
In line 230   *  \param  group      EC_GROUP object  
In line 231   *  \param  generator  EC_POINT object with the generator. 
In line 232   *  \param  order      the order of the group generated by the generator. 
In line 233   *  \param  cofactor   the index of the sub-group generated by the generator 
In line 234   *                     in the group of all points on the elliptic curve. 
In line 235   *  \return 1 on success and 0 if an error occured 
In line 236   */ 
In line 239  /** Returns the generator of a EC_GROUP object. 
In line 240   *  \param  group  EC_GROUP object 
In line 241   *  \return the currently used generator (possibly NULL). 
In line 242   */ 
In line 245  /** Gets the order of a EC_GROUP 
In line 246   *  \param  group  EC_GROUP object 
In line 247   *  \param  order  BIGNUM to which the order is copied 
In line 248   *  \param  ctx    BN_CTX object (optional) 
In line 249   *  \return 1 on success and 0 if an error occured 
In line 250   */ 
In line 253  /** Gets the cofactor of a EC_GROUP 
In line 254   *  \param  group     EC_GROUP object 
In line 255   *  \param  cofactor  BIGNUM to which the cofactor is copied 
In line 256   *  \param  ctx       BN_CTX object (optional) 
In line 257   *  \return 1 on success and 0 if an error occured 
In line 258   */ 
In line 261  /** Sets the name of a EC_GROUP object 
In line 262   *  \param  group  EC_GROUP object 
In line 263   *  \param  nid    NID of the curve name OID 
In line 264   */ 
In line 267  /** Returns the curve name of a EC_GROUP object 
In line 268   *  \param  group  EC_GROUP object 
In line 269   *  \return NID of the curve name OID or 0 if not set. 
In line 270   */ 
In line 283  /** Sets the parameter of a ec over GFp defined by y^2 = x^3 + a*x + b 
In line 284   *  \param  group  EC_GROUP object 
In line 285   *  \param  p      BIGNUM with the prime number 
In line 286   *  \param  a      BIGNUM with parameter a of the equation 
In line 287   *  \param  b      BIGNUM with parameter b of the equation 
In line 288   *  \param  ctx    BN_CTX object (optional) 
In line 289   *  \return 1 on success and 0 if an error occured 
In line 290   */ 
In line 293  /** Gets the parameter of the ec over GFp defined by y^2 = x^3 + a*x + b 
In line 294   *  \param  group  EC_GROUP object 
In line 295   *  \param  p      BIGNUM for the prime number 
In line 296   *  \param  a      BIGNUM for parameter a of the equation 
In line 297   *  \param  b      BIGNUM for parameter b of the equation 
In line 298   *  \param  ctx    BN_CTX object (optional) 
In line 299   *  \return 1 on success and 0 if an error occured 
In line 300   */ 
In line 304  /** Sets the parameter of a ec over GF2m defined by y^2 + x*y = x^3 + a*x^2 + b 
In line 305   *  \param  group  EC_GROUP object 
In line 306   *  \param  p      BIGNUM with the polynomial defining the underlying field 
In line 307   *  \param  a      BIGNUM with parameter a of the equation 
In line 308   *  \param  b      BIGNUM with parameter b of the equation 
In line 309   *  \param  ctx    BN_CTX object (optional) 
In line 310   *  \return 1 on success and 0 if an error occured 
In line 311   */ 
In line 314  /** Gets the parameter of the ec over GF2m defined by y^2 + x*y = x^3 + a*x^2 + b 
In line 315   *  \param  group  EC_GROUP object 
In line 316   *  \param  p      BIGNUM for the polynomial defining the underlying field 
In line 317   *  \param  a      BIGNUM for parameter a of the equation 
In line 318   *  \param  b      BIGNUM for parameter b of the equation 
In line 319   *  \param  ctx    BN_CTX object (optional) 
In line 320   *  \return 1 on success and 0 if an error occured 
In line 321   */ 
In line 324  /** Returns the number of bits needed to represent a field element  
In line 325   *  \param  group  EC_GROUP object 
In line 326   *  \return number of bits needed to represent a field element 
In line 327   */ 
In line 330  /** Checks whether the parameter in the EC_GROUP define a valid ec group 
In line 331   *  \param  group  EC_GROUP object 
In line 332   *  \param  ctx    BN_CTX object (optional) 
In line 333   *  \return 1 if group is a valid ec group and 0 otherwise 
In line 334   */ 
In line 337  /** Checks whether the discriminant of the elliptic curve is zero or not 
In line 338   *  \param  group  EC_GROUP object 
In line 339   *  \param  ctx    BN_CTX object (optional) 
In line 340   *  \return 1 if the discriminant is not zero and 0 otherwise 
In line 341   */ 
In line 344  /** Compares two EC_GROUP objects 
In line 345   *  \param  a    first EC_GROUP object 
In line 346   *  \param  b    second EC_GROUP object 
In line 347   *  \param  ctx  BN_CTX object (optional) 
In line 348   *  \return 0 if both groups are equal and 1 otherwise 
In line 349   */ 
In line 352  /* EC_GROUP_new_GF*() calls EC_GROUP_new() and EC_GROUP_set_GF*() 
In line 353   * after choosing an appropriate EC_METHOD */ 
In line 355  /** Creates a new EC_GROUP object with the specified parameters defined 
In line 356   *  over GFp (defined by the equation y^2 = x^3 + a*x + b) 
In line 357   *  \param  p    BIGNUM with the prime number 
In line 358   *  \param  a    BIGNUM with the parameter a of the equation 
In line 359   *  \param  b    BIGNUM with the parameter b of the equation 
In line 360   *  \param  ctx  BN_CTX object (optional) 
In line 361   *  \return newly created EC_GROUP object with the specified parameters 
In line 362   */ 
In line 365  /** Creates a new EC_GROUP object with the specified parameters defined 
In line 366   *  over GF2m (defined by the equation y^2 + x*y = x^3 + a*x^2 + b) 
In line 367   *  \param  p    BIGNUM with the polynomial defining the underlying field 
In line 368   *  \param  a    BIGNUM with the parameter a of the equation 
In line 369   *  \param  b    BIGNUM with the parameter b of the equation 
In line 370   *  \param  ctx  BN_CTX object (optional) 
In line 371   *  \return newly created EC_GROUP object with the specified parameters 
In line 372   */ 
In line 375  /** Creates a EC_GROUP object with a curve specified by a NID 
In line 376   *  \param  nid  NID of the OID of the curve name 
In line 377   *  \return newly created EC_GROUP object with specified curve or NULL 
In line 378   *          if an error occurred 
In line 379   */ 
In line 383  /********************************************************************/ 
In line 384  /*               handling of internal curves                        */ 
In line 385  /********************************************************************/ 
In line 392  /* EC_builtin_curves(EC_builtin_curve *r, size_t size) returns number  
In line 393   * of all available curves or zero if a error occurred.  
In line 394   * In case r ist not zero nitems EC_builtin_curve structures  
In line 395   * are filled with the data of the first nitems internal groups */ 
In line 399  /********************************************************************/ 
In line 400  /*                    EC_POINT functions                            */ 
In line 401  /********************************************************************/ 
In line 403  /** Creates a new EC_POINT object for the specified EC_GROUP 
In line 404   *  \param  group  EC_GROUP the underlying EC_GROUP object 
In line 405   *  \return newly created EC_POINT object or NULL if an error occurred 
In line 406   */ 
In line 409  /** Frees a EC_POINT object 
In line 410   *  \param  point  EC_POINT object to be freed 
In line 411   */ 
In line 414  /** Clears and frees a EC_POINT object 
In line 415   *  \param  point  EC_POINT object to be cleared and freed 
In line 416   */ 
In line 419  /** Copies EC_POINT object 
In line 420   *  \param  dst  destination EC_POINT object 
In line 421   *  \param  src  source EC_POINT object 
In line 422   *  \return 1 on success and 0 if an error occured 
In line 423   */ 
In line 426  /** Creates a new EC_POINT object and copies the content of the supplied 
In line 427   *  EC_POINT 
In line 428   *  \param  src    source EC_POINT object 
In line 429   *  \param  group  underlying the EC_GROUP object 
In line 430   *  \return newly created EC_POINT object or NULL if an error occurred  
In line 431   */ 
In line 434  /** Returns the EC_METHOD used in EC_POINT object  
In line 435   *  \param  point  EC_POINT object 
In line 436   *  \return the EC_METHOD used 
In line 437   */ 
In line 440  /** Sets a point to infinity (neutral element) 
In line 441   *  \param  group  underlying EC_GROUP object 
In line 442   *  \param  point  EC_POINT to set to infinity 
In line 443   *  \return 1 on success and 0 if an error occured 
In line 444   */ 
In line 447  /** Sets the jacobian projective coordinates of a EC_POINT over GFp 
In line 448   *  \param  group  underlying EC_GROUP object 
In line 449   *  \param  p      EC_POINT object 
In line 450   *  \param  x      BIGNUM with the x-coordinate 
In line 451   *  \param  y      BIGNUM with the y-coordinate 
In line 452   *  \param  z      BIGNUM with the z-coordinate 
In line 453   *  \param  ctx    BN_CTX object (optional) 
In line 454   *  \return 1 on success and 0 if an error occured 
In line 455   */ 
In line 459  /** Gets the jacobian projective coordinates of a EC_POINT over GFp 
In line 460   *  \param  group  underlying EC_GROUP object 
In line 461   *  \param  p      EC_POINT object 
In line 462   *  \param  x      BIGNUM for the x-coordinate 
In line 463   *  \param  y      BIGNUM for the y-coordinate 
In line 464   *  \param  z      BIGNUM for the z-coordinate 
In line 465   *  \param  ctx    BN_CTX object (optional) 
In line 466   *  \return 1 on success and 0 if an error occured 
In line 467   */ 
In line 471  /** Sets the affine coordinates of a EC_POINT over GFp 
In line 472   *  \param  group  underlying EC_GROUP object 
In line 473   *  \param  p      EC_POINT object 
In line 474   *  \param  x      BIGNUM with the x-coordinate 
In line 475   *  \param  y      BIGNUM with the y-coordinate 
In line 476   *  \param  ctx    BN_CTX object (optional) 
In line 477   *  \return 1 on success and 0 if an error occured 
In line 478   */ 
In line 482  /** Gets the affine coordinates of a EC_POINT over GFp 
In line 483   *  \param  group  underlying EC_GROUP object 
In line 484   *  \param  p      EC_POINT object 
In line 485   *  \param  x      BIGNUM for the x-coordinate 
In line 486   *  \param  y      BIGNUM for the y-coordinate 
In line 487   *  \param  ctx    BN_CTX object (optional) 
In line 488   *  \return 1 on success and 0 if an error occured 
In line 489   */ 
In line 493  /** Sets the x9.62 compressed coordinates of a EC_POINT over GFp 
In line 494   *  \param  group  underlying EC_GROUP object 
In line 495   *  \param  p      EC_POINT object 
In line 496   *  \param  x      BIGNUM with x-coordinate 
In line 497   *  \param  y_bit  integer with the y-Bit (either 0 or 1) 
In line 498   *  \param  ctx    BN_CTX object (optional) 
In line 499   *  \return 1 on success and 0 if an error occured 
In line 500   */ 
In line 504  /** Sets the affine coordinates of a EC_POINT over GF2m 
In line 505   *  \param  group  underlying EC_GROUP object 
In line 506   *  \param  p      EC_POINT object 
In line 507   *  \param  x      BIGNUM with the x-coordinate 
In line 508   *  \param  y      BIGNUM with the y-coordinate 
In line 509   *  \param  ctx    BN_CTX object (optional) 
In line 510   *  \return 1 on success and 0 if an error occured 
In line 511   */ 
In line 515  /** Gets the affine coordinates of a EC_POINT over GF2m 
In line 516   *  \param  group  underlying EC_GROUP object 
In line 517   *  \param  p      EC_POINT object 
In line 518   *  \param  x      BIGNUM for the x-coordinate 
In line 519   *  \param  y      BIGNUM for the y-coordinate 
In line 520   *  \param  ctx    BN_CTX object (optional) 
In line 521   *  \return 1 on success and 0 if an error occured 
In line 522   */ 
In line 526  /** Sets the x9.62 compressed coordinates of a EC_POINT over GF2m 
In line 527   *  \param  group  underlying EC_GROUP object 
In line 528   *  \param  p      EC_POINT object 
In line 529   *  \param  x      BIGNUM with x-coordinate 
In line 530   *  \param  y_bit  integer with the y-Bit (either 0 or 1) 
In line 531   *  \param  ctx    BN_CTX object (optional) 
In line 532   *  \return 1 on success and 0 if an error occured 
In line 533   */ 
In line 537  /** Encodes a EC_POINT object to a octet string 
In line 538   *  \param  group  underlying EC_GROUP object 
In line 539   *  \param  p      EC_POINT object 
In line 540   *  \param  form   point conversion form 
In line 541   *  \param  buf    memory buffer for the result. If NULL the function returns 
In line 542   *                 required buffer size. 
In line 543   *  \param  len    length of the memory buffer 
In line 544   *  \param  ctx    BN_CTX object (optional) 
In line 545   *  \return the length of the encoded octet string or 0 if an error occurred 
In line 546   */ 
In line 551  /** Decodes a EC_POINT from a octet string 
In line 552   *  \param  group  underlying EC_GROUP object 
In line 553   *  \param  p      EC_POINT object 
In line 554   *  \param  buf    memory buffer with the encoded ec point 
In line 555   *  \param  len    length of the encoded ec point 
In line 556   *  \param  ctx    BN_CTX object (optional) 
In line 557   *  \return 1 on success and 0 if an error occured 
In line 558   */ 
In line 562  /* other interfaces to point2oct/oct2point: */ 
In line 573  /********************************************************************/ 
In line 574  /*         functions for doing EC_POINT arithmetic                  */ 
In line 575  /********************************************************************/ 
In line 577  /** Computes the sum of two EC_POINT  
In line 578   *  \param  group  underlying EC_GROUP object 
In line 579   *  \param  r      EC_POINT object for the result (r = a + b) 
In line 580   *  \param  a      EC_POINT object with the first summand 
In line 581   *  \param  b      EC_POINT object with the second summand 
In line 582   *  \param  ctx    BN_CTX object (optional) 
In line 583   *  \return 1 on success and 0 if an error occured 
In line 584   */ 
In line 587  /** Computes the double of a EC_POINT 
In line 588   *  \param  group  underlying EC_GROUP object 
In line 589   *  \param  r      EC_POINT object for the result (r = 2 * a) 
In line 590   *  \param  a      EC_POINT object  
In line 591   *  \param  ctx    BN_CTX object (optional) 
In line 592   *  \return 1 on success and 0 if an error occured 
In line 593   */ 
In line 596  /** Computes the inverse of a EC_POINT 
In line 597   *  \param  group  underlying EC_GROUP object 
In line 598   *  \param  a      EC_POINT object to be inverted (it's used for the result as well) 
In line 599   *  \param  ctx    BN_CTX object (optional) 
In line 600   *  \return 1 on success and 0 if an error occured 
In line 601   */ 
In line 604  /** Checks whether the point is the neutral element of the group 
In line 605   *  \param  group  the underlying EC_GROUP object 
In line 606   *  \param  p      EC_POINT object 
In line 607   *  \return 1 if the point is the neutral element and 0 otherwise 
In line 608   */ 
In line 611  /** Checks whether the point is on the curve  
In line 612   *  \param  group  underlying EC_GROUP object 
In line 613   *  \param  point  EC_POINT object to check 
In line 614   *  \param  ctx    BN_CTX object (optional) 
In line 615   *  \return 1 if point if on the curve and 0 otherwise 
In line 616   */ 
In line 619  /** Compares two EC_POINTs  
In line 620   *  \param  group  underlying EC_GROUP object 
In line 621   *  \param  a      first EC_POINT object 
In line 622   *  \param  b      second EC_POINT object 
In line 623   *  \param  ctx    BN_CTX object (optional) 
In line 624   *  \return 0 if both points are equal and a value != 0 otherwise 
In line 625   */ 
In line 631  /** Computes r = generator * n sum_{i=0}^num p[i] * m[i] 
In line 632   *  \param  group  underlying EC_GROUP object 
In line 633   *  \param  r      EC_POINT object for the result 
In line 634   *  \param  n      BIGNUM with the multiplier for the group generator (optional) 
In line 635   *  \param  num    number futher summands 
In line 636   *  \param  p      array of size num of EC_POINT objects 
In line 637   *  \param  m      array of size num of BIGNUM objects 
In line 638   *  \param  ctx    BN_CTX object (optional) 
In line 639   *  \return 1 on success and 0 if an error occured 
In line 640   */ 
In line 643  /** Computes r = generator * n + q * m 
In line 644   *  \param  group  underlying EC_GROUP object 
In line 645   *  \param  r      EC_POINT object for the result 
In line 646   *  \param  n      BIGNUM with the multiplier for the group generator (optional) 
In line 647   *  \param  q      EC_POINT object with the first factor of the second summand 
In line 648   *  \param  m      BIGNUM with the second factor of the second summand 
In line 649   *  \param  ctx    BN_CTX object (optional) 
In line 650   *  \return 1 on success and 0 if an error occured 
In line 651   */ 
In line 654  /** Stores multiples of generator for faster point multiplication 
In line 655   *  \param  group  EC_GROUP object 
In line 656   *  \param  ctx    BN_CTX object (optional) 
In line 657   *  \return 1 on success and 0 if an error occured 
In line 658   */ 
In line 661  /** Reports whether a precomputation has been done 
In line 662   *  \param  group  EC_GROUP object 
In line 663   *  \return 1 if a pre-computation has been done and 0 otherwise 
In line 664   */ 
In line 668  /********************************************************************/ 
In line 669  /*                       ASN1 stuff                                 */ 
In line 670  /********************************************************************/ 
In line 672  /* EC_GROUP_get_basis_type() returns the NID of the basis type 
In line 673   * used to represent the field elements */ 
In line 703  /********************************************************************/ 
In line 704  /*                      EC_KEY functions                            */ 
In line 705  /********************************************************************/ 
In line 709  /* some values for the encoding_flag */ 
In line 713  /* some values for the flags field */ 
In line 717  /** Creates a new EC_KEY object. 
In line 718   *  \return EC_KEY object or NULL if an error occurred. 
In line 719   */ 
In line 728  /** Creates a new EC_KEY object using a named curve as underlying 
In line 729   *  EC_GROUP object. 
In line 730   *  \param  nid  NID of the named curve. 
In line 731   *  \return EC_KEY object or NULL if an error occurred.  
In line 732   */ 
In line 735  /** Frees a EC_KEY object. 
In line 736   *  \param  key  EC_KEY object to be freed. 
In line 737   */ 
In line 740  /** Copies a EC_KEY object. 
In line 741   *  \param  dst  destination EC_KEY object 
In line 742   *  \param  src  src EC_KEY object 
In line 743   *  \return dst or NULL if an error occurred. 
In line 744   */ 
In line 747  /** Creates a new EC_KEY object and copies the content from src to it. 
In line 748   *  \param  src  the source EC_KEY object 
In line 749   *  \return newly created EC_KEY object or NULL if an error occurred. 
In line 750   */ 
In line 753  /** Increases the internal reference count of a EC_KEY object. 
In line 754   *  \param  key  EC_KEY object 
In line 755   *  \return 1 on success and 0 if an error occurred. 
In line 756   */ 
In line 759  /** Returns the EC_GROUP object of a EC_KEY object 
In line 760   *  \param  key  EC_KEY object 
In line 761   *  \return the EC_GROUP object (possibly NULL). 
In line 762   */ 
In line 765  /** Sets the EC_GROUP of a EC_KEY object. 
In line 766   *  \param  key    EC_KEY object 
In line 767   *  \param  group  EC_GROUP to use in the EC_KEY object (note: the EC_KEY 
In line 768   *                 object will use an own copy of the EC_GROUP). 
In line 769   *  \return 1 on success and 0 if an error occurred. 
In line 770   */ 
In line 773  /** Returns the private key of a EC_KEY object. 
In line 774   *  \param  key  EC_KEY object 
In line 775   *  \return a BIGNUM with the private key (possibly NULL). 
In line 776   */ 
In line 779  /** Sets the private key of a EC_KEY object. 
In line 780   *  \param  key  EC_KEY object 
In line 781   *  \param  prv  BIGNUM with the private key (note: the EC_KEY object 
In line 782   *               will use an own copy of the BIGNUM). 
In line 783   *  \return 1 on success and 0 if an error occurred. 
In line 784   */ 
In line 787  /** Returns the public key of a EC_KEY object. 
In line 788   *  \param  key  the EC_KEY object 
In line 789   *  \return a EC_POINT object with the public key (possibly NULL) 
In line 790   */ 
In line 793  /** Sets the public key of a EC_KEY object. 
In line 794   *  \param  key  EC_KEY object 
In line 795   *  \param  pub  EC_POINT object with the public key (note: the EC_KEY object 
In line 796   *               will use an own copy of the EC_POINT object). 
In line 797   *  \return 1 on success and 0 if an error occurred. 
In line 798   */ 
In line 805  /* functions to set/get method specific data  */ 
In line 810  /* wrapper functions for the underlying EC_GROUP object */ 
In line 813  /** Creates a table of pre-computed multiples of the generator to  
In line 814   *  accelerate further EC_KEY operations. 
In line 815   *  \param  key  EC_KEY object 
In line 816   *  \param  ctx  BN_CTX object (optional) 
In line 817   *  \return 1 on success and 0 if an error occurred. 
In line 818   */ 
In line 821  /** Creates a new ec private (and optional a new public) key. 
In line 822   *  \param  key  EC_KEY object 
In line 823   *  \return 1 on success and 0 if an error occurred. 
In line 824   */ 
In line 827  /** Verifies that a private and/or public key is valid. 
In line 828   *  \param  key  the EC_KEY object 
In line 829   *  \return 1 on success and 0 otherwise. 
In line 830   */ 
In line 833  /** Sets a public key from affine coordindates performing 
In line 834   *  neccessary NIST PKV tests. 
In line 835   *  \param  key  the EC_KEY object 
In line 836   *  \param  x    public key x coordinate 
In line 837   *  \param  y    public key y coordinate 
In line 838   *  \return 1 on success and 0 otherwise. 
In line 839   */ 
In line 843  /********************************************************************/ 
In line 844  /*        de- and encoding functions for SEC1 ECPrivateKey          */ 
In line 845  /********************************************************************/ 
In line 847  /** Decodes a private key from a memory buffer. 
In line 848   *  \param  key  a pointer to a EC_KEY object which should be used (or NULL) 
In line 849   *  \param  in   pointer to memory with the DER encoded private key 
In line 850   *  \param  len  length of the DER encoded private key 
In line 851   *  \return the decoded private key or NULL if an error occurred. 
In line 852   */ 
In line 855  /** Encodes a private key object and stores the result in a buffer. 
In line 856   *  \param  key  the EC_KEY object to encode 
In line 857   *  \param  out  the buffer for the result (if NULL the function returns number 
In line 858   *               of bytes needed). 
In line 859   *  \return 1 on success and 0 if an error occurred. 
In line 860   */ 
In line 864  /********************************************************************/ 
In line 865  /*        de- and encoding functions for EC parameters              */ 
In line 866  /********************************************************************/ 
In line 868  /** Decodes ec parameter from a memory buffer. 
In line 869   *  \param  key  a pointer to a EC_KEY object which should be used (or NULL) 
In line 870   *  \param  in   pointer to memory with the DER encoded ec parameters 
In line 871   *  \param  len  length of the DER encoded ec parameters 
In line 872   *  \return a EC_KEY object with the decoded parameters or NULL if an error 
In line 873   *          occurred. 
In line 874   */ 
In line 877  /** Encodes ec parameter and stores the result in a buffer. 
In line 878   *  \param  key  the EC_KEY object with ec paramters to encode 
In line 879   *  \param  out  the buffer for the result (if NULL the function returns number 
In line 880   *               of bytes needed). 
In line 881   *  \return 1 on success and 0 if an error occurred. 
In line 882   */ 
In line 886  /********************************************************************/ 
In line 887  /*         de- and encoding functions for EC public key             */ 
In line 888  /*         (octet string, not DER -- hence 'o2i' and 'i2o')         */ 
In line 889  /********************************************************************/ 
In line 891  /** Decodes a ec public key from a octet string. 
In line 892   *  \param  key  a pointer to a EC_KEY object which should be used 
In line 893   *  \param  in   memory buffer with the encoded public key 
In line 894   *  \param  len  length of the encoded public key 
In line 895   *  \return EC_KEY object with decoded public key or NULL if an error 
In line 896   *          occurred. 
In line 897   */ 
In line 900  /** Encodes a ec public key in an octet string. 
In line 901   *  \param  key  the EC_KEY object with the public key 
In line 902   *  \param  out  the buffer for the result (if NULL the function returns number 
In line 903   *               of bytes needed). 
In line 904   *  \return 1 on success and 0 if an error occurred 
In line 905   */ 
In line 909  /** Prints out the ec parameters on human readable form. 
In line 910   *  \param  bp   BIO object to which the information is printed 
In line 911   *  \param  key  EC_KEY object 
In line 912   *  \return 1 on success and 0 if an error occurred 
In line 913   */ 
In line 916  /** Prints out the contents of a EC_KEY object 
In line 917   *  \param  bp   BIO object to which the information is printed 
In line 918   *  \param  key  EC_KEY object 
In line 919   *  \param  off  line offset  
In line 920   *  \return 1 on success and 0 if an error occurred 
In line 921   */ 
In line 926  /** Prints out the ec parameters on human readable form. 
In line 927   *  \param  fp   file descriptor to which the information is printed 
In line 928   *  \param  key  EC_KEY object 
In line 929   *  \return 1 on success and 0 if an error occurred 
In line 930   */ 
In line 933  /** Prints out the contents of a EC_KEY object 
In line 934   *  \param  fp   file descriptor to which the information is printed 
In line 935   *  \param  key  EC_KEY object 
In line 936   *  \param  off  line offset  
In line 937   *  \return 1 on success and 0 if an error occurred 
In line 938   */ 
In line 960  /* BEGIN ERROR CODES */ 
In line 961  /* The following lines are auto generated by the script mkerr.pl. Any changes 
In line 962   * made after this point may be overwritten when the script is next run. 
In line 963   */ 
In line 966  /* Error codes for the EC functions. */ 
In line 968  /* Function codes. */ 
In line 1106  /* Reason codes. */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\ecdh.h  for analysis => 
In line 0  /* crypto/ecdh/ecdh.h */ 
In line 1  /* ==================================================================== 
In line 2   * Copyright 2002 Sun Microsystems, Inc. ALL RIGHTS RESERVED. 
In line 3   * 
In line 4   * The Elliptic Curve Public-Key Crypto Library (ECC Code) included 
In line 5   * herein is developed by SUN MICROSYSTEMS, INC., and is contributed 
In line 6   * to the OpenSSL project. 
In line 7   * 
In line 8   * The ECC Code is licensed pursuant to the OpenSSL open source 
In line 9   * license provided below. 
In line 10   * 
In line 11   * The ECDH software is originally written by Douglas Stebila of 
In line 12   * Sun Microsystems Laboratories. 
In line 13   * 
In line 14   */ 
In line 15  /* ==================================================================== 
In line 16   * Copyright (c) 2000-2002 The OpenSSL Project.  All rights reserved. 
In line 17   * 
In line 18   * Redistribution and use in source and binary forms, with or without 
In line 19   * modification, are permitted provided that the following conditions 
In line 20   * are met: 
In line 21   * 
In line 22   * 1. Redistributions of source code must retain the above copyright 
In line 23   *    notice, this list of conditions and the following disclaimer.  
In line 24   * 
In line 25   * 2. Redistributions in binary form must reproduce the above copyright 
In line 26   *    notice, this list of conditions and the following disclaimer in 
In line 27   *    the documentation and/or other materials provided with the 
In line 28   *    distribution. 
In line 29   * 
In line 30   * 3. All advertising materials mentioning features or use of this 
In line 31   *    software must display the following acknowledgment: 
In line 32   *    "This product includes software developed by the OpenSSL Project 
In line 33   *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)" 
In line 34   * 
In line 35   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 36   *    endorse or promote products derived from this software without 
In line 37   *    prior written permission. For written permission, please contact 
In line 38   *    licensing@OpenSSL.org. 
In line 39   * 
In line 40   * 5. Products derived from this software may not be called "OpenSSL" 
In line 41   *    nor may "OpenSSL" appear in their names without prior written 
In line 42   *    permission of the OpenSSL Project. 
In line 43   * 
In line 44   * 6. Redistributions of any form whatsoever must retain the following 
In line 45   *    acknowledgment: 
In line 46   *    "This product includes software developed by the OpenSSL Project 
In line 47   *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)" 
In line 48   * 
In line 49   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 50   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 51   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 52   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 53   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 54   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 55   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 56   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 57   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 58   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 59   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 60   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 61   * ==================================================================== 
In line 62   * 
In line 63   * This product includes cryptographic software written by Eric Young 
In line 64   * (eay@cryptsoft.com).  This product includes software written by Tim 
In line 65   * Hudson (tjh@cryptsoft.com). 
In line 66   * 
In line 67   */ 
In line 33   *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)" 
In line 47   *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)" 
In line 102  /* BEGIN ERROR CODES */ 
In line 103  /* The following lines are auto generated by the script mkerr.pl. Any changes 
In line 104   * made after this point may be overwritten when the script is next run. 
In line 105   */ 
In line 108  /* Error codes for the ECDH functions. */ 
In line 110  /* Function codes. */ 
In line 115  /* Reason codes. */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\ecdsa.h  for analysis => 
In line 0  /* crypto/ecdsa/ecdsa.h */ 
In line 1  /** 
In line 2   * \file   crypto/ecdsa/ecdsa.h Include file for the OpenSSL ECDSA functions 
In line 3   * \author Written by Nils Larsch for the OpenSSL project 
In line 4   */ 
In line 5  /* ==================================================================== 
In line 6   * Copyright (c) 2000-2005 The OpenSSL Project.  All rights reserved. 
In line 7   * 
In line 8   * Redistribution and use in source and binary forms, with or without 
In line 9   * modification, are permitted provided that the following conditions 
In line 10   * are met: 
In line 11   * 
In line 12   * 1. Redistributions of source code must retain the above copyright 
In line 13   *    notice, this list of conditions and the following disclaimer.  
In line 14   * 
In line 15   * 2. Redistributions in binary form must reproduce the above copyright 
In line 16   *    notice, this list of conditions and the following disclaimer in 
In line 17   *    the documentation and/or other materials provided with the 
In line 18   *    distribution. 
In line 19   * 
In line 20   * 3. All advertising materials mentioning features or use of this 
In line 21   *    software must display the following acknowledgment: 
In line 22   *    "This product includes software developed by the OpenSSL Project 
In line 23   *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)" 
In line 24   * 
In line 25   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 26   *    endorse or promote products derived from this software without 
In line 27   *    prior written permission. For written permission, please contact 
In line 28   *    licensing@OpenSSL.org. 
In line 29   * 
In line 30   * 5. Products derived from this software may not be called "OpenSSL" 
In line 31   *    nor may "OpenSSL" appear in their names without prior written 
In line 32   *    permission of the OpenSSL Project. 
In line 33   * 
In line 34   * 6. Redistributions of any form whatsoever must retain the following 
In line 35   *    acknowledgment: 
In line 36   *    "This product includes software developed by the OpenSSL Project 
In line 37   *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)" 
In line 38   * 
In line 39   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 40   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 41   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 42   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 43   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 44   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 45   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 46   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 48   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 49   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 50   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 51   * ==================================================================== 
In line 52   * 
In line 53   * This product includes cryptographic software written by Eric Young 
In line 54   * (eay@cryptsoft.com).  This product includes software written by Tim 
In line 55   * Hudson (tjh@cryptsoft.com). 
In line 56   * 
In line 57   */ 
In line 23   *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)" 
In line 37   *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)" 
In line 83  /** Allocates and initialize a ECDSA_SIG structure 
In line 84   *  \return pointer to a ECDSA_SIG structure or NULL if an error occurred 
In line 85   */ 
In line 88  /** frees a ECDSA_SIG structure 
In line 89   *  \param  sig  pointer to the ECDSA_SIG structure 
In line 90   */ 
In line 93  /** DER encode content of ECDSA_SIG object (note: this function modifies *pp 
In line 94   *  (*pp += length of the DER encoded signature)). 
In line 95   *  \param  sig  pointer to the ECDSA_SIG object 
In line 96   *  \param  pp   pointer to a unsigned char pointer for the output or NULL 
In line 97   *  \return the length of the DER encoded ECDSA_SIG object or 0  
In line 98   */ 
In line 101  /** Decodes a DER encoded ECDSA signature (note: this function changes *pp 
In line 102   *  (*pp += len)).  
In line 103   *  \param  sig  pointer to ECDSA_SIG pointer (may be NULL) 
In line 104   *  \param  pp   memory buffer with the DER encoded signature 
In line 105   *  \param  len  length of the buffer 
In line 106   *  \return pointer to the decoded ECDSA_SIG structure (or NULL) 
In line 107   */ 
In line 110  /** Computes the ECDSA signature of the given hash value using 
In line 111   *  the supplied private key and returns the created signature. 
In line 112   *  \param  dgst      pointer to the hash value 
In line 113   *  \param  dgst_len  length of the hash value 
In line 114   *  \param  eckey     EC_KEY object containing a private EC key 
In line 115   *  \return pointer to a ECDSA_SIG structure or NULL if an error occurred 
In line 116   */ 
In line 119  /** Computes ECDSA signature of a given hash value using the supplied 
In line 120   *  private key (note: sig must point to ECDSA_size(eckey) bytes of memory). 
In line 121   *  \param  dgst     pointer to the hash value to sign 
In line 122   *  \param  dgstlen  length of the hash value 
In line 123   *  \param  kinv     BIGNUM with a pre-computed inverse k (optional) 
In line 124   *  \param  rp       BIGNUM with a pre-computed rp value (optioanl),  
In line 125   *                   see ECDSA_sign_setup 
In line 126   *  \param  eckey    EC_KEY object containing a private EC key 
In line 127   *  \return pointer to a ECDSA_SIG structure or NULL if an error occurred 
In line 128   */ 
In line 132  /** Verifies that the supplied signature is a valid ECDSA 
In line 133   *  signature of the supplied hash value using the supplied public key. 
In line 134   *  \param  dgst      pointer to the hash value 
In line 135   *  \param  dgst_len  length of the hash value 
In line 136   *  \param  sig       ECDSA_SIG structure 
In line 137   *  \param  eckey     EC_KEY object containing a public EC key 
In line 138   *  \return 1 if the signature is valid, 0 if the signature is invalid 
In line 139   *          and -1 on error 
In line 140   */ 
In line 146  /** Sets the default ECDSA method 
In line 147   *  \param  meth  new default ECDSA_METHOD 
In line 148   */ 
In line 151  /** Returns the default ECDSA method 
In line 152   *  \return pointer to ECDSA_METHOD structure containing the default method 
In line 153   */ 
In line 156  /** Sets method to be used for the ECDSA operations 
In line 157   *  \param  eckey  EC_KEY object 
In line 158   *  \param  meth   new method 
In line 159   *  \return 1 on success and 0 otherwise  
In line 160   */ 
In line 163  /** Returns the maximum length of the DER encoded signature 
In line 164   *  \param  eckey  EC_KEY object 
In line 165   *  \return numbers of bytes required for the DER encoded signature 
In line 166   */ 
In line 169  /** Precompute parts of the signing operation 
In line 170   *  \param  eckey  EC_KEY object containing a private EC key 
In line 171   *  \param  ctx    BN_CTX object (optional) 
In line 172   *  \param  kinv   BIGNUM pointer for the inverse of k 
In line 173   *  \param  rp     BIGNUM pointer for x coordinate of k * generator 
In line 174   *  \return 1 on success and 0 otherwise 
In line 175   */ 
In line 179  /** Computes ECDSA signature of a given hash value using the supplied 
In line 180   *  private key (note: sig must point to ECDSA_size(eckey) bytes of memory). 
In line 181   *  \param  type     this parameter is ignored 
In line 182   *  \param  dgst     pointer to the hash value to sign 
In line 183   *  \param  dgstlen  length of the hash value 
In line 184   *  \param  sig      memory for the DER encoded created signature 
In line 185   *  \param  siglen   pointer to the length of the returned signature 
In line 186   *  \param  eckey    EC_KEY object containing a private EC key 
In line 187   *  \return 1 on success and 0 otherwise 
In line 188   */ 
In line 193  /** Computes ECDSA signature of a given hash value using the supplied 
In line 194   *  private key (note: sig must point to ECDSA_size(eckey) bytes of memory). 
In line 195   *  \param  type     this parameter is ignored 
In line 196   *  \param  dgst     pointer to the hash value to sign 
In line 197   *  \param  dgstlen  length of the hash value 
In line 198   *  \param  sig      buffer to hold the DER encoded signature 
In line 199   *  \param  siglen   pointer to the length of the returned signature 
In line 200   *  \param  kinv     BIGNUM with a pre-computed inverse k (optional) 
In line 201   *  \param  rp       BIGNUM with a pre-computed rp value (optioanl),  
In line 202   *                   see ECDSA_sign_setup 
In line 203   *  \param  eckey    EC_KEY object containing a private EC key 
In line 204   *  \return 1 on success and 0 otherwise 
In line 205   */ 
In line 210  /** Verifies that the given signature is valid ECDSA signature 
In line 211   *  of the supplied hash value using the specified public key. 
In line 212   *  \param  type     this parameter is ignored 
In line 213   *  \param  dgst     pointer to the hash value  
In line 214   *  \param  dgstlen  length of the hash value 
In line 215   *  \param  sig      pointer to the DER encoded signature 
In line 216   *  \param  siglen   length of the DER encoded signature 
In line 217   *  \param  eckey    EC_KEY object containing a public EC key 
In line 218   *  \return 1 if the signature is valid, 0 if the signature is invalid 
In line 219   *          and -1 on error 
In line 220   */ 
In line 224  /* the standard ex_data functions */ 
In line 231  /* BEGIN ERROR CODES */ 
In line 232  /* The following lines are auto generated by the script mkerr.pl. Any changes 
In line 233   * made after this point may be overwritten when the script is next run. 
In line 234   */ 
In line 237  /* Error codes for the ECDSA functions. */ 
In line 239  /* Function codes. */ 
In line 246  /* Reason codes. */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\engine.h  for analysis => 
In line 0  /* openssl/engine.h */ 
In line 1  /* Written by Geoff Thorpe (geoff@geoffthorpe.net) for the OpenSSL 
In line 2   * project 2000. 
In line 3   */ 
In line 4  /* ==================================================================== 
In line 5   * Copyright (c) 1999-2004 The OpenSSL Project.  All rights reserved. 
In line 6   * 
In line 7   * Redistribution and use in source and binary forms, with or without 
In line 8   * modification, are permitted provided that the following conditions 
In line 9   * are met: 
In line 10   * 
In line 11   * 1. Redistributions of source code must retain the above copyright 
In line 12   *    notice, this list of conditions and the following disclaimer.  
In line 13   * 
In line 14   * 2. Redistributions in binary form must reproduce the above copyright 
In line 15   *    notice, this list of conditions and the following disclaimer in 
In line 16   *    the documentation and/or other materials provided with the 
In line 17   *    distribution. 
In line 18   * 
In line 19   * 3. All advertising materials mentioning features or use of this 
In line 20   *    software must display the following acknowledgment: 
In line 21   *    "This product includes software developed by the OpenSSL Project 
In line 22   *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)" 
In line 23   * 
In line 24   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 25   *    endorse or promote products derived from this software without 
In line 26   *    prior written permission. For written permission, please contact 
In line 27   *    licensing@OpenSSL.org. 
In line 28   * 
In line 29   * 5. Products derived from this software may not be called "OpenSSL" 
In line 30   *    nor may "OpenSSL" appear in their names without prior written 
In line 31   *    permission of the OpenSSL Project. 
In line 32   * 
In line 33   * 6. Redistributions of any form whatsoever must retain the following 
In line 34   *    acknowledgment: 
In line 35   *    "This product includes software developed by the OpenSSL Project 
In line 36   *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)" 
In line 37   * 
In line 38   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 39   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 40   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 41   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 42   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 43   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 44   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 45   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 46   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 47   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 48   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 49   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 50   * ==================================================================== 
In line 51   * 
In line 52   * This product includes cryptographic software written by Eric Young 
In line 53   * (eay@cryptsoft.com).  This product includes software written by Tim 
In line 54   * Hudson (tjh@cryptsoft.com). 
In line 55   * 
In line 56   */ 
In line 22   *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)" 
In line 36   *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)" 
In line 57  /* ==================================================================== 
In line 58   * Copyright 2002 Sun Microsystems, Inc. ALL RIGHTS RESERVED. 
In line 59   * ECDH support in OpenSSL originally developed by  
In line 60   * SUN MICROSYSTEMS, INC., and contributed to the OpenSSL project. 
In line 61   */ 
In line 103  /* These flags are used to control combinations of algorithm (methods) 
In line 104   * by bitwise "OR"ing. */ 
In line 116  /* Obvious all-or-nothing cases. */ 
In line 120  /* This(ese) flag(s) controls behaviour of the ENGINE_TABLE mechanism used 
In line 121   * internally to control registration of ENGINE implementations, and can be set 
In line 122   * by ENGINE_set_table_flags(). The "NOINIT" flag prevents attempts to 
In line 123   * initialise registered ENGINEs if they are not already initialised. */ 
In line 126  /* ENGINE flags that can be set by ENGINE_set_flags(). */ 
In line 127  /* #define ENGINE_FLAGS_MALLOCED	0x0001 */ /* Not used */ 
In line 129  /* This flag is for ENGINEs that wish to handle the various 'CMD'-related 
In line 130   * control commands on their own. Without this flag, ENGINE_ctrl() handles these 
In line 131   * control commands on behalf of the ENGINE using their "cmd_defns" data. */ 
In line 134  /* This flag is for ENGINEs who return new duplicate structures when found via 
In line 135   * "ENGINE_by_id()". When an ENGINE must store state (eg. if ENGINE_ctrl() 
In line 136   * commands are called in sequence as part of some stateful process like 
In line 137   * key-generation setup and execution), it can set this flag - then each attempt 
In line 138   * to obtain the ENGINE will result in it being copied into a new structure. 
In line 139   * Normally, ENGINEs don't declare this flag so ENGINE_by_id() just increments 
In line 140   * the existing ENGINE's structural reference count. */ 
In line 143  /* This flag if for an ENGINE that does not want its methods registered as  
In line 144   * part of ENGINE_register_all_complete() for example if the methods are 
In line 145   * not usable as default methods. 
In line 146   */ 
In line 150  /* ENGINEs can support their own command types, and these flags are used in 
In line 151   * ENGINE_CTRL_GET_CMD_FLAGS to indicate to the caller what kind of input each 
In line 152   * command expects. Currently only numeric and string input is supported. If a 
In line 153   * control command supports none of the _NUMERIC, _STRING, or _NO_INPUT options, 
In line 154   * then it is regarded as an "internal" control command - and not for use in 
In line 155   * config setting situations. As such, they're not available to the 
In line 156   * ENGINE_ctrl_cmd_string() function, only raw ENGINE_ctrl() access. Changes to 
In line 157   * this list of 'command types' should be reflected carefully in 
In line 158   * ENGINE_cmd_is_executable() and ENGINE_ctrl_cmd_string(). */ 
In line 160  /* accepts a 'long' input value (3rd parameter to ENGINE_ctrl) */ 
In line 162  /* accepts string input (cast from 'void*' to 'const char *', 4th parameter to 
In line 163   * ENGINE_ctrl) */ 
In line 165  /* Indicates that the control command takes *no* input. Ie. the control command 
In line 166   * is unparameterised. */ 
In line 168  /* Indicates that the control command is internal. This control command won't 
In line 169   * be shown in any output, and is only usable through the ENGINE_ctrl_cmd() 
In line 170   * function. */ 
In line 173  /* NB: These 3 control commands are deprecated and should not be used. ENGINEs 
In line 174   * relying on these commands should compile conditional support for 
In line 175   * compatibility (eg. if these symbols are defined) but should also migrate the 
In line 176   * same functionality to their own ENGINE-specific control functions that can be 
In line 177   * "discovered" by calling applications. The fact these control commands 
In line 178   * wouldn't be "executable" (ie. usable by text-based config) doesn't change the 
In line 179   * fact that application code can find and use them without requiring per-ENGINE 
In line 180   * hacking. */ 
In line 182  /* These flags are used to tell the ctrl function what should be done. 
In line 183   * All command numbers are shared between all engines, even if some don't 
In line 184   * make sense to some engines.  In such a case, they do nothing but return 
In line 185   * the error ENGINE_R_CTRL_COMMAND_NOT_IMPLEMENTED. */ 
In line 188  #define ENGINE_CTRL_HUP				3 /* Close and reinitialise any 
In line 189  						     handles/connections etc. */ 
In line 190  #define ENGINE_CTRL_SET_USER_INTERFACE          4 /* Alternative to callback */ 
In line 191  #define ENGINE_CTRL_SET_CALLBACK_DATA           5 /* User-specific data, used 
In line 192  						     when calling the password 
In line 193  						     callback and the user 
In line 194  						     interface */ 
In line 195  #define ENGINE_CTRL_LOAD_CONFIGURATION		6 /* Load a configuration, given 
In line 196  						     a string that represents a 
In line 197  						     file name or so */ 
In line 198  #define ENGINE_CTRL_LOAD_SECTION		7 /* Load data from a given 
In line 199  						     section in the already loaded 
In line 200  						     configuration */ 
In line 202  /* These control commands allow an application to deal with an arbitrary engine 
In line 203   * in a dynamic way. Warn: Negative return values indicate errors FOR THESE 
In line 204   * COMMANDS because zero is used to indicate 'end-of-list'. Other commands, 
In line 205   * including ENGINE-specific command types, return zero for an error. 
In line 206   * 
In line 207   * An ENGINE can choose to implement these ctrl functions, and can internally 
In line 208   * manage things however it chooses - it does so by setting the 
In line 209   * ENGINE_FLAGS_MANUAL_CMD_CTRL flag (using ENGINE_set_flags()). Otherwise the 
In line 210   * ENGINE_ctrl() code handles this on the ENGINE's behalf using the cmd_defns 
In line 211   * data (set using ENGINE_set_cmd_defns()). This means an ENGINE's ctrl() 
In line 212   * handler need only implement its own commands - the above "meta" commands will 
In line 213   * be taken care of. */ 
In line 215  /* Returns non-zero if the supplied ENGINE has a ctrl() handler. If "not", then 
In line 216   * all the remaining control commands will return failure, so it is worth 
In line 217   * checking this first if the caller is trying to "discover" the engine's 
In line 218   * capabilities and doesn't want errors generated unnecessarily. */ 
In line 220  /* Returns a positive command number for the first command supported by the 
In line 221   * engine. Returns zero if no ctrl commands are supported. */ 
In line 223  /* The 'long' argument specifies a command implemented by the engine, and the 
In line 224   * return value is the next command supported, or zero if there are no more. */ 
In line 226  /* The 'void*' argument is a command name (cast from 'const char *'), and the 
In line 227   * return value is the command that corresponds to it. */ 
In line 229  /* The next two allow a command to be converted into its corresponding string 
In line 230   * form. In each case, the 'long' argument supplies the command. In the NAME_LEN 
In line 231   * case, the return value is the length of the command name (not counting a 
In line 232   * trailing EOL). In the NAME case, the 'void*' argument must be a string buffer 
In line 233   * large enough, and it will be populated with the name of the command (WITH a 
In line 234   * trailing EOL). */ 
In line 237  /* The next two are similar but give a "short description" of a command. */ 
In line 240  /* With this command, the return value is the OR'd combination of 
In line 241   * ENGINE_CMD_FLAG_*** values that indicate what kind of input a given 
In line 242   * engine-specific ctrl command expects. */ 
In line 245  /* ENGINE implementations should start the numbering of their own control 
In line 246   * commands from this value. (ie. ENGINE_CMD_BASE, ENGINE_CMD_BASE + 1, etc). */ 
In line 249  /* NB: These 2 nCipher "chil" control commands are deprecated, and their 
In line 250   * functionality is now available through ENGINE-specific control commands 
In line 251   * (exposed through the above-mentioned 'CMD'-handling). Code using these 2 
In line 252   * commands should be migrated to the more general command handling before these 
In line 253   * are removed. */ 
In line 255  /* Flags specific to the nCipher "chil" engine */ 
In line 257  	/* Depending on the value of the (long)i argument, this sets or 
In line 258  	 * unsets the SimpleForkCheck flag in the CHIL API to enable or 
In line 259  	 * disable checking and workarounds for applications that fork(). 
In line 260  	 */ 
In line 262  	/* This prevents the initialisation function from providing mutex 
In line 263  	 * callbacks to the nCipher library. */ 
In line 265  /* If an ENGINE supports its own specific control commands and wishes the 
In line 266   * framework to handle the above 'ENGINE_CMD_***'-manipulation commands on its 
In line 267   * behalf, it should supply a null-terminated array of ENGINE_CMD_DEFN entries 
In line 268   * to ENGINE_set_cmd_defns(). It should also implement a ctrl() handler that 
In line 269   * supports the stated commands (ie. the "cmd_num" entries as described by the 
In line 270   * array). NB: The array must be ordered in increasing order of cmd_num. 
In line 271   * "null-terminated" means that the last ENGINE_CMD_DEFN element has cmd_num set 
In line 272   * to zero and/or cmd_name set to NULL. */ 
In line 275  	unsigned int cmd_num; /* The command number */ 
In line 276  	const char *cmd_name; /* The command name itself */ 
In line 277  	const char *cmd_desc; /* A short description of the command */ 
In line 278  	unsigned int cmd_flags; /* The input the command expects */ 
In line 281  /* Generic function pointer */ 
In line 283  /* Generic function pointer taking no arguments */ 
In line 285  /* Specific control function pointer */ 
In line 287  /* Generic load_key function pointer */ 
In line 293  /* These callback types are for an ENGINE's handler for cipher and digest logic. 
In line 294   * These handlers have these prototypes; 
In line 295   *   int foo(ENGINE *e, const EVP_CIPHER **cipher, const int **nids, int nid); 
In line 296   *   int foo(ENGINE *e, const EVP_MD **digest, const int **nids, int nid); 
In line 297   * Looking at how to implement these handlers in the case of cipher support, if 
In line 298   * the framework wants the EVP_CIPHER for 'nid', it will call; 
In line 299   *   foo(e, &p_evp_cipher, NULL, nid);    (return zero for failure) 
In line 300   * If the framework wants a list of supported 'nid's, it will call; 
In line 301   *   foo(e, NULL, &p_nids, 0); (returns number of 'nids' or -1 for error) 
In line 302   */ 
In line 303  /* Returns to a pointer to the array of supported cipher 'nid's. If the second 
In line 304   * parameter is non-NULL it is set to the size of the returned array. */ 
In line 309  /* STRUCTURE functions ... all of these functions deal with pointers to ENGINE 
In line 310   * structures where the pointers have a "structural reference". This means that 
In line 311   * their reference is to allowed access to the structure but it does not imply 
In line 312   * that the structure is functional. To simply increment or decrement the 
In line 313   * structural reference count, use ENGINE_by_id and ENGINE_free. NB: This is not 
In line 314   * required when iterating using ENGINE_get_next as it will automatically 
In line 315   * decrement the structural reference count of the "current" ENGINE and 
In line 316   * increment the structural reference count of the ENGINE it returns (unless it 
In line 317   * is NULL). */ 
In line 319  /* Get the first/last "ENGINE" type available. */ 
In line 322  /* Iterate to the next/previous "ENGINE" type (NULL = end of the list). */ 
In line 325  /* Add another "ENGINE" type into the array. */ 
In line 327  /* Remove an existing "ENGINE" type from the array. */ 
In line 329  /* Retrieve an engine from the list by its unique "id" value. */ 
In line 331  /* Add all the built-in engines. */ 
In line 357  /* Get and set global flags (ENGINE_TABLE_FLAG_***) for the implementation 
In line 358   * "registry" handling. */ 
In line 362  /* Manage registration of ENGINEs per "table". For each type, there are 3 
In line 363   * functions; 
In line 364   *   ENGINE_register_***(e) - registers the implementation from 'e' (if it has one) 
In line 365   *   ENGINE_unregister_***(e) - unregister the implementation from 'e' 
In line 366   *   ENGINE_register_all_***() - call ENGINE_register_***() for each 'e' in the list 
In line 367   * Cleanup is automatically registered from each table when required, so 
In line 368   * ENGINE_cleanup() will reverse any "register" operations. */ 
In line 414  /* These functions register all support from the above categories. Note, use of 
In line 415   * these functions can result in static linkage of code your application may not 
In line 416   * need. If you only need a subset of functionality, consider using more 
In line 417   * selective initialisation. */ 
In line 421  /* Send parametrised control commands to the engine. The possibilities to send 
In line 422   * down an integer, a pointer to data or a function pointer are provided. Any of 
In line 423   * the parameters may or may not be NULL, depending on the command number. In 
In line 424   * actuality, this function only requires a structural (rather than functional) 
In line 425   * reference to an engine, but many control commands may require the engine be 
In line 426   * functional. The caller should be aware of trying commands that require an 
In line 427   * operational ENGINE, and only use functional references in such situations. */ 
In line 430  /* This function tests if an ENGINE-specific command is usable as a "setting". 
In line 431   * Eg. in an application's config file that gets processed through 
In line 432   * ENGINE_ctrl_cmd_string(). If this returns zero, it is not available to 
In line 433   * ENGINE_ctrl_cmd_string(), only ENGINE_ctrl(). */ 
In line 436  /* This function works like ENGINE_ctrl() with the exception of taking a 
In line 437   * command name instead of a command number, and can handle optional commands. 
In line 438   * See the comment on ENGINE_ctrl_cmd_string() for an explanation on how to 
In line 439   * use the cmd_name and cmd_optional. */ 
In line 443  /* This function passes a command-name and argument to an ENGINE. The cmd_name 
In line 444   * is converted to a command number and the control command is called using 
In line 445   * 'arg' as an argument (unless the ENGINE doesn't support such a command, in 
In line 446   * which case no control command is called). The command is checked for input 
In line 447   * flags, and if necessary the argument will be converted to a numeric value. If 
In line 448   * cmd_optional is non-zero, then if the ENGINE doesn't support the given 
In line 449   * cmd_name the return value will be success anyway. This function is intended 
In line 450   * for applications to use so that users (or config files) can supply 
In line 451   * engine-specific config data to the ENGINE at run-time to control behaviour of 
In line 452   * specific engines. As such, it shouldn't be used for calling ENGINE_ctrl() 
In line 453   * functions that return data, deal with binary data, or that are otherwise 
In line 454   * supposed to be used directly through ENGINE_ctrl() in application code. Any 
In line 455   * "return" data from an ENGINE_ctrl() operation in this function will be lost - 
In line 456   * the return value is interpreted as failure if the return value is zero, 
In line 457   * success otherwise, and this function returns a boolean value as a result. In 
In line 458   * other words, vendors of 'ENGINE'-enabled devices should write ENGINE 
In line 459   * implementations with parameterisations that work in this scheme, so that 
In line 460   * compliant ENGINE-based applications can work consistently with the same 
In line 461   * configuration for the same ENGINE-enabled devices, across applications. */ 
In line 465  /* These functions are useful for manufacturing new ENGINE structures. They 
In line 466   * don't address reference counting at all - one uses them to populate an ENGINE 
In line 467   * structure with personalised implementations of things prior to using it 
In line 468   * directly or adding it to the builtin ENGINE list in OpenSSL. These are also 
In line 469   * here so that the ENGINE structure doesn't have to be exposed and break binary 
In line 470   * compatibility! */ 
In line 497  /* These functions allow control over any per-structure ENGINE data. */ 
In line 503  /* This function cleans up anything that needs it. Eg. the ENGINE_add() function 
In line 504   * automatically ensures the list cleanup function is registered to be called 
In line 505   * from ENGINE_cleanup(). Similarly, all ENGINE_register_*** functions ensure 
In line 506   * ENGINE_cleanup() will clean up after them. */ 
In line 509  /* These return values from within the ENGINE structure. These can be useful 
In line 510   * with functional references as well as structural references - it depends 
In line 511   * which you obtained. Using the result for functional purposes if you only 
In line 512   * obtained a structural reference may be problematic! */ 
In line 544  /* FUNCTIONAL functions. These functions deal with ENGINE structures 
In line 545   * that have (or will) be initialised for use. Broadly speaking, the 
In line 546   * structural functions are useful for iterating the list of available 
In line 547   * engine types, creating new engine types, and other "list" operations. 
In line 548   * These functions actually deal with ENGINEs that are to be used. As 
In line 549   * such these functions can fail (if applicable) when particular 
In line 550   * engines are unavailable - eg. if a hardware accelerator is not 
In line 551   * attached or not functioning correctly. Each ENGINE has 2 reference 
In line 552   * counts; structural and functional. Every time a functional reference 
In line 553   * is obtained or released, a corresponding structural reference is 
In line 554   * automatically obtained or released too. */ 
In line 556  /* Initialise a engine type for use (or up its reference count if it's 
In line 557   * already in use). This will fail if the engine is not currently 
In line 558   * operational and cannot initialise. */ 
In line 560  /* Free a functional reference to a engine type. This does not require 
In line 561   * a corresponding call to ENGINE_free as it also releases a structural 
In line 562   * reference. */ 
In line 565  /* The following functions handle keys that are stored in some secondary 
In line 566   * location, handled by the engine.  The storage may be on a card or 
In line 567   * whatever. */ 
In line 577  /* This returns a pointer for the current ENGINE structure that 
In line 578   * is (by default) performing any RSA operations. The value returned 
In line 579   * is an incremented reference, so it should be free'd (ENGINE_finish) 
In line 580   * before it is discarded. */ 
In line 582  /* Same for the other "methods" */ 
In line 588  /* These functions can be used to get a functional reference to perform 
In line 589   * ciphering or digesting corresponding to "nid". */ 
In line 595  /* This sets a new default ENGINE structure for performing RSA 
In line 596   * operations. If the result is non-zero (success) then the ENGINE 
In line 597   * structure will have had its reference count up'd so the caller 
In line 598   * should still free their own reference 'e'. */ 
In line 601  /* Same for the other "methods" */ 
In line 612  /* The combination "set" - the flags are bitwise "OR"d from the 
In line 613   * ENGINE_METHOD_*** defines above. As with the "ENGINE_register_complete()" 
In line 614   * function, this function can result in unnecessary static linkage. If your 
In line 615   * application requires only specific functionality, consider using more 
In line 616   * selective functions. */ 
In line 621  /* Deprecated functions ... */ 
In line 622  /* int ENGINE_clear_defaults(void); */ 
In line 624  /**************************/ 
In line 625  /* DYNAMIC ENGINE SUPPORT */ 
In line 626  /**************************/ 
In line 628  /* Binary/behaviour compatibility levels */ 
In line 630  /* Binary versions older than this are too old for us (whether we're a loader or 
In line 631   * a loadee) */ 
In line 634  /* When compiling an ENGINE entirely as an external shared library, loadable by 
In line 635   * the "dynamic" ENGINE, these types are needed. The 'dynamic_fns' structure 
In line 636   * type provides the calling application's (or library's) error functionality 
In line 637   * and memory management function pointers to the loaded library. These should 
In line 638   * be used/set in the loaded library code so that the loading application's 
In line 639   * 'state' will be used/changed in all operations. The 'static_state' pointer 
In line 640   * allows the loaded library to know if it shares the same static data as the 
In line 641   * calling application (or library), and thus whether these callbacks need to be 
In line 642   * set or not. */ 
In line 651  /* FIXME: Perhaps the memory and locking code (crypto.h) should declare and use 
In line 652   * these types so we (and any other dependant code) can simplify a bit?? */ 
In line 668  /* The top-level structure */ 
In line 677  /* The version checking function should be of this prototype. NB: The 
In line 678   * ossl_version value passed in is the OSSL_DYNAMIC_VERSION of the loading code. 
In line 679   * If this function returns zero, it indicates a (potential) version 
In line 680   * incompatibility and the loaded library doesn't believe it can proceed. 
In line 681   * Otherwise, the returned value is the (latest) version supported by the 
In line 682   * loading library. The loader may still decide that the loaded code's version 
In line 683   * is unsatisfactory and could veto the load. The function is expected to 
In line 684   * be implemented with the symbol name "v_check", and a default implementation 
In line 685   * can be fully instantiated with IMPLEMENT_DYNAMIC_CHECK_FN(). */ 
In line 693  /* This function is passed the ENGINE structure to initialise with its own 
In line 694   * function and command settings. It should not adjust the structural or 
In line 695   * functional reference counts. If this function returns zero, (a) the load will 
In line 696   * be aborted, (b) the previous ENGINE state will be memcpy'd back onto the 
In line 697   * structure, and (c) the shared library will be unloaded. So implementations 
In line 698   * should do their own internal cleanup in failure circumstances otherwise they 
In line 699   * could leak. The 'id' parameter, if non-NULL, represents the ENGINE id that 
In line 700   * the loader is looking for. If this is NULL, the shared library can choose to 
In line 701   * return failure or to initialise a 'default' ENGINE. If non-NULL, the shared 
In line 702   * library must initialise only an ENGINE matching the passed 'id'. The function 
In line 703   * is expected to be implemented with the symbol name "bind_engine". A standard 
In line 704   * implementation can be instantiated with IMPLEMENT_DYNAMIC_BIND_FN(fn) where 
In line 705   * the parameter 'fn' is a callback function that populates the ENGINE structure 
In line 706   * and returns an int value (zero for failure). 'fn' should have prototype; 
In line 707   *    [static] int fn(ENGINE *e, const char *id); */ 
In line 731  /* If the loading application (or library) and the loaded ENGINE library share 
In line 732   * the same static data (eg. they're both dynamically linked to the same 
In line 733   * libcrypto.so) we need a way to avoid trying to set system callbacks - this 
In line 734   * would fail, and for the same reason that it's unnecessary to try. If the 
In line 735   * loaded ENGINE has (or gets from through the loader) its own copy of the 
In line 736   * libcrypto static data, we will need to set the callbacks. The easiest way to 
In line 737   * detect this is to have a function that returns a pointer to some static data 
In line 738   * and let the loading application and loaded ENGINE compare their respective 
In line 739   * values. */ 
In line 746  /* BEGIN ERROR CODES */ 
In line 747  /* The following lines are auto generated by the script mkerr.pl. Any changes 
In line 748   * made after this point may be overwritten when the script is next run. 
In line 749   */ 
In line 752  /* Error codes for the ENGINE functions. */ 
In line 754  /* Function codes. */ 
In line 795  /* Reason codes. */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\err.h  for analysis => 
In line 0  /* crypto/err/err.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 57  /* ==================================================================== 
In line 58   * Copyright (c) 1998-2006 The OpenSSL Project.  All rights reserved. 
In line 59   * 
In line 60   * Redistribution and use in source and binary forms, with or without 
In line 61   * modification, are permitted provided that the following conditions 
In line 62   * are met: 
In line 63   * 
In line 64   * 1. Redistributions of source code must retain the above copyright 
In line 65   *    notice, this list of conditions and the following disclaimer.  
In line 66   * 
In line 67   * 2. Redistributions in binary form must reproduce the above copyright 
In line 68   *    notice, this list of conditions and the following disclaimer in 
In line 69   *    the documentation and/or other materials provided with the 
In line 70   *    distribution. 
In line 71   * 
In line 72   * 3. All advertising materials mentioning features or use of this 
In line 73   *    software must display the following acknowledgment: 
In line 74   *    "This product includes software developed by the OpenSSL Project 
In line 75   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 76   * 
In line 77   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 78   *    endorse or promote products derived from this software without 
In line 79   *    prior written permission. For written permission, please contact 
In line 80   *    openssl-core@openssl.org. 
In line 81   * 
In line 82   * 5. Products derived from this software may not be called "OpenSSL" 
In line 83   *    nor may "OpenSSL" appear in their names without prior written 
In line 84   *    permission of the OpenSSL Project. 
In line 85   * 
In line 86   * 6. Redistributions of any form whatsoever must retain the following 
In line 87   *    acknowledgment: 
In line 88   *    "This product includes software developed by the OpenSSL Project 
In line 89   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 90   * 
In line 91   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 92   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 93   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 94   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 95   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 96   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 97   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 98   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 99   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 100   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 101   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 102   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 103   * ==================================================================== 
In line 104   * 
In line 105   * This product includes cryptographic software written by Eric Young 
In line 106   * (eay@cryptsoft.com).  This product includes software written by Tim 
In line 107   * Hudson (tjh@cryptsoft.com). 
In line 108   * 
In line 109   */ 
In line 75   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 89   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 159  /* library */ 
In line 171  /* #define ERR_LIB_METH         12 */ 
In line 177  /* #define ERR_LIB_SSL23        21 */ 
In line 178  /* #define ERR_LIB_SSL2         22 */ 
In line 179  /* #define ERR_LIB_SSL3         23 */ 
In line 180  /* #define ERR_LIB_RSAREF       30 */ 
In line 181  /* #define ERR_LIB_PROXY        31 */ 
In line 237  /* Borland C seems too stupid to be able to shift and do longs in 
In line 238   * the pre-processor :-( */ 
In line 248  /* OS functions */ 
In line 257  #define SYS_F_WSASTARTUP	9 /* Winsock stuff */ 
In line 262  /* reasons */ 
In line 263  #define ERR_R_SYS_LIB	ERR_LIB_SYS       /* 2 */ 
In line 264  #define ERR_R_BN_LIB	ERR_LIB_BN        /* 3 */ 
In line 265  #define ERR_R_RSA_LIB	ERR_LIB_RSA       /* 4 */ 
In line 266  #define ERR_R_DH_LIB	ERR_LIB_DH        /* 5 */ 
In line 267  #define ERR_R_EVP_LIB	ERR_LIB_EVP       /* 6 */ 
In line 268  #define ERR_R_BUF_LIB	ERR_LIB_BUF       /* 7 */ 
In line 269  #define ERR_R_OBJ_LIB	ERR_LIB_OBJ       /* 8 */ 
In line 270  #define ERR_R_PEM_LIB	ERR_LIB_PEM       /* 9 */ 
In line 271  #define ERR_R_DSA_LIB	ERR_LIB_DSA      /* 10 */ 
In line 272  #define ERR_R_X509_LIB	ERR_LIB_X509     /* 11 */ 
In line 273  #define ERR_R_ASN1_LIB	ERR_LIB_ASN1     /* 13 */ 
In line 274  #define ERR_R_CONF_LIB	ERR_LIB_CONF     /* 14 */ 
In line 275  #define ERR_R_CRYPTO_LIB ERR_LIB_CRYPTO  /* 15 */ 
In line 276  #define ERR_R_EC_LIB	ERR_LIB_EC       /* 16 */ 
In line 277  #define ERR_R_SSL_LIB	ERR_LIB_SSL      /* 20 */ 
In line 278  #define ERR_R_BIO_LIB	ERR_LIB_BIO      /* 32 */ 
In line 279  #define ERR_R_PKCS7_LIB	ERR_LIB_PKCS7    /* 33 */ 
In line 280  #define ERR_R_X509V3_LIB ERR_LIB_X509V3  /* 34 */ 
In line 281  #define ERR_R_PKCS12_LIB ERR_LIB_PKCS12  /* 35 */ 
In line 282  #define ERR_R_RAND_LIB	ERR_LIB_RAND     /* 36 */ 
In line 283  #define ERR_R_DSO_LIB	ERR_LIB_DSO      /* 37 */ 
In line 284  #define ERR_R_ENGINE_LIB ERR_LIB_ENGINE  /* 38 */ 
In line 285  #define ERR_R_OCSP_LIB  ERR_LIB_OCSP     /* 39 */ 
In line 286  #define ERR_R_UI_LIB    ERR_LIB_UI       /* 40 */ 
In line 287  #define ERR_R_COMP_LIB	ERR_LIB_COMP     /* 41 */ 
In line 288  #define ERR_R_ECDSA_LIB ERR_LIB_ECDSA	 /* 42 */ 
In line 289  #define ERR_R_ECDH_LIB  ERR_LIB_ECDH	 /* 43 */ 
In line 290  #define ERR_R_STORE_LIB ERR_LIB_STORE    /* 44 */ 
In line 291  #define ERR_R_TS_LIB	ERR_LIB_TS       /* 45 */ 
In line 300  /* fatal error */ 
In line 308  /* 99 is the maximum possible ERR_R_... code, higher values 
In line 309   * are reserved for the individual libraries */ 
In line 357  void ERR_remove_state(unsigned long pid); /* if zero we look it up */ 
In line 372  /* Already defined in ossl_typ.h */ 
In line 373  /* typedef struct st_ERR_FNS ERR_FNS; */ 
In line 374  /* An application can use this function and provide the return value to loaded 
In line 375   * modules that should use the application's ERR state/functionality */ 
In line 377  /* A loaded module should call this function prior to any ERR operations using 
In line 378   * the application's "ERR_FNS". */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\evp.h  for analysis => 
In line 0  /* crypto/evp/evp.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 77  /* 
In line 78  #define EVP_RC2_KEY_SIZE		16 
In line 79  #define EVP_RC4_KEY_SIZE		16 
In line 80  #define EVP_BLOWFISH_KEY_SIZE		16 
In line 81  #define EVP_CAST5_KEY_SIZE		16 
In line 82  #define EVP_RC5_32_12_16_KEY_SIZE	16 
In line 83  */ 
In line 84  #define EVP_MAX_MD_SIZE			64	/* longest known is SHA512 */ 
In line 90  /* Default PKCS#5 iteration count */ 
In line 105  #define EVP_PKT_EXP	0x1000 /* <= 512 bit key */ 
In line 124  /* Type needs to be a bit field 
In line 125   * Sub-type needs to be for variations on the method, as in, can it do 
In line 126   * arbitrary encryption.... */ 
In line 137  		struct rsa_st *rsa;	/* RSA */ 
In line 140  		struct dsa_st *dsa;	/* DSA */ 
In line 143  		struct dh_st *dh;	/* DH */ 
In line 146  		struct ec_key_st *ec;	/* ECC */ 
In line 150  	STACK_OF(X509_ATTRIBUTE) *attributes; /* [ 0 ] */ 
In line 151  	} /* EVP_PKEY */; 
In line 171  	/* FIXME: prototype these some day */ 
In line 177  	int required_pkey_type[5]; /*EVP_PKEY_xxx */ 
In line 179  	int ctx_size; /* how big does the ctx->md_data need to be */ 
In line 180  	/* control function */ 
In line 182  	} /* EVP_MD */; 
In line 191  #define EVP_MD_FLAG_ONESHOT	0x0001 /* digest can only handle a single 
In line 192  					* block */ 
In line 194  #define EVP_MD_FLAG_PKEY_DIGEST	0x0002 /* digest is a "clone" digest used 
In line 195  					* which is a copy of an existing 
In line 196  					* one for a specific public key type. 
In line 197  					* EVP_dss1() etc */ 
In line 199  /* Digest uses EVP_PKEY_METHOD for signing instead of MD specific signing */ 
In line 203  /* DigestAlgorithmIdentifier flags... */ 
In line 207  /* NULL or absent parameter accepted. Use NULL */ 
In line 211  /* NULL or absent parameter accepted. Use NULL for PKCS#1 otherwise absent */ 
In line 215  /* Custom handling via ctrl */ 
In line 219  #define EVP_MD_FLAG_FIPS	0x0400 /* Note if suitable for use in FIPS mode */ 
In line 221  /* Digest ctrls */ 
In line 226  /* Minimum Algorithm specific ctrl value */ 
In line 262  #endif /* !EVP_MD */ 
In line 267  	ENGINE *engine; /* functional reference if 'digest' is ENGINE-provided */ 
In line 270  	/* Public key context for sign/verify */ 
In line 272  	/* Update function: usually copied from EVP_MD */ 
In line 274  	} /* EVP_MD_CTX */; 
In line 276  /* values for EVP_MD_CTX flags */ 
In line 278  #define EVP_MD_CTX_FLAG_ONESHOT		0x0001 /* digest update will be called 
In line 279  						* once only */ 
In line 280  #define EVP_MD_CTX_FLAG_CLEANED		0x0002 /* context has already been 
In line 281  						* cleaned */ 
In line 282  #define EVP_MD_CTX_FLAG_REUSE		0x0004 /* Don't free up ctx->md_data 
In line 283  						* in EVP_MD_CTX_cleanup */ 
In line 284  /* FIPS and pad options are ignored in 1.0.0, definitions are here 
In line 285   * so we don't accidentally reuse the values for other purposes. 
In line 286   */ 
In line 288  #define EVP_MD_CTX_FLAG_NON_FIPS_ALLOW	0x0008	/* Allow use of non FIPS digest 
In line 289  						 * in FIPS mode */ 
In line 291  /* The following PAD options are also currently ignored in 1.0.0, digest 
In line 292   * parameters are handled through EVP_DigestSign*() and EVP_DigestVerify*() 
In line 293   * instead. 
In line 294   */ 
In line 295  #define EVP_MD_CTX_FLAG_PAD_MASK	0xF0	/* RSA mode to use */ 
In line 296  #define EVP_MD_CTX_FLAG_PAD_PKCS1	0x00	/* PKCS#1 v1.5 mode */ 
In line 297  #define EVP_MD_CTX_FLAG_PAD_X931	0x10	/* X9.31 mode */ 
In line 298  #define EVP_MD_CTX_FLAG_PAD_PSS		0x20	/* PSS mode */ 
In line 300  #define EVP_MD_CTX_FLAG_NO_INIT		0x0100 /* Don't initialize md_data */ 
In line 306  	int key_len;		/* Default value for variable length ciphers */ 
In line 308  	unsigned long flags;	/* Various flags */ 
In line 310  		    const unsigned char *iv, int enc);	/* init key */ 
In line 312  			 const unsigned char *in, size_t inl);/* encrypt/decrypt data */ 
In line 313  	int (*cleanup)(EVP_CIPHER_CTX *); /* cleanup ctx */ 
In line 314  	int ctx_size;		/* how big ctx->cipher_data needs to be */ 
In line 315  	int (*set_asn1_parameters)(EVP_CIPHER_CTX *, ASN1_TYPE *); /* Populate a ASN1_TYPE with parameters */ 
In line 316  	int (*get_asn1_parameters)(EVP_CIPHER_CTX *, ASN1_TYPE *); /* Get parameters from a ASN1_TYPE */ 
In line 317  	int (*ctrl)(EVP_CIPHER_CTX *, int type, int arg, void *ptr); /* Miscellaneous operations */ 
In line 318  	void *app_data;		/* Application data */ 
In line 319  	} /* EVP_CIPHER */; 
In line 321  /* Values for cipher flags */ 
In line 323  /* Modes for ciphers */ 
In line 335  /* Set if variable length cipher */ 
In line 337  /* Set if the iv handling should be done by the cipher itself */ 
In line 339  /* Set if the cipher's init() function should be called if key is NULL */ 
In line 341  /* Call ctrl() to init cipher parameters */ 
In line 343  /* Don't use standard key length function */ 
In line 345  /* Don't use standard block padding */ 
In line 347  /* cipher handles random key generation */ 
In line 349  /* cipher has its own additional copying logic */ 
In line 351  /* Allow use default ASN1 get/set iv */ 
In line 353  /* Buffer length in bits not bytes: CFB1 mode only */ 
In line 355  /* Note if suitable for use in FIPS mode */ 
In line 357  /* Allow non FIPS cipher in FIPS mode */ 
In line 359  /* Cipher handles any and all padding logic as well 
In line 360   * as finalisation. 
In line 361   */ 
In line 365  /* ctrl() values */ 
In line 386  /* AEAD cipher deduces payload length and returns number of bytes 
In line 387   * required to store MAC and eventual padding. Subsequent call to 
In line 388   * EVP_Cipher even appends/verifies MAC. 
In line 389   */ 
In line 391  /* Used by composite AEAD ciphers, no-op in GCM, CCM... */ 
In line 393  /* Set the GCM invocation field, decrypt only */ 
In line 396  /* GCM TLS constants */ 
In line 397  /* Length of fixed part of IV derived from PRF */ 
In line 399  /* Length of explicit part of IV part of TLS records */ 
In line 401  /* Length of tag for TLS */ 
In line 414  	ENGINE *engine;	/* functional reference if 'cipher' is ENGINE-provided */ 
In line 415  	int encrypt;		/* encrypt or decrypt */ 
In line 416  	int buf_len;		/* number we have left */ 
In line 418  	unsigned char  oiv[EVP_MAX_IV_LENGTH];	/* original iv */ 
In line 419  	unsigned char  iv[EVP_MAX_IV_LENGTH];	/* working iv */ 
In line 420  	unsigned char buf[EVP_MAX_BLOCK_LENGTH];/* saved partial block */ 
In line 421  	int num;				/* used by cfb/ofb/ctr mode */ 
In line 423  	void *app_data;		/* application stuff */ 
In line 424  	int key_len;		/* May change for variable length cipher */ 
In line 425  	unsigned long flags;	/* Various flags */ 
In line 426  	void *cipher_data; /* per EVP data */ 
In line 429  	unsigned char final[EVP_MAX_BLOCK_LENGTH];/* possible final block */ 
In line 430  	} /* EVP_CIPHER_CTX */; 
In line 434  	int num;	/* number saved in a partial encode/decode */ 
In line 435  	int length;	/* The length is either the output line length 
In line 436  			 * (in input bytes) or the shortest input line 
In line 437  			 * length that is ok.  Once decoding begins, 
In line 438  			 * the length is adjusted up each time a longer 
In line 439  			 * line is decoded */ 
In line 440  	unsigned char enc_data[80];	/* data to encode */ 
In line 441  	int line_num;	/* number read on current line */ 
In line 445  /* Password based encryption function */ 
In line 470  /* Add some extra combinations */ 
In line 700  const EVP_CIPHER *EVP_enc_null(void);		/* does nothing :-) */ 
In line 728  /* This should now be supported through the dev_crypto ENGINE. But also, why are 
In line 729   * rc4 and md5 declarations made here inside a "NO_DES" precompiler branch? */ 
In line 954  /* calls methods */ 
In line 958  /* These are used by EVP_CIPHER methods */ 
In line 962  /* PKCS5 password based encryption */ 
In line 982  /* PBE type */ 
In line 984  /* Can appear as the outermost AlgorithmIdentifier */ 
In line 986  /* Is an PRF type OID */ 
In line 1095  /* Used by GOST key encryption in TLS */ 
In line 1108  /* Method handles all operations: don't assume any digest related 
In line 1109   * defaults. 
In line 1110   */ 
In line 1245  /* BEGIN ERROR CODES */ 
In line 1246  /* The following lines are auto generated by the script mkerr.pl. Any changes 
In line 1247   * made after this point may be overwritten when the script is next run. 
In line 1248   */ 
In line 1251  /* Error codes for the EVP functions. */ 
In line 1253  /* Function codes. */ 
In line 1331  /* Reason codes. */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\e_os2.h  for analysis => 
In line 0  /* e_os2.h */ 
In line 1  /* ==================================================================== 
In line 2   * Copyright (c) 1998-2000 The OpenSSL Project.  All rights reserved. 
In line 3   * 
In line 4   * Redistribution and use in source and binary forms, with or without 
In line 5   * modification, are permitted provided that the following conditions 
In line 6   * are met: 
In line 7   * 
In line 8   * 1. Redistributions of source code must retain the above copyright 
In line 9   *    notice, this list of conditions and the following disclaimer.  
In line 10   * 
In line 11   * 2. Redistributions in binary form must reproduce the above copyright 
In line 12   *    notice, this list of conditions and the following disclaimer in 
In line 13   *    the documentation and/or other materials provided with the 
In line 14   *    distribution. 
In line 15   * 
In line 16   * 3. All advertising materials mentioning features or use of this 
In line 17   *    software must display the following acknowledgment: 
In line 18   *    "This product includes software developed by the OpenSSL Project 
In line 19   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 20   * 
In line 21   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 22   *    endorse or promote products derived from this software without 
In line 23   *    prior written permission. For written permission, please contact 
In line 24   *    openssl-core@openssl.org. 
In line 25   * 
In line 26   * 5. Products derived from this software may not be called "OpenSSL" 
In line 27   *    nor may "OpenSSL" appear in their names without prior written 
In line 28   *    permission of the OpenSSL Project. 
In line 29   * 
In line 30   * 6. Redistributions of any form whatsoever must retain the following 
In line 31   *    acknowledgment: 
In line 32   *    "This product includes software developed by the OpenSSL Project 
In line 33   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 34   * 
In line 35   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 36   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 37   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 38   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 39   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 40   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 41   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 42   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 43   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 44   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 45   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 46   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 47   * ==================================================================== 
In line 48   * 
In line 49   * This product includes cryptographic software written by Eric Young 
In line 50   * (eay@cryptsoft.com).  This product includes software written by Tim 
In line 51   * Hudson (tjh@cryptsoft.com). 
In line 52   * 
In line 53   */ 
In line 19   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 33   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 64  /****************************************************************************** 
In line 65   * Detect operating systems.  This probably needs completing. 
In line 66   * The result is that at least one OPENSSL_SYS_os macro should be defined. 
In line 67   * However, if none is defined, Unix is assumed. 
In line 68   **/ 
In line 72  /* ----------------------- Macintosh, before MacOS X ----------------------- */ 
In line 78  /* ----------------------- NetWare ----------------------------------------- */ 
In line 84  /* ---------------------- Microsoft operating systems ---------------------- */ 
In line 86  /* Note that MSDOS actually denotes 32-bit environments running on top of 
In line 87     MS-DOS, such as DJGPP one. */ 
In line 93  /* For 32 bit environment, there seems to be the CygWin environment and then 
In line 94     all the others that try to do the same thing Microsoft does... */ 
In line 118  /* Anything that tries to look like Microsoft is "Windows" */ 
In line 127  /* DLL settings.  This part is a bit tough, because it's up to the application 
In line 128     implementor how he or she will link the application, so it requires some 
In line 129     macro to be used. */ 
In line 132  #  if defined(_WINDLL) /* This is used when building OpenSSL to indicate that 
In line 133                            DLL linkage should be used */ 
In line 139  /* -------------------------------- OpenVMS -------------------------------- */ 
In line 153  /* --------------------------------- OS/2 ---------------------------------- */ 
In line 159  /* --------------------------------- Unix ---------------------------------- */ 
In line 194  /* --------------------------------- VOS ----------------------------------- */ 
In line 205  /* ------------------------------- VxWorks --------------------------------- */ 
In line 210  /* --------------------------------- BeOS ---------------------------------- */ 
In line 221  /** 
In line 222   * That's it for OS-specific stuff 
In line 223   *****************************************************************************/ 
In line 226  /* Specials for I/O an exit */ 
In line 232  # define OPENSSL_DECLARE_EXIT /* declared in unistd.h */ 
In line 235  /* Definitions of OPENSSL_GLOBAL and OPENSSL_EXTERN, to define and declare 
In line 236     certain global symbols that, with some compilers under VMS, have to be 
In line 237     defined and declared explicitely with globaldef and globalref. 
In line 238     Definitions of OPENSSL_EXPORT and OPENSSL_IMPORT, to define and declare 
In line 239     DLL exports and imports for compilers under Win32.  These are a little 
In line 240     more complicated to use.  Basically, for any library that exports some 
In line 241     global variables, the following code must be present in the header file 
In line 242     that declares them, before OPENSSL_EXTERN is used: 
In line 243   
In line 244     #ifdef SOME_BUILD_FLAG_MACRO 
In line 245     # undef OPENSSL_EXTERN 
In line 246     # define OPENSSL_EXTERN OPENSSL_EXPORT 
In line 247     #endif 
In line 248   
In line 249     The default is to have OPENSSL_EXPORT, OPENSSL_IMPORT and OPENSSL_GLOBAL 
In line 250     have some generally sensible values, and for OPENSSL_EXTERN to have the 
In line 251     value OPENSSL_IMPORT. 
In line 252  */ 
In line 269  /* Macros to allow global variables to be reached through function calls when 
In line 270     required (if a shared library version requires it, for example. 
In line 271     The way it's done allows definitions like this: 
In line 272   
In line 273  	// in foobar.c 
In line 274  	OPENSSL_IMPLEMENT_GLOBAL(int,foobar,0) 
In line 275  	// in foobar.h 
In line 276  	OPENSSL_DECLARE_GLOBAL(int,foobar); 
In line 277  	#define foobar OPENSSL_GLOBAL_REF(foobar) 
In line 278  */ 
In line 273  	// in foobar.c 
In line 275  	// in foobar.h 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\hmac.h  for analysis => 
In line 0  /* crypto/hmac/hmac.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 68  #define HMAC_MAX_MD_CBLOCK	128	/* largest known is SHA512 */ 
In line 90  #define HMAC_cleanup(ctx) HMAC_CTX_cleanup(ctx) /* deprecated */ 
In line 93  	       const EVP_MD *md); /* deprecated */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\idea.h  for analysis => 
In line 0  /* crypto/idea/idea.h */ 
In line 1  /* Copyright (C) 1995-1997 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 61  #include <openssl/opensslconf.h> /* IDEA_INT, OPENSSL_NO_IDEA */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\krb5_asn.h  for analysis => 
In line 0  /* krb5_asn.h */ 
In line 1  /* Written by Vern Staats <staatsvr@asc.hpc.mil> for the OpenSSL project, 
In line 2  ** using ocsp/{*.h,*asn*.c} as a starting point 
In line 3  */ 
In line 5  /* ==================================================================== 
In line 6   * Copyright (c) 1998-2000 The OpenSSL Project.  All rights reserved. 
In line 7   * 
In line 8   * Redistribution and use in source and binary forms, with or without 
In line 9   * modification, are permitted provided that the following conditions 
In line 10   * are met: 
In line 11   * 
In line 12   * 1. Redistributions of source code must retain the above copyright 
In line 13   *    notice, this list of conditions and the following disclaimer.  
In line 14   * 
In line 15   * 2. Redistributions in binary form must reproduce the above copyright 
In line 16   *    notice, this list of conditions and the following disclaimer in 
In line 17   *    the documentation and/or other materials provided with the 
In line 18   *    distribution. 
In line 19   * 
In line 20   * 3. All advertising materials mentioning features or use of this 
In line 21   *    software must display the following acknowledgment: 
In line 22   *    "This product includes software developed by the OpenSSL Project 
In line 23   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 24   * 
In line 25   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 26   *    endorse or promote products derived from this software without 
In line 27   *    prior written permission. For written permission, please contact 
In line 28   *    openssl-core@openssl.org. 
In line 29   * 
In line 30   * 5. Products derived from this software may not be called "OpenSSL" 
In line 31   *    nor may "OpenSSL" appear in their names without prior written 
In line 32   *    permission of the OpenSSL Project. 
In line 33   * 
In line 34   * 6. Redistributions of any form whatsoever must retain the following 
In line 35   *    acknowledgment: 
In line 36   *    "This product includes software developed by the OpenSSL Project 
In line 37   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 38   * 
In line 39   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 40   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 41   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 42   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 43   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 44   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 45   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 46   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 48   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 49   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 50   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 51   * ==================================================================== 
In line 52   * 
In line 53   * This product includes cryptographic software written by Eric Young 
In line 54   * (eay@cryptsoft.com).  This product includes software written by Tim 
In line 55   * Hudson (tjh@cryptsoft.com). 
In line 56   * 
In line 57   */ 
In line 23   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 37   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 62  /* 
In line 63  #include <krb5.h> 
In line 64  */ 
In line 72  /*	ASN.1 from Kerberos RFC 1510 
In line 73  */ 
In line 75  /*	EncryptedData ::=   SEQUENCE { 
In line 76  **		etype[0]                      INTEGER, -- EncryptionType 
In line 77  **		kvno[1]                       INTEGER OPTIONAL, 
In line 78  **		cipher[2]                     OCTET STRING -- ciphertext 
In line 79  **	} 
In line 80  */ 
In line 90  /*	PrincipalName ::=   SEQUENCE { 
In line 91  **		name-type[0]                  INTEGER, 
In line 92  **		name-string[1]                SEQUENCE OF GeneralString 
In line 93  **	} 
In line 94  */ 
In line 104  /*	Ticket ::=	[APPLICATION 1] SEQUENCE { 
In line 105  **		tkt-vno[0]                    INTEGER, 
In line 106  **		realm[1]                      Realm, 
In line 107  **		sname[2]                      PrincipalName, 
In line 108  **		enc-part[3]                   EncryptedData 
In line 109  **	} 
In line 110  */ 
In line 123  /*	AP-REQ ::=      [APPLICATION 14] SEQUENCE { 
In line 124  **		pvno[0]                       INTEGER, 
In line 125  **		msg-type[1]                   INTEGER, 
In line 126  **		ap-options[2]                 APOptions, 
In line 127  **		ticket[3]                     Ticket, 
In line 128  **		authenticator[4]              EncryptedData 
In line 129  **	} 
In line 130  ** 
In line 131  **	APOptions ::=   BIT STRING { 
In line 132  **		reserved(0), use-session-key(1), mutual-required(2) } 
In line 133  */ 
In line 147  /*	Authenticator Stuff	*/ 
In line 150  /*	Checksum ::=   SEQUENCE { 
In line 151  **		cksumtype[0]                  INTEGER, 
In line 152  **		checksum[1]                   OCTET STRING 
In line 153  **	} 
In line 154  */ 
In line 164  /*	EncryptionKey ::=   SEQUENCE { 
In line 165  **		keytype[0]                    INTEGER, 
In line 166  **		keyvalue[1]                   OCTET STRING 
In line 167  **	} 
In line 168  */ 
In line 178  /*	AuthorizationData ::=   SEQUENCE OF SEQUENCE { 
In line 179  **		ad-type[0]                    INTEGER, 
In line 180  **              ad-data[1]                    OCTET STRING 
In line 181  **	} 
In line 182  */ 
In line 192  /*	-- Unencrypted authenticator 
In line 193  **	Authenticator ::=    [APPLICATION 2] SEQUENCE    { 
In line 194  **		authenticator-vno[0]          INTEGER, 
In line 195  **		crealm[1]                     Realm, 
In line 196  **		cname[2]                      PrincipalName, 
In line 197  **		cksum[3]                      Checksum OPTIONAL, 
In line 198  **		cusec[4]                      INTEGER, 
In line 199  **		ctime[5]                      KerberosTime, 
In line 200  **		subkey[6]                     EncryptionKey OPTIONAL, 
In line 201  **		seq-number[7]                 INTEGER OPTIONAL, 
In line 202  **		authorization-data[8]         AuthorizationData OPTIONAL 
In line 203  **	} 
In line 204  */ 
In line 222  /*  DECLARE_ASN1_FUNCTIONS(type) = DECLARE_ASN1_FUNCTIONS_name(type, type) = 
In line 223  **	type *name##_new(void); 
In line 224  **	void name##_free(type *a); 
In line 225  **	DECLARE_ASN1_ENCODE_FUNCTIONS(type, name, name) = 
In line 226  **	 DECLARE_ASN1_ENCODE_FUNCTIONS(type, itname, name) = 
In line 227  **	  type *d2i_##name(type **a, const unsigned char **in, long len); 
In line 228  **	  int i2d_##name(type *a, unsigned char **out); 
In line 229  **	  DECLARE_ASN1_ITEM(itname) = OPENSSL_EXTERN const ASN1_ITEM itname##_it 
In line 230  */ 
In line 246  /* BEGIN ERROR CODES */ 
In line 247  /* The following lines are auto generated by the script mkerr.pl. Any changes 
In line 248   * made after this point may be overwritten when the script is next run. 
In line 249   */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\kssl.h  for analysis => 
In line 0  /* ssl/kssl.h -*- mode: C; c-file-style: "eay" -*- */ 
In line 1  /* Written by Vern Staats <staatsvr@asc.hpc.mil> for the OpenSSL project 2000. 
In line 2   * project 2000. 
In line 3   */ 
In line 4  /* ==================================================================== 
In line 5   * Copyright (c) 2000 The OpenSSL Project.  All rights reserved. 
In line 6   * 
In line 7   * Redistribution and use in source and binary forms, with or without 
In line 8   * modification, are permitted provided that the following conditions 
In line 9   * are met: 
In line 10   * 
In line 11   * 1. Redistributions of source code must retain the above copyright 
In line 12   *    notice, this list of conditions and the following disclaimer.  
In line 13   * 
In line 14   * 2. Redistributions in binary form must reproduce the above copyright 
In line 15   *    notice, this list of conditions and the following disclaimer in 
In line 16   *    the documentation and/or other materials provided with the 
In line 17   *    distribution. 
In line 18   * 
In line 19   * 3. All advertising materials mentioning features or use of this 
In line 20   *    software must display the following acknowledgment: 
In line 21   *    "This product includes software developed by the OpenSSL Project 
In line 22   *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)" 
In line 23   * 
In line 24   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 25   *    endorse or promote products derived from this software without 
In line 26   *    prior written permission. For written permission, please contact 
In line 27   *    licensing@OpenSSL.org. 
In line 28   * 
In line 29   * 5. Products derived from this software may not be called "OpenSSL" 
In line 30   *    nor may "OpenSSL" appear in their names without prior written 
In line 31   *    permission of the OpenSSL Project. 
In line 32   * 
In line 33   * 6. Redistributions of any form whatsoever must retain the following 
In line 34   *    acknowledgment: 
In line 35   *    "This product includes software developed by the OpenSSL Project 
In line 36   *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)" 
In line 37   * 
In line 38   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 39   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 40   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 41   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 42   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 43   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 44   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 45   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 46   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 47   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 48   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 49   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 50   * ==================================================================== 
In line 51   * 
In line 52   * This product includes cryptographic software written by Eric Young 
In line 53   * (eay@cryptsoft.com).  This product includes software written by Tim 
In line 54   * Hudson (tjh@cryptsoft.com). 
In line 55   * 
In line 56   */ 
In line 22   *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)" 
In line 36   *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)" 
In line 58  /* 
In line 59  **	19990701	VRS 	Started. 
In line 60  */ 
In line 77  /* 
In line 78  **	Depending on which KRB5 implementation used, some types from 
In line 79  **	the other may be missing.  Resolve that here and now 
In line 80  */ 
In line 92  /*	Uncomment this to debug kssl problems or 
In line 93  **	to trace usage of the Kerberos session key 
In line 94  ** 
In line 95  **	#define		KSSL_DEBUG 
In line 96  */ 
In line 125  /*	Context for passing 
In line 126  **		(1) Kerberos session key to SSL, and 
In line 127  **		(2)	Config data between application and SSL lib 
In line 128  */ 
In line 131                                  /*	used by:    disposition:            */ 
In line 132  	char *service_name;	/*	C,S	    default ok (kssl)       */ 
In line 133  	char *service_host;	/*	C	    input, REQUIRED         */ 
In line 134  	char *client_princ;	/*	S	    output from krb5 ticket */ 
In line 135  	char *keytab_file;	/*      S	    NULL (/etc/krb5.keytab) */ 
In line 136  	char *cred_cache;	/*	C	    NULL (default)          */ 
In line 151  /* Public (for use by applications that use OpenSSL with Kerberos 5 support */ 
In line 181  #endif	/* OPENSSL_NO_KRB5	*/ 
In line 182  #endif	/* KSSL_H 	*/ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\lhash.h  for analysis => 
In line 0  /* crypto/lhash/lhash.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 58  /* Header for dynamic hash table routines 
In line 59   * Author - Eric Young 
In line 60   */ 
In line 92  /* Macros for declaring and implementing type-safe wrappers for LHASH callbacks. 
In line 93   * This way, callbacks can be provided to LHASH structures without function 
In line 94   * pointer casting and the macro-defined callbacks provide per-variable casting 
In line 95   * before deferring to the underlying type-specific callbacks. NB: It is 
In line 96   * possible to place a "static" in front of both the DECLARE and IMPLEMENT 
In line 97   * macros if the functions are strictly internal. */ 
In line 99  /* First: "hash" functions */ 
In line 108  /* Second: "compare" functions */ 
In line 118  /* Third: "doall" functions */ 
In line 127  /* Fourth: "doall_arg" functions */ 
In line 146  	unsigned long up_load; /* load times 256 */ 
In line 147  	unsigned long down_load; /* load times 256 */ 
In line 165  	} _LHASH;	/* Do not use _LHASH directly, use LHASH_OF 
In line 166  			 * and friends */ 
In line 170  /* Indicates a malloc() error in the last call, this is only bad 
In line 171   * in lh_insert(). */ 
In line 196  /* Type checking... */ 
In line 205  /* Define wrapper functions. */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\md4.h  for analysis => 
In line 0  /* crypto/md4/md4.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 72  /* 
In line 73   * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
In line 74   * ! MD4_LONG has to be at least 32 bits wide. If it's wider, then ! 
In line 75   * ! MD4_LONG_LOG2 has to be defined along.			   ! 
In line 76   * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
In line 77   */ 
In line 84  /* 
In line 85   * _CRAY note. I could declare short, but I have no idea what impact 
In line 86   * does it have on performance on none-T3E machines. I could declare 
In line 87   * int, but at least on C90 sizeof(int) can be chosen at compile time. 
In line 88   * So I've chosen long... 
In line 89   *					<appro@fy.chalmers.se> 
In line 90   */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\md5.h  for analysis => 
In line 0  /* crypto/md5/md5.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 72  /* 
In line 73   * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
In line 74   * ! MD5_LONG has to be at least 32 bits wide. If it's wider, then ! 
In line 75   * ! MD5_LONG_LOG2 has to be defined along.			   ! 
In line 76   * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
In line 77   */ 
In line 84  /* 
In line 85   * _CRAY note. I could declare short, but I have no idea what impact 
In line 86   * does it have on performance on none-T3E machines. I could declare 
In line 87   * int, but at least on C90 sizeof(int) can be chosen at compile time. 
In line 88   * So I've chosen long... 
In line 89   *					<appro@fy.chalmers.se> 
In line 90   */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\mdc2.h  for analysis => 
In line 0  /* crypto/mdc2/mdc2.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 79  	int pad_type; /* either 1 or 2, default 1 */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\modes.h  for analysis => 
In line 0  /* ==================================================================== 
In line 1   * Copyright (c) 2008 The OpenSSL Project. All rights reserved. 
In line 2   * 
In line 3   * Rights for redistribution and usage in source and binary 
In line 4   * forms are granted according to the OpenSSL license. 
In line 5   */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\objects.h  for analysis => 
In line 0  /* crypto/objects/objects.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 146  /* Postal Address? PA */ 
In line 148  /* should be "ST" (rfc1327) but MS uses 'S' */ 
In line 213  /* IV + num */ 
In line 219  /* IV */ 
In line 225  /* ?? */ 
In line 362  /* I'm not sure about the object ID */ 
In line 367  /* 28 Jun 1996 - eay */ 
In line 368  /* #define OBJ_sha1			1L,3L,14L,2L,26L,05L <- wrong */ 
In line 385  /* proposed by microsoft to RSA */ 
In line 391  /* proposed by microsoft to RSA as pbeWithSHA1AndRC4: it is now 
In line 392   * defined explicitly in PKCS#5 v2.0 as id-PBKDF2 which is something 
In line 393   * completely different. 
In line 394   */ 
In line 402  /* Got this one from 'sdn706r20.pdf' which is actually an NSA document :-) */ 
In line 524  /* An alternative?			1L,3L,14L,3L,2L,19L */ 
In line 584  /* CAST5 is CAST-128, I'm just sticking with the documentation */ 
In line 606  /* This is one sun will soon be using :-( 
In line 607   * id-dsa-with-sha1 ID  ::= { 
In line 608   *   iso(1) member-body(2) us(840) x9-57 (10040) x9cm(4) 3 } 
In line 609   */ 
In line 634  /* The name should actually be rsaSignatureWithripemd160, but I'm going 
In line 635   * to continue using the convention I'm using with the other ciphers */ 
In line 641  /* Taken from rfc2040 
In line 642   *  RC5_CBC_Parameters ::= SEQUENCE { 
In line 643   *	version           INTEGER (v1_0(16)), 
In line 644   *	rounds            INTEGER (8..127), 
In line 645   *	blockSizeInBits   INTEGER (64, 128), 
In line 646   *	iv                OCTET STRING OPTIONAL 
In line 647   *	} 
In line 648   */ 
In line 689  /* PKIX extended key usage OIDs */ 
In line 716  /* Additional extended key usage OIDs: Microsoft */ 
In line 743  /* Additional usage: Netscape */ 
In line 770  /* PKCS12 and related OBJECT IDENTIFIERS */ 
In line 857  /* PKCS#5 v2 OIDs */ 
In line 871  /* Policy Qualifier Ids */ 
In line 907  /* Extension request OIDs */ 
In line 956  #endif /* USE_OBJ_MAC */ 
In line 996  void OBJ_NAME_cleanup(int type); /* -1 for everything */ 
In line 1030  /* 
In line 1031   * Unsolved problem: if a type is actually a pointer type, like 
In line 1032   * nid_triple is, then its impossible to get a const where you need 
In line 1033   * it. Consider: 
In line 1034   * 
In line 1035   * typedef int nid_triple[3]; 
In line 1036   * const void *a_; 
In line 1037   * const nid_triple const *a = a_; 
In line 1038   * 
In line 1039   * The assignement discards a const because what you really want is: 
In line 1040   * 
In line 1041   * const int const * const *a = a_; 
In line 1042   * 
In line 1043   * But if you do that, you lose the fact that a is an array of 3 ints, 
In line 1044   * which breaks comparison functions. 
In line 1045   * 
In line 1046   * Thus we end up having to cast, sadly, or unpack the 
In line 1047   * declarations. Or, as I finally did in this case, delcare nid_triple 
In line 1048   * to be a struct, which it should have been in the first place. 
In line 1049   * 
In line 1050   * Ben, August 2008. 
In line 1051   * 
In line 1052   * Also, strictly speaking not all types need be const, but handling 
In line 1053   * the non-constness means a lot of complication, and in practice 
In line 1054   * comparison routines do always not touch their arguments. 
In line 1055   */ 
In line 1113  /* BEGIN ERROR CODES */ 
In line 1114  /* The following lines are auto generated by the script mkerr.pl. Any changes 
In line 1115   * made after this point may be overwritten when the script is next run. 
In line 1116   */ 
In line 1119  /* Error codes for the OBJ functions. */ 
In line 1121  /* Function codes. */ 
In line 1130  /* Reason codes. */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\obj_mac.h  for analysis => 
In line 0  /* crypto/objects/obj_mac.h */ 
In line 2  /* THIS FILE IS GENERATED FROM objects.txt by objects.pl via the 
In line 3   * following command: 
In line 4   * perl objects.pl objects.txt obj_mac.num obj_mac.h 
In line 5   */ 
In line 7  /* Copyright (C) 1995-1997 Eric Young (eay@cryptsoft.com) 
In line 8   * All rights reserved. 
In line 9   * 
In line 10   * This package is an SSL implementation written 
In line 11   * by Eric Young (eay@cryptsoft.com). 
In line 12   * The implementation was written so as to conform with Netscapes SSL. 
In line 13   *  
In line 14   * This library is free for commercial and non-commercial use as long as 
In line 15   * the following conditions are aheared to.  The following conditions 
In line 16   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 17   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 18   * included with this distribution is covered by the same copyright terms 
In line 19   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 20   *  
In line 21   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 22   * the code are not to be removed. 
In line 23   * If this package is used in a product, Eric Young should be given attribution 
In line 24   * as the author of the parts of the library used. 
In line 25   * This can be in the form of a textual message at program startup or 
In line 26   * in documentation (online or textual) provided with the package. 
In line 27   *  
In line 28   * Redistribution and use in source and binary forms, with or without 
In line 29   * modification, are permitted provided that the following conditions 
In line 30   * are met: 
In line 31   * 1. Redistributions of source code must retain the copyright 
In line 32   *    notice, this list of conditions and the following disclaimer. 
In line 33   * 2. Redistributions in binary form must reproduce the above copyright 
In line 34   *    notice, this list of conditions and the following disclaimer in the 
In line 35   *    documentation and/or other materials provided with the distribution. 
In line 36   * 3. All advertising materials mentioning features or use of this software 
In line 37   *    must display the following acknowledgement: 
In line 38   *    "This product includes cryptographic software written by 
In line 39   *     Eric Young (eay@cryptsoft.com)" 
In line 40   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 41   *    being used are not cryptographic related :-). 
In line 42   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 43   *    the apps directory (application code) you must include an acknowledgement: 
In line 44   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 45   *  
In line 46   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 47   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 48   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 49   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 50   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 51   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 52   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 53   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 54   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 55   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 56   * SUCH DAMAGE. 
In line 57   *  
In line 58   * The licence and distribution terms for any publically available version or 
In line 59   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 60   * copied and put under another distribution licence 
In line 61   * [including the GNU Public Licence.] 
In line 62   */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\ocsp.h  for analysis => 
In line 0  /* ocsp.h */ 
In line 1  /* Written by Tom Titchener <Tom_Titchener@groove.net> for the OpenSSL 
In line 2   * project. */ 
In line 4  /* History: 
In line 5     This file was transfered to Richard Levitte from CertCo by Kathy 
In line 6     Weinhold in mid-spring 2000 to be included in OpenSSL or released 
In line 7     as a patch kit. */ 
In line 9  /* ==================================================================== 
In line 10   * Copyright (c) 1998-2000 The OpenSSL Project.  All rights reserved. 
In line 11   * 
In line 12   * Redistribution and use in source and binary forms, with or without 
In line 13   * modification, are permitted provided that the following conditions 
In line 14   * are met: 
In line 15   * 
In line 16   * 1. Redistributions of source code must retain the above copyright 
In line 17   *    notice, this list of conditions and the following disclaimer.  
In line 18   * 
In line 19   * 2. Redistributions in binary form must reproduce the above copyright 
In line 20   *    notice, this list of conditions and the following disclaimer in 
In line 21   *    the documentation and/or other materials provided with the 
In line 22   *    distribution. 
In line 23   * 
In line 24   * 3. All advertising materials mentioning features or use of this 
In line 25   *    software must display the following acknowledgment: 
In line 26   *    "This product includes software developed by the OpenSSL Project 
In line 27   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 28   * 
In line 29   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 30   *    endorse or promote products derived from this software without 
In line 31   *    prior written permission. For written permission, please contact 
In line 32   *    openssl-core@openssl.org. 
In line 33   * 
In line 34   * 5. Products derived from this software may not be called "OpenSSL" 
In line 35   *    nor may "OpenSSL" appear in their names without prior written 
In line 36   *    permission of the OpenSSL Project. 
In line 37   * 
In line 38   * 6. Redistributions of any form whatsoever must retain the following 
In line 39   *    acknowledgment: 
In line 40   *    "This product includes software developed by the OpenSSL Project 
In line 41   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 42   * 
In line 43   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 44   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 45   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 46   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 47   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 48   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 49   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 50   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 51   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 52   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 53   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 54   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 55   * ==================================================================== 
In line 56   * 
In line 57   * This product includes cryptographic software written by Eric Young 
In line 58   * (eay@cryptsoft.com).  This product includes software written by Tim 
In line 59   * Hudson (tjh@cryptsoft.com). 
In line 60   * 
In line 61   */ 
In line 27   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 41   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 75  /* Various flags and values */ 
In line 92  /*   CertID ::= SEQUENCE { 
In line 93   *       hashAlgorithm            AlgorithmIdentifier, 
In line 94   *       issuerNameHash     OCTET STRING, -- Hash of Issuer's DN 
In line 95   *       issuerKeyHash      OCTET STRING, -- Hash of Issuers public key (excluding the tag & length fields) 
In line 96   *       serialNumber       CertificateSerialNumber } 
In line 97   */ 
In line 108  /*   Request ::=     SEQUENCE { 
In line 109   *       reqCert                    CertID, 
In line 110   *       singleRequestExtensions    [0] EXPLICIT Extensions OPTIONAL } 
In line 111   */ 
In line 122  /*   TBSRequest      ::=     SEQUENCE { 
In line 123   *       version             [0] EXPLICIT Version DEFAULT v1, 
In line 124   *       requestorName       [1] EXPLICIT GeneralName OPTIONAL, 
In line 125   *       requestList             SEQUENCE OF Request, 
In line 126   *       requestExtensions   [2] EXPLICIT Extensions OPTIONAL } 
In line 127   */ 
In line 136  /*   Signature       ::=     SEQUENCE { 
In line 137   *       signatureAlgorithm   AlgorithmIdentifier, 
In line 138   *       signature            BIT STRING, 
In line 139   *       certs                [0] EXPLICIT SEQUENCE OF Certificate OPTIONAL } 
In line 140   */ 
In line 148  /*   OCSPRequest     ::=     SEQUENCE { 
In line 149   *       tbsRequest                  TBSRequest, 
In line 150   *       optionalSignature   [0]     EXPLICIT Signature OPTIONAL } 
In line 151   */ 
In line 155  	OCSP_SIGNATURE *optionalSignature; /* OPTIONAL */ 
In line 158  /*   OCSPResponseStatus ::= ENUMERATED { 
In line 159   *       successful            (0),      --Response has valid confirmations 
In line 160   *       malformedRequest      (1),      --Illegal confirmation request 
In line 161   *       internalError         (2),      --Internal error in issuer 
In line 162   *       tryLater              (3),      --Try again later 
In line 163   *                                       --(4) is not used 
In line 164   *       sigRequired           (5),      --Must sign the request 
In line 165   *       unauthorized          (6)       --Request unauthorized 
In line 166   *   } 
In line 167   */ 
In line 175  /*   ResponseBytes ::=       SEQUENCE { 
In line 176   *       responseType   OBJECT IDENTIFIER, 
In line 177   *       response       OCTET STRING } 
In line 178   */ 
In line 185  /*   OCSPResponse ::= SEQUENCE { 
In line 186   *      responseStatus         OCSPResponseStatus, 
In line 187   *      responseBytes          [0] EXPLICIT ResponseBytes OPTIONAL } 
In line 188   */ 
In line 195  /*   ResponderID ::= CHOICE { 
In line 196   *      byName   [1] Name, 
In line 197   *      byKey    [2] KeyHash } 
In line 198   */ 
In line 213  /*   KeyHash ::= OCTET STRING --SHA-1 hash of responder's public key 
In line 214   *                            --(excluding the tag and length fields) 
In line 215   */ 
In line 217  /*   RevokedInfo ::= SEQUENCE { 
In line 218   *       revocationTime              GeneralizedTime, 
In line 219   *       revocationReason    [0]     EXPLICIT CRLReason OPTIONAL } 
In line 220   */ 
In line 227  /*   CertStatus ::= CHOICE { 
In line 228   *       good                [0]     IMPLICIT NULL, 
In line 229   *       revoked             [1]     IMPLICIT RevokedInfo, 
In line 230   *       unknown             [2]     IMPLICIT UnknownInfo } 
In line 231   */ 
In line 245  /*   SingleResponse ::= SEQUENCE { 
In line 246   *      certID                       CertID, 
In line 247   *      certStatus                   CertStatus, 
In line 248   *      thisUpdate                   GeneralizedTime, 
In line 249   *      nextUpdate           [0]     EXPLICIT GeneralizedTime OPTIONAL, 
In line 250   *      singleExtensions     [1]     EXPLICIT Extensions OPTIONAL } 
In line 251   */ 
In line 264  /*   ResponseData ::= SEQUENCE { 
In line 265   *      version              [0] EXPLICIT Version DEFAULT v1, 
In line 266   *      responderID              ResponderID, 
In line 267   *      producedAt               GeneralizedTime, 
In line 268   *      responses                SEQUENCE OF SingleResponse, 
In line 269   *      responseExtensions   [1] EXPLICIT Extensions OPTIONAL } 
In line 270   */ 
In line 280  /*   BasicOCSPResponse       ::= SEQUENCE { 
In line 281   *      tbsResponseData      ResponseData, 
In line 282   *      signatureAlgorithm   AlgorithmIdentifier, 
In line 283   *      signature            BIT STRING, 
In line 284   *      certs                [0] EXPLICIT SEQUENCE OF Certificate OPTIONAL } 
In line 285   */ 
In line 286    /* Note 1: 
In line 287       The value for "signature" is specified in the OCSP rfc2560 as follows: 
In line 288       "The value for the signature SHALL be computed on the hash of the DER 
In line 289       encoding ResponseData."  This means that you must hash the DER-encoded 
In line 290       tbsResponseData, and then run it through a crypto-signing function, which 
In line 291       will (at least w/RSA) do a hash-'n'-private-encrypt operation.  This seems 
In line 292       a bit odd, but that's the spec.  Also note that the data structures do not 
In line 293       leave anywhere to independently specify the algorithm used for the initial 
In line 294       hash. So, we look at the signature-specification algorithm, and try to do 
In line 295       something intelligent.	-- Kathy Weinhold, CertCo */ 
In line 296    /* Note 2: 
In line 297       It seems that the mentioned passage from RFC 2560 (section 4.2.1) is open 
In line 298       for interpretation.  I've done tests against another responder, and found 
In line 299       that it doesn't do the double hashing that the RFC seems to say one 
In line 300       should.  Therefore, all relevant functions take a flag saying which 
In line 301       variant should be used.	-- Richard Levitte, OpenSSL team and CeloCom */ 
In line 310  /* 
In line 311   *   CRLReason ::= ENUMERATED { 
In line 312   *        unspecified             (0), 
In line 313   *        keyCompromise           (1), 
In line 314   *        cACompromise            (2), 
In line 315   *        affiliationChanged      (3), 
In line 316   *        superseded              (4), 
In line 317   *        cessationOfOperation    (5), 
In line 318   *        certificateHold         (6), 
In line 319   *        removeFromCRL           (8) } 
In line 320   */ 
In line 331  /* CrlID ::= SEQUENCE { 
In line 332   *     crlUrl               [0]     EXPLICIT IA5String OPTIONAL, 
In line 333   *     crlNum               [1]     EXPLICIT INTEGER OPTIONAL, 
In line 334   *     crlTime              [2]     EXPLICIT GeneralizedTime OPTIONAL } 
In line 335   */ 
In line 343  /* ServiceLocator ::= SEQUENCE { 
In line 344   *      issuer    Name, 
In line 345   *      locator   AuthorityInfoAccessSyntax OPTIONAL } 
In line 346   */ 
In line 558  /* BEGIN ERROR CODES */ 
In line 559  /* The following lines are auto generated by the script mkerr.pl. Any changes 
In line 560   * made after this point may be overwritten when the script is next run. 
In line 561   */ 
In line 564  /* Error codes for the OCSP functions. */ 
In line 566  /* Function codes. */ 
In line 587  /* Reason codes. */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\opensslconf.h  for analysis => 
In line 0  /* opensslconf.h */ 
In line 1  /* WARNING: Generated automatically from opensslconf.h.in by Configure. */ 
In line 3  /* OpenSSL was configured with the following options: */ 
In line 38  #endif /* OPENSSL_DOING_MAKEDEPEND */ 
In line 44  /* The OPENSSL_NO_* macros are also defined as NO_* if the application 
In line 45     asks for it.  This is a transient feature that is provided for those 
In line 46     who haven't had the time to do the appropriate changes in their 
In line 47     applications.  */ 
In line 80  /* crypto/opensslconf.h.in */ 
In line 82  /* Generate 80386 code? */ 
In line 85  #if !(defined(VMS) || defined(__VMS)) /* VMS uses logical names instead */ 
In line 107  /* I need to put in a mod for the alpha - eay */ 
In line 113  /* using int types make the structure larger but make the code faster 
In line 114   * on most boxes I have tested - up to %20 faster. */ 
In line 115  /* 
In line 116   * I don't know what does "most" mean, but declaring "int" is a must on: 
In line 117   * - Intel P6 because partial register stalls are very expensive; 
In line 118   * - elder Alpha because it lacks byte load/store instructions; 
In line 119   */ 
In line 123  /* 
In line 124   * This enables code handling data aligned at natural CPU word 
In line 125   * boundary. See crypto/rc4/rc4_enc.c for further details. 
In line 126   */ 
In line 132  /* If this is set to 'unsigned int' on a DEC Alpha, this gives about a 
In line 133   * %20 speed up (longs are 8 bytes, int's are 4). */ 
In line 143  /* Should we define BN_DIV2W here? */ 
In line 145  /* Only one for the following should be defined */ 
In line 153  /* if this is defined data[i] is used instead of *data, this is a %20 
In line 154   * speedup on x86 */ 
In line 161  #endif /* HEADER_BF_LOCL_H */ 
In line 166  /* the following is tweaked from a config script, that is why it is a 
In line 167   * protected undef/define */ 
In line 172  /* This helps C compiler generate the correct code for multiple functional 
In line 173   * units.  It reduces register dependancies at the expense of 2 more 
In line 174   * registers */ 
In line 187  /* Unroll the inner loop, this sometimes helps, sometimes hinders. 
In line 188   * Very mucy CPU dependant */ 
In line 193  /* These default values were supplied by 
In line 194   * Peter Gutman <pgut001@cs.auckland.ac.nz> 
In line 195   * They are only used if nothing else has been defined */ 
In line 197  /* Special defines which change the way the code is built depending on the 
In line 198     CPU and OS.  For SGI machines you can use _MIPS_SZLONG (32 or 64) to find 
In line 199     even newer MIPS CPU's, but at the moment one size fits all for 
In line 200     optimization options.  Older Sparc's work better with only UNROLL, but 
In line 201     there's no way to tell at compile time what it is you're running on */ 
In line 203  #if defined( sun )		/* Newer Sparc's */ 
In line 207  #elif defined( __ultrix )	/* Older MIPS */ 
In line 211  #elif defined( __osf1__ )	/* Alpha */ 
In line 214  #elif defined ( _AIX )		/* RS6000 */ 
In line 215    /* Unknown */ 
In line 216  #elif defined( __hpux )		/* HP-PA */ 
In line 217    /* Unknown */ 
In line 218  #elif defined( __aux )		/* 68K */ 
In line 219    /* Unknown */ 
In line 220  #elif defined( __dgux )		/* 88K (but P6 in latest boxes) */ 
In line 222  #elif defined( __sgi )		/* Newer MIPS */ 
In line 226  #elif defined(i386) || defined(__i386__)	/* x86 boxes, should be gcc */ 
In line 230  #endif /* Systems-specific speed defines */ 
In line 233  #endif /* DES_DEFAULT_OPTIONS */ 
In line 234  #endif /* HEADER_DES_LOCL_H */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\opensslv.h  for analysis => 
In line 3  /* Numeric release version identifier: 
In line 4   * MNNFFPPS: major minor fix patch status 
In line 5   * The status nibble has one of the values 0 for development, 1 to e for betas 
In line 6   * 1 to 14, and f for release.  The patch level is exactly that. 
In line 7   * For example: 
In line 8   * 0.9.3-dev	  0x00903000 
In line 9   * 0.9.3-beta1	  0x00903001 
In line 10   * 0.9.3-beta2-dev 0x00903002 
In line 11   * 0.9.3-beta2    0x00903002 (same as ...beta2-dev) 
In line 12   * 0.9.3	  0x0090300f 
In line 13   * 0.9.3a	  0x0090301f 
In line 14   * 0.9.4 	  0x0090400f 
In line 15   * 1.2.3z	  0x102031af 
In line 16   * 
In line 17   * For continuity reasons (because 0.9.5 is already out, and is coded 
In line 18   * 0x00905100), between 0.9.5 and 0.9.6 the coding of the patch level 
In line 19   * part is slightly different, by setting the highest bit.  This means 
In line 20   * that 0.9.5a looks like this: 0x0090581f.  At 0.9.6, we can start 
In line 21   * with 0x0090600S... 
In line 22   * 
In line 23   * (Prior to 0.9.3-dev a different scheme was used: 0.9.2b is 0x0922.) 
In line 24   * (Prior to 0.9.5a beta1, a different scheme was used: MMNNFFRBB for 
In line 25   *  major minor fix final patch/beta) 
In line 26   */ 
In line 36  /* The macros below are to be used for shared library (.so, .dll, ...) 
In line 37   * versioning.  That kind of versioning works a bit differently between 
In line 38   * operating systems.  The most usual scheme is to set a major and a minor 
In line 39   * number, and have the runtime loader check that the major number is equal 
In line 40   * to what it was at application link time, while the minor number has to 
In line 41   * be greater or equal to what it was at application link time.  With this 
In line 42   * scheme, the version number is usually part of the file name, like this: 
In line 43   * 
In line 44   *	libcrypto.so.0.9 
In line 45   * 
In line 46   * Some unixen also make a softlink with the major verson number only: 
In line 47   * 
In line 48   *	libcrypto.so.0 
In line 49   * 
In line 50   * On Tru64 and IRIX 6.x it works a little bit differently.  There, the 
In line 51   * shared library version is stored in the file, and is actually a series 
In line 52   * of versions, separated by colons.  The rightmost version present in the 
In line 53   * library when linking an application is stored in the application to be 
In line 54   * matched at run time.  When the application is run, a check is done to 
In line 55   * see if the library version stored in the application matches any of the 
In line 56   * versions in the version string of the library itself. 
In line 57   * This version string can be constructed in any way, depending on what 
In line 58   * kind of matching is desired.  However, to implement the same scheme as 
In line 59   * the one used in the other unixen, all compatible versions, from lowest 
In line 60   * to highest, should be part of the string.  Consecutive builds would 
In line 61   * give the following versions strings: 
In line 62   * 
In line 63   *	3.0 
In line 64   *	3.0:3.1 
In line 65   *	3.0:3.1:3.2 
In line 66   *	4.0 
In line 67   *	4.0:4.1 
In line 68   * 
In line 69   * Notice how version 4 is completely incompatible with version, and 
In line 70   * therefore give the breach you can see. 
In line 71   * 
In line 72   * There may be other schemes as well that I haven't yet discovered. 
In line 73   * 
In line 74   * So, here's the way it works here: first of all, the library version 
In line 75   * number doesn't need at all to match the overall OpenSSL version. 
In line 76   * However, it's nice and more understandable if it actually does. 
In line 77   * The current library version is stored in the macro SHLIB_VERSION_NUMBER, 
In line 78   * which is just a piece of text in the format "M.m.e" (Major, minor, edit). 
In line 79   * For the sake of Tru64, IRIX, and any other OS that behaves in similar ways, 
In line 80   * we need to keep a history of version numbers, which is done in the 
In line 81   * macro SHLIB_VERSION_HISTORY.  The numbers are separated by colons and 
In line 82   * should only keep the versions that are binary compatible with the current. 
In line 83   */ 
In line 88  #endif /* HEADER_OPENSSLV_H */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\ossl_typ.h  for analysis => 
In line 0  /* ==================================================================== 
In line 1   * Copyright (c) 1998-2001 The OpenSSL Project.  All rights reserved. 
In line 2   * 
In line 3   * Redistribution and use in source and binary forms, with or without 
In line 4   * modification, are permitted provided that the following conditions 
In line 5   * are met: 
In line 6   * 
In line 7   * 1. Redistributions of source code must retain the above copyright 
In line 8   *    notice, this list of conditions and the following disclaimer.  
In line 9   * 
In line 10   * 2. Redistributions in binary form must reproduce the above copyright 
In line 11   *    notice, this list of conditions and the following disclaimer in 
In line 12   *    the documentation and/or other materials provided with the 
In line 13   *    distribution. 
In line 14   * 
In line 15   * 3. All advertising materials mentioning features or use of this 
In line 16   *    software must display the following acknowledgment: 
In line 17   *    "This product includes software developed by the OpenSSL Project 
In line 18   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 19   * 
In line 20   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 21   *    endorse or promote products derived from this software without 
In line 22   *    prior written permission. For written permission, please contact 
In line 23   *    openssl-core@openssl.org. 
In line 24   * 
In line 25   * 5. Products derived from this software may not be called "OpenSSL" 
In line 26   *    nor may "OpenSSL" appear in their names without prior written 
In line 27   *    permission of the OpenSSL Project. 
In line 28   * 
In line 29   * 6. Redistributions of any form whatsoever must retain the following 
In line 30   *    acknowledgment: 
In line 31   *    "This product includes software developed by the OpenSSL Project 
In line 32   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 33   * 
In line 34   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 35   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 36   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 37   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 38   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 39   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 40   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 41   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 42   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 43   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 44   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 45   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 46   * ==================================================================== 
In line 47   * 
In line 48   * This product includes cryptographic software written by Eric Young 
In line 49   * (eay@cryptsoft.com).  This product includes software written by Tim 
In line 50   * Hudson (tjh@cryptsoft.com). 
In line 51   * 
In line 52   */ 
In line 18   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 32   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 184    /* If placed in pkcs12.h, we end up with a circular depency with pkcs7.h */ 
In line 185  #define DECLARE_PKCS12_STACK_OF(type) /* Nothing */ 
In line 186  #define IMPLEMENT_PKCS12_STACK_OF(type) /* Nothing */ 
In line 189  /* Callback types for crypto.h */ 
In line 201  #endif /* def HEADER_OPENSSL_TYPES_H */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\pem.h  for analysis => 
In line 0  /* crypto/pem/pem.h */ 
In line 1  /* Copyright (C) 1995-1997 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 139    /* Note that this structure is initialised by PEM_SealInit and cleaned up 
In line 140       by PEM_SealFinal (at least for now) */ 
In line 148  /* enc_type is one off */ 
In line 161  	/*	char iv[8]; unused and wrong size */ 
In line 166  	int type;		/* what type of object */ 
In line 177  	/* unused, and wrong size 
In line 178  	   unsigned char iv[8]; */ 
In line 186  	/* XXX(ben): don#t think this is used!  
In line 187  		STACK *x509_chain;	/ * certificate chain */ 
In line 188  	EVP_MD *md;		/* signature type */ 
In line 190  	int md_enc;		/* is the md encrypted or not? */ 
In line 191  	int md_len;		/* length of md_data */ 
In line 192  	char *md_data;		/* message digest, could be pkey encrypted */ 
In line 194  	EVP_CIPHER *dec;	/* date encryption cipher */ 
In line 195  	int key_len;		/* key length */ 
In line 196  	unsigned char *key;	/* key */ 
In line 197  	/* unused, and wrong size 
In line 198  	   unsigned char iv[8]; */ 
In line 201  	int  data_enc;		/* is the data encrypted */ 
In line 206  /* These macros make the PEM_read/PEM_write functions easier to maintain and 
In line 207   * write. Now they are all implemented with either: 
In line 208   * IMPLEMENT_PEM_rw(...) or IMPLEMENT_PEM_rw_cb(...) 
In line 209   */ 
In line 213  #define IMPLEMENT_PEM_read_fp(name, type, str, asn1) /**/ 
In line 214  #define IMPLEMENT_PEM_write_fp(name, type, str, asn1) /**/ 
In line 215  #define IMPLEMENT_PEM_write_fp_const(name, type, str, asn1) /**/ 
In line 216  #define IMPLEMENT_PEM_write_cb_fp(name, type, str, asn1) /**/ 
In line 217  #define IMPLEMENT_PEM_write_cb_fp_const(name, type, str, asn1) /**/ 
In line 321  /* These are the same except they are for the declarations */ 
In line 325  #define DECLARE_PEM_read_fp(name, type) /**/ 
In line 326  #define DECLARE_PEM_write_fp(name, type) /**/ 
In line 327  #define DECLARE_PEM_write_cb_fp(name, type) /**/ 
In line 362  #define DECLARE_PEM_read_bio(name, type) /**/ 
In line 363  #define DECLARE_PEM_write_bio(name, type) /**/ 
In line 364  #define DECLARE_PEM_write_bio_const(name, type) /**/ 
In line 365  #define DECLARE_PEM_write_cb_bio(name, type) /**/ 
In line 398  /* "userdata": new with OpenSSL 0.9.4 */ 
In line 401  /* OpenSSL 0.9.3, 0.9.3a */ 
In line 557  /* BEGIN ERROR CODES */ 
In line 558  /* The following lines are auto generated by the script mkerr.pl. Any changes 
In line 559   * made after this point may be overwritten when the script is next run. 
In line 560   */ 
In line 563  /* Error codes for the PEM functions. */ 
In line 565  /* Function codes. */ 
In line 607  /* Reason codes. */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\pem2.h  for analysis => 
In line 0  /* ==================================================================== 
In line 1   * Copyright (c) 1999 The OpenSSL Project.  All rights reserved. 
In line 2   * 
In line 3   * Redistribution and use in source and binary forms, with or without 
In line 4   * modification, are permitted provided that the following conditions 
In line 5   * are met: 
In line 6   * 
In line 7   * 1. Redistributions of source code must retain the above copyright 
In line 8   *    notice, this list of conditions and the following disclaimer.  
In line 9   * 
In line 10   * 2. Redistributions in binary form must reproduce the above copyright 
In line 11   *    notice, this list of conditions and the following disclaimer in 
In line 12   *    the documentation and/or other materials provided with the 
In line 13   *    distribution. 
In line 14   * 
In line 15   * 3. All advertising materials mentioning features or use of this 
In line 16   *    software must display the following acknowledgment: 
In line 17   *    "This product includes software developed by the OpenSSL Project 
In line 18   *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)" 
In line 19   * 
In line 20   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 21   *    endorse or promote products derived from this software without 
In line 22   *    prior written permission. For written permission, please contact 
In line 23   *    licensing@OpenSSL.org. 
In line 24   * 
In line 25   * 5. Products derived from this software may not be called "OpenSSL" 
In line 26   *    nor may "OpenSSL" appear in their names without prior written 
In line 27   *    permission of the OpenSSL Project. 
In line 28   * 
In line 29   * 6. Redistributions of any form whatsoever must retain the following 
In line 30   *    acknowledgment: 
In line 31   *    "This product includes software developed by the OpenSSL Project 
In line 32   *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)" 
In line 33   * 
In line 34   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 35   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 36   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 37   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 38   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 39   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 40   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 41   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 42   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 43   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 44   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 45   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 46   * ==================================================================== 
In line 47   * 
In line 48   * This product includes cryptographic software written by Eric Young 
In line 49   * (eay@cryptsoft.com).  This product includes software written by Tim 
In line 50   * Hudson (tjh@cryptsoft.com). 
In line 51   * 
In line 52   */ 
In line 18   *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)" 
In line 32   *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)" 
In line 54  /* 
In line 55   * This header only exists to break a circular dependency between pem and err 
In line 56   * Ben 30 Jan 1999. 
In line 57   */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\pkcs12.h  for analysis => 
In line 0  /* pkcs12.h */ 
In line 1  /* Written by Dr Stephen N Henson (steve@openssl.org) for the OpenSSL 
In line 2   * project 1999. 
In line 3   */ 
In line 4  /* ==================================================================== 
In line 5   * Copyright (c) 1999 The OpenSSL Project.  All rights reserved. 
In line 6   * 
In line 7   * Redistribution and use in source and binary forms, with or without 
In line 8   * modification, are permitted provided that the following conditions 
In line 9   * are met: 
In line 10   * 
In line 11   * 1. Redistributions of source code must retain the above copyright 
In line 12   *    notice, this list of conditions and the following disclaimer.  
In line 13   * 
In line 14   * 2. Redistributions in binary form must reproduce the above copyright 
In line 15   *    notice, this list of conditions and the following disclaimer in 
In line 16   *    the documentation and/or other materials provided with the 
In line 17   *    distribution. 
In line 18   * 
In line 19   * 3. All advertising materials mentioning features or use of this 
In line 20   *    software must display the following acknowledgment: 
In line 21   *    "This product includes software developed by the OpenSSL Project 
In line 22   *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)" 
In line 23   * 
In line 24   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 25   *    endorse or promote products derived from this software without 
In line 26   *    prior written permission. For written permission, please contact 
In line 27   *    licensing@OpenSSL.org. 
In line 28   * 
In line 29   * 5. Products derived from this software may not be called "OpenSSL" 
In line 30   *    nor may "OpenSSL" appear in their names without prior written 
In line 31   *    permission of the OpenSSL Project. 
In line 32   * 
In line 33   * 6. Redistributions of any form whatsoever must retain the following 
In line 34   *    acknowledgment: 
In line 35   *    "This product includes software developed by the OpenSSL Project 
In line 36   *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)" 
In line 37   * 
In line 38   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 39   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 40   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 41   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 42   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 43   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 44   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 45   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 46   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 47   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 48   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 49   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 50   * ==================================================================== 
In line 51   * 
In line 52   * This product includes cryptographic software written by Eric Young 
In line 53   * (eay@cryptsoft.com).  This product includes software written by Tim 
In line 54   * Hudson (tjh@cryptsoft.com). 
In line 55   * 
In line 56   */ 
In line 22   *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)" 
In line 36   *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)" 
In line 72  /* Default iteration count */ 
In line 81  /* Uncomment out next line for unicode password and names, otherwise ASCII */ 
In line 83  /*#define PBE_UNICODE*/ 
In line 93  /* MS key usage constants */ 
In line 101  ASN1_INTEGER *iter;	/* defaults to 1 */ 
In line 113  	struct pkcs12_bag_st *bag; /* secret, crl and certbag */ 
In line 114  	struct pkcs8_priv_key_info_st	*keybag; /* keybag */ 
In line 115  	X509_SIG *shkeybag; /* shrouded key bag */ 
In line 133  	ASN1_TYPE *other; /* Secret or other bag */ 
In line 140  /* Compatibility macros */ 
In line 264  /* BEGIN ERROR CODES */ 
In line 265  /* The following lines are auto generated by the script mkerr.pl. Any changes 
In line 266   * made after this point may be overwritten when the script is next run. 
In line 267   */ 
In line 270  /* Error codes for the PKCS12 functions. */ 
In line 272  /* Function codes. */ 
In line 303  /* Reason codes. */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\pkcs7.h  for analysis => 
In line 0  /* crypto/pkcs7/pkcs7.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 73  /* Under Win32 thes are defined in wincrypt.h */ 
In line 78  /* 
In line 79  Encryption_ID		DES-CBC 
In line 80  Digest_ID		MD5 
In line 81  Digest_Encryption_ID	rsaEncryption 
In line 82  Key_Encryption_ID	rsaEncryption 
In line 83  */ 
In line 93  	ASN1_INTEGER 			*version;	/* version 1 */ 
In line 96  	STACK_OF(X509_ATTRIBUTE)	*auth_attr;	/* [ 0 ] */ 
In line 99  	STACK_OF(X509_ATTRIBUTE)	*unauth_attr;	/* [ 1 ] */ 
In line 101  	/* The private key to sign with */ 
In line 110  	ASN1_INTEGER			*version;	/* version 0 */ 
In line 114  	X509				*cert; /* get the pub-key from this */ 
In line 122  	ASN1_INTEGER			*version;	/* version 1 */ 
In line 123  	STACK_OF(X509_ALGOR)		*md_algs;	/* md used */ 
In line 124  	STACK_OF(X509)			*cert;		/* [ 0 ] */ 
In line 125  	STACK_OF(X509_CRL)		*crl;		/* [ 1 ] */ 
In line 130  /* The above structure is very very similar to PKCS7_SIGN_ENVELOPE. 
In line 131   * How about merging the two */ 
In line 137  	ASN1_OCTET_STRING		*enc_data;	/* [ 0 ] */ 
In line 143  	ASN1_INTEGER			*version;	/* version 0 */ 
In line 150  	ASN1_INTEGER			*version;	/* version 1 */ 
In line 151  	STACK_OF(X509_ALGOR)		*md_algs;	/* md used */ 
In line 152  	STACK_OF(X509)			*cert;		/* [ 0 ] */ 
In line 153  	STACK_OF(X509_CRL)		*crl;		/* [ 1 ] */ 
In line 162  	ASN1_INTEGER			*version;	/* version 0 */ 
In line 163  	X509_ALGOR			*md;		/* md used */ 
In line 170  	ASN1_INTEGER			*version;	/* version 0 */ 
In line 176  	/* The following is non NULL if it contains ASN1 encoding of 
In line 177  	 * this structure */ 
In line 184  	int state; /* used during processing */ 
In line 189  	/* content as defined by the type */ 
In line 190  	/* all encryption/message digests are applied to the 'contents', 
In line 191  	 * leaving out the 'type' field. */ 
In line 195  		/* NID_pkcs7_data */ 
In line 198  		/* NID_pkcs7_signed */ 
In line 201  		/* NID_pkcs7_enveloped */ 
In line 204  		/* NID_pkcs7_signedAndEnveloped */ 
In line 207  		/* NID_pkcs7_digest */ 
In line 210  		/* NID_pkcs7_encrypted */ 
In line 213  		/* Anything else */ 
In line 247  /* S/MIME related flags */ 
In line 266  /* Flags: for compatibility with older code */ 
In line 389  /* BEGIN ERROR CODES */ 
In line 390  /* The following lines are auto generated by the script mkerr.pl. Any changes 
In line 391   * made after this point may be overwritten when the script is next run. 
In line 392   */ 
In line 395  /* Error codes for the PKCS7 functions. */ 
In line 397  /* Function codes. */ 
In line 439  /* Reason codes. */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\pqueue.h  for analysis => 
In line 0  /* crypto/pqueue/pqueue.h */ 
In line 1  /*  
In line 2   * DTLS implementation written by Nagendra Modadugu 
In line 3   * (nagendra@cs.stanford.edu) for the OpenSSL project 2005.   
In line 4   */ 
In line 5  /* ==================================================================== 
In line 6   * Copyright (c) 1999-2005 The OpenSSL Project.  All rights reserved. 
In line 7   * 
In line 8   * Redistribution and use in source and binary forms, with or without 
In line 9   * modification, are permitted provided that the following conditions 
In line 10   * are met: 
In line 11   * 
In line 12   * 1. Redistributions of source code must retain the above copyright 
In line 13   *    notice, this list of conditions and the following disclaimer.  
In line 14   * 
In line 15   * 2. Redistributions in binary form must reproduce the above copyright 
In line 16   *    notice, this list of conditions and the following disclaimer in 
In line 17   *    the documentation and/or other materials provided with the 
In line 18   *    distribution. 
In line 19   * 
In line 20   * 3. All advertising materials mentioning features or use of this 
In line 21   *    software must display the following acknowledgment: 
In line 22   *    "This product includes software developed by the OpenSSL Project 
In line 23   *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)" 
In line 24   * 
In line 25   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 26   *    endorse or promote products derived from this software without 
In line 27   *    prior written permission. For written permission, please contact 
In line 28   *    openssl-core@OpenSSL.org. 
In line 29   * 
In line 30   * 5. Products derived from this software may not be called "OpenSSL" 
In line 31   *    nor may "OpenSSL" appear in their names without prior written 
In line 32   *    permission of the OpenSSL Project. 
In line 33   * 
In line 34   * 6. Redistributions of any form whatsoever must retain the following 
In line 35   *    acknowledgment: 
In line 36   *    "This product includes software developed by the OpenSSL Project 
In line 37   *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)" 
In line 38   * 
In line 39   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 40   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 41   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 42   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 43   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 44   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 45   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 46   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 48   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 49   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 50   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 51   * ==================================================================== 
In line 52   * 
In line 53   * This product includes cryptographic software written by Eric Young 
In line 54   * (eay@cryptsoft.com).  This product includes software written by Tim 
In line 55   * Hudson (tjh@cryptsoft.com). 
In line 56   * 
In line 57   */ 
In line 23   *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)" 
In line 37   *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)" 
In line 70  	unsigned char priority[8]; /* 64-bit value in big-endian encoding */ 
In line 93  #endif /* ! HEADER_PQUEUE_H */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\rand.h  for analysis => 
In line 0  /* crypto/rand/rand.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 77  /* Already defined in ossl_typ.h */ 
In line 78  /* typedef struct rand_meth_st RAND_METHOD; */ 
In line 126  /* BEGIN ERROR CODES */ 
In line 127  /* The following lines are auto generated by the script mkerr.pl. Any changes 
In line 128   * made after this point may be overwritten when the script is next run. 
In line 129   */ 
In line 132  /* Error codes for the RAND functions. */ 
In line 134  /* Function codes. */ 
In line 139  /* Reason codes. */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\rc2.h  for analysis => 
In line 0  /* crypto/rc2/rc2.h */ 
In line 1  /* Copyright (C) 1995-1997 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 61  #include <openssl/opensslconf.h> /* OPENSSL_NO_RC2, RC2_INT */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\rc4.h  for analysis => 
In line 0  /* crypto/rc4/rc4.h */ 
In line 1  /* Copyright (C) 1995-1997 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 61  #include <openssl/opensslconf.h> /* OPENSSL_NO_RC4, RC4_INT */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\ripemd.h  for analysis => 
In line 0  /* crypto/ripemd/ripemd.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\rsa.h  for analysis => 
In line 0  /* crypto/rsa/rsa.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 80  /* Declared already in ossl_typ.h */ 
In line 81  /* typedef struct rsa_st RSA; */ 
In line 82  /* typedef struct rsa_meth_st RSA_METHOD; */ 
In line 99  	int (*rsa_mod_exp)(BIGNUM *r0,const BIGNUM *I,RSA *rsa,BN_CTX *ctx); /* Can be null */ 
In line 102  			  BN_MONT_CTX *m_ctx); /* Can be null */ 
In line 103  	int (*init)(RSA *rsa);		/* called at new */ 
In line 104  	int (*finish)(RSA *rsa);	/* called at free */ 
In line 105  	int flags;			/* RSA_METHOD_FLAG_* things */ 
In line 106  	char *app_data;			/* may be needed! */ 
In line 107  /* New sign and verify functions: some libraries don't allow arbitrary data 
In line 108   * to be signed/verified: this allows them to be used. Note: for this to work 
In line 109   * the RSA_public_decrypt() and RSA_private_encrypt() should *NOT* be used 
In line 110   * RSA_sign(), RSA_verify() should be used instead. Note: for backwards 
In line 111   * compatibility this functionality is only enabled if the RSA_FLAG_SIGN_VER 
In line 112   * option is set in 'flags'. 
In line 113   */ 
In line 121  /* If this callback is NULL, the builtin software RSA key-gen will be used. This 
In line 122   * is for behavioural compatibility whilst the code gets rewired, but one day 
In line 123   * it would be nice to assume there are no such things as "builtin software" 
In line 124   * implementations. */ 
In line 130  	/* The first parameter is used to pickup errors where 
In line 131  	 * this is passed instead of aEVP_PKEY, it is set to 0 */ 
In line 135  	/* functional reference if 'meth' is ENGINE-provided */ 
In line 145  	/* be careful using this if the RSA structure is shared */ 
In line 150  	/* Used to cache montgomery values */ 
In line 155  	/* all BIGNUM values are actually in the following data, if it is not 
In line 156  	 * NULL */ 
In line 170  # define OPENSSL_RSA_MAX_PUBEXP_BITS	64 /* exponent limit enforced for "large" modulus only */ 
In line 176  #define RSA_METHOD_FLAG_NO_CHECK	0x0001 /* don't check pub/private match */ 
In line 182  /* This flag means the private key operations will be handled by rsa_mod_exp 
In line 183   * and that they do not depend on the private key components being present: 
In line 184   * for example a key stored in external hardware. Without this flag bn_mod_exp 
In line 185   * gets called when private key components are absent. 
In line 186   */ 
In line 189  /* This flag in the RSA_METHOD enables the new rsa_sign, rsa_verify functions. 
In line 190   */ 
In line 193  #define RSA_FLAG_NO_BLINDING		0x0080 /* new with 0.9.6j and 0.9.7b; the built-in 
In line 194                                                  * RSA implementation now uses blinding by 
In line 195                                                  * default (ignoring RSA_FLAG_BLINDING), 
In line 196                                                  * but other engines might not need it 
In line 197                                                  */ 
In line 198  #define RSA_FLAG_NO_CONSTTIME		0x0100 /* new with 0.9.8f; the built-in RSA 
In line 199  						* implementation now uses constant time 
In line 200  						* operations by default in private key operations, 
In line 201  						* e.g., constant time modular exponentiation,  
In line 202                                                  * modular inverse without leaking branches,  
In line 203                                                  * division without leaking branches. This  
In line 204                                                  * flag disables these constant time  
In line 205                                                  * operations and results in faster RSA  
In line 206                                                  * private key operations. 
In line 207                                                  */  
In line 209  #define RSA_FLAG_NO_EXP_CONSTTIME RSA_FLAG_NO_CONSTTIME /* deprecated name for the flag*/ 
In line 210                                                  /* new with 0.9.7h; the built-in RSA 
In line 211                                                  * implementation now uses constant time 
In line 212                                                  * modular exponentiation for secret exponents 
In line 213                                                  * by default. This flag causes the 
In line 214                                                  * faster variable sliding window method to 
In line 215                                                  * be used for all exponents. 
In line 216                                                  */ 
In line 272  /* EVP_PKEY_ only */ 
In line 284  /* Deprecated version */ 
In line 288  #endif /* !defined(OPENSSL_NO_DEPRECATED) */ 
In line 290  /* New version */ 
In line 294  	/* next 4 return -1 on error */ 
In line 304  /* "up" the RSA object's reference count */ 
In line 314  /* This function needs the memory locking malloc callbacks to be installed */ 
In line 317  /* these are the actual SSLeay RSA functions */ 
In line 359  /* The following 2 functions sign and verify a X509_SIG ASN1 object 
In line 360   * inside PKCS#1 padded RSA encryption */ 
In line 366  /* The following 2 function sign and verify a ASN1_OCTET_STRING 
In line 367   * object inside PKCS#1 padded RSA encryption */ 
In line 431  /* If this flag is set the RSA method is FIPS compliant and can be used 
In line 432   * in FIPS mode. This is set in the validated module method. If an 
In line 433   * application sets this flag in its own methods it is its responsibility 
In line 434   * to ensure the result is compliant. 
In line 435   */ 
In line 439  /* If this flag is set the operations normally disabled in FIPS mode are 
In line 440   * permitted it is then the applications responsibility to ensure that the 
In line 441   * usage is compliant. 
In line 442   */ 
In line 445  /* Application has decided PRNG is good enough to generate a key: don't 
In line 446   * check. 
In line 447   */ 
In line 450  /* BEGIN ERROR CODES */ 
In line 451  /* The following lines are auto generated by the script mkerr.pl. Any changes 
In line 452   * made after this point may be overwritten when the script is next run. 
In line 453   */ 
In line 456  /* Error codes for the RSA functions. */ 
In line 458  /* Function codes. */ 
In line 517  /* Reason codes. */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\safestack.h  for analysis => 
In line 0  /* ==================================================================== 
In line 1   * Copyright (c) 1999 The OpenSSL Project.  All rights reserved. 
In line 2   * 
In line 3   * Redistribution and use in source and binary forms, with or without 
In line 4   * modification, are permitted provided that the following conditions 
In line 5   * are met: 
In line 6   * 
In line 7   * 1. Redistributions of source code must retain the above copyright 
In line 8   *    notice, this list of conditions and the following disclaimer.  
In line 9   * 
In line 10   * 2. Redistributions in binary form must reproduce the above copyright 
In line 11   *    notice, this list of conditions and the following disclaimer in 
In line 12   *    the documentation and/or other materials provided with the 
In line 13   *    distribution. 
In line 14   * 
In line 15   * 3. All advertising materials mentioning features or use of this 
In line 16   *    software must display the following acknowledgment: 
In line 17   *    "This product includes software developed by the OpenSSL Project 
In line 18   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 19   * 
In line 20   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 21   *    endorse or promote products derived from this software without 
In line 22   *    prior written permission. For written permission, please contact 
In line 23   *    openssl-core@openssl.org. 
In line 24   * 
In line 25   * 5. Products derived from this software may not be called "OpenSSL" 
In line 26   *    nor may "OpenSSL" appear in their names without prior written 
In line 27   *    permission of the OpenSSL Project. 
In line 28   * 
In line 29   * 6. Redistributions of any form whatsoever must retain the following 
In line 30   *    acknowledgment: 
In line 31   *    "This product includes software developed by the OpenSSL Project 
In line 32   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 33   * 
In line 34   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 35   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 36   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 37   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 38   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 39   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 40   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 41   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 42   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 43   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 44   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 45   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 46   * ==================================================================== 
In line 47   * 
In line 48   * This product includes cryptographic software written by Eric Young 
In line 49   * (eay@cryptsoft.com).  This product includes software written by Tim 
In line 50   * Hudson (tjh@cryptsoft.com). 
In line 51   * 
In line 52   */ 
In line 18   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 32   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 64  /* In C++ we get problems because an explicit cast is needed from (void *) 
In line 65   * we use CHECKED_STACK_OF to ensure the correct type is passed in the macros 
In line 66   * below.  
In line 67   */ 
In line 96  #define IMPLEMENT_STACK_OF(type) /* nada (obsolete in new safestack approach)*/ 
In line 99  /* Strings are special: normally an lhash entry will point to a single 
In line 100   * (somewhat) mutable object. In the case of strings: 
In line 101   * 
In line 102   * a) Instead of a single char, there is an array of chars, NUL-terminated. 
In line 103   * b) The string may have be immutable. 
In line 104   * 
In line 105   * So, they need their own declarations. Especially important for 
In line 106   * type-checking tools, such as Deputy. 
In line 107   * 
In line 108  o * In practice, however, it appears to be hard to have a const 
In line 109   * string. For now, I'm settling for dealing with the fact it is a 
In line 110   * string at all. 
In line 111   */ 
In line 116  /* Confusingly, LHASH_OF(STRING) deals with char ** throughout, but 
In line 117   * STACK_OF(STRING) is really more like STACK_OF(char), only, as 
In line 118   * mentioned above, instead of a single char each entry is a 
In line 119   * NUL-terminated array of chars. So, we have to implement STRING 
In line 120   * specially for STACK_OF. This is dealt with in the autogenerated 
In line 121   * macros below. 
In line 122   */ 
In line 126  /* Similarly, we sometimes use a block of characters, NOT 
In line 127   * nul-terminated. These should also be distinguished from "normal" 
In line 128   * stacks. */ 
In line 133  /* SKM_sk_... stack macros are internal to safestack.h: 
In line 134   * never use them directly, use sk_<type>_... instead */ 
In line 206  /* This block of defines is updated by util/mkstack.pl, please do not touch! */ 
In line 2660  /* End of util/mkstack.pl block, you may now edit :-) */ 
In line 2662  #endif /* !defined HEADER_SAFESTACK_H */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\seed.h  for analysis => 
In line 0  /* 
In line 1   * Copyright (c) 2007 KISA(Korea Information Security Agency). All rights reserved.   
In line 2   * 
In line 3   * Redistribution and use in source and binary forms, with or without 
In line 4   * modification, are permitted provided that the following conditions 
In line 5   * are met: 
In line 6   * 1. Redistributions of source code must retain the above copyright 
In line 7   *    notice, this list of conditions and the following disclaimer. 
In line 8   * 2. Neither the name of author nor the names of its contributors may 
In line 9   *    be used to endorse or promote products derived from this software 
In line 10   *    without specific prior written permission. 
In line 11   * 
In line 12   * THIS SOFTWARE IS PROVIDED BY AUTHOR AND CONTRIBUTORS ``AS IS'' AND 
In line 13   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 14   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 15   * ARE DISCLAIMED.  IN NO EVENT SHALL AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 16   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 17   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 18   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 19   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 20   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 21   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 22   * SUCH DAMAGE. 
In line 23   * 
In line 24   */ 
In line 25  /* ==================================================================== 
In line 26   * Copyright (c) 1998-2007 The OpenSSL Project.  All rights reserved. 
In line 27   * 
In line 28   * Redistribution and use in source and binary forms, with or without 
In line 29   * modification, are permitted provided that the following conditions 
In line 30   * are met: 
In line 31   * 
In line 32   * 1. Redistributions of source code must retain the above copyright 
In line 33   *    notice, this list of conditions and the following disclaimer.  
In line 34   * 
In line 35   * 2. Redistributions in binary form must reproduce the above copyright 
In line 36   *    notice, this list of conditions and the following disclaimer in 
In line 37   *    the documentation and/or other materials provided with the 
In line 38   *    distribution. 
In line 39   * 
In line 40   * 3. All advertising materials mentioning features or use of this 
In line 41   *    software must display the following acknowledgment: 
In line 42   *    "This product includes software developed by the OpenSSL Project 
In line 43   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 44   * 
In line 45   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 46   *    endorse or promote products derived from this software without 
In line 47   *    prior written permission. For written permission, please contact 
In line 48   *    openssl-core@openssl.org. 
In line 49   * 
In line 50   * 5. Products derived from this software may not be called "OpenSSL" 
In line 51   *    nor may "OpenSSL" appear in their names without prior written 
In line 52   *    permission of the OpenSSL Project. 
In line 53   * 
In line 54   * 6. Redistributions of any form whatsoever must retain the following 
In line 55   *    acknowledgment: 
In line 56   *    "This product includes software developed by the OpenSSL Project 
In line 57   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 58   * 
In line 59   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 60   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 61   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 62   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 63   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 64   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 65   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 66   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 67   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 68   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 69   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 70   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 71   * ==================================================================== 
In line 72   * 
In line 73   * This product includes cryptographic software written by Eric Young 
In line 74   * (eay@cryptsoft.com).  This product includes software written by Tim 
In line 75   * Hudson (tjh@cryptsoft.com). 
In line 76   * 
In line 77   */ 
In line 43   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 57   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 91  #ifdef AES_LONG /* look whether we need 'long' to get 32 bits */ 
In line 138  #endif /* HEADER_SEED_H */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\sha.h  for analysis => 
In line 0  /* crypto/sha/sha.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 76  /* 
In line 77   * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
In line 78   * ! SHA_LONG has to be at least 32 bits wide. If it's wider, then ! 
In line 79   * ! SHA_LONG_LOG2 has to be defined along.                        ! 
In line 80   * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! 
In line 81   */ 
In line 93  #define SHA_CBLOCK	(SHA_LBLOCK*4)	/* SHA treats input data as a 
In line 94  					 * contiguous array of 32 bit 
In line 95  					 * wide big-endian values. */ 
In line 128  #define SHA256_CBLOCK	(SHA_LBLOCK*4)	/* SHA-256 treats input data as a 
In line 129  					 * contiguous array of 32 bit 
In line 130  					 * wide big-endian values. */ 
In line 162  /* 
In line 163   * Unlike 32-bit digest algorithms, SHA-512 *relies* on SHA_LONG64 
In line 164   * being exactly 64-bit wide. See Implementation Notes in sha512.c 
In line 165   * for further details. 
In line 166   */ 
In line 167  #define SHA512_CBLOCK	(SHA_LBLOCK*8)	/* SHA-512 treats input data as a 
In line 168  					 * contiguous array of 64 bit 
In line 169  					 * wide big-endian values. */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\srp.h  for analysis => 
In line 0  /* crypto/srp/srp.h */ 
In line 1  /* Written by Christophe Renou (christophe.renou@edelweb.fr) with  
In line 2   * the precious help of Peter Sylvester (peter.sylvester@edelweb.fr)  
In line 3   * for the EdelKey project and contributed to the OpenSSL project 2004. 
In line 4   */ 
In line 5  /* ==================================================================== 
In line 6   * Copyright (c) 2004 The OpenSSL Project.  All rights reserved. 
In line 7   * 
In line 8   * Redistribution and use in source and binary forms, with or without 
In line 9   * modification, are permitted provided that the following conditions 
In line 10   * are met: 
In line 11   * 
In line 12   * 1. Redistributions of source code must retain the above copyright 
In line 13   *    notice, this list of conditions and the following disclaimer.  
In line 14   * 
In line 15   * 2. Redistributions in binary form must reproduce the above copyright 
In line 16   *    notice, this list of conditions and the following disclaimer in 
In line 17   *    the documentation and/or other materials provided with the 
In line 18   *    distribution. 
In line 19   * 
In line 20   * 3. All advertising materials mentioning features or use of this 
In line 21   *    software must display the following acknowledgment: 
In line 22   *    "This product includes software developed by the OpenSSL Project 
In line 23   *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)" 
In line 24   * 
In line 25   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 26   *    endorse or promote products derived from this software without 
In line 27   *    prior written permission. For written permission, please contact 
In line 28   *    licensing@OpenSSL.org. 
In line 29   * 
In line 30   * 5. Products derived from this software may not be called "OpenSSL" 
In line 31   *    nor may "OpenSSL" appear in their names without prior written 
In line 32   *    permission of the OpenSSL Project. 
In line 33   * 
In line 34   * 6. Redistributions of any form whatsoever must retain the following 
In line 35   *    acknowledgment: 
In line 36   *    "This product includes software developed by the OpenSSL Project 
In line 37   *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)" 
In line 38   * 
In line 39   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 40   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 41   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 42   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 43   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 44   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 45   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 46   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 48   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 49   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 50   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 51   * ==================================================================== 
In line 52   * 
In line 53   * This product includes cryptographic software written by Eric Young 
In line 54   * (eay@cryptsoft.com).  This product includes software written by Tim 
In line 55   * Hudson (tjh@cryptsoft.com). 
In line 56   * 
In line 57   */ 
In line 23   *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)" 
In line 37   *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)" 
In line 99  /* to simulate a user */ 
In line 106  /*Structure interne pour retenir les couples N et g*/ 
In line 146  /* see srp.c */ 
In line 150  /* server side .... */ 
In line 158  /* client side .... */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\srtp.h  for analysis => 
In line 0  /* ssl/tls1.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 57  /* ==================================================================== 
In line 58   * Copyright (c) 1998-2006 The OpenSSL Project.  All rights reserved. 
In line 59   * 
In line 60   * Redistribution and use in source and binary forms, with or without 
In line 61   * modification, are permitted provided that the following conditions 
In line 62   * are met: 
In line 63   * 
In line 64   * 1. Redistributions of source code must retain the above copyright 
In line 65   *    notice, this list of conditions and the following disclaimer.  
In line 66   * 
In line 67   * 2. Redistributions in binary form must reproduce the above copyright 
In line 68   *    notice, this list of conditions and the following disclaimer in 
In line 69   *    the documentation and/or other materials provided with the 
In line 70   *    distribution. 
In line 71   * 
In line 72   * 3. All advertising materials mentioning features or use of this 
In line 73   *    software must display the following acknowledgment: 
In line 74   *    "This product includes software developed by the OpenSSL Project 
In line 75   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 76   * 
In line 77   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 78   *    endorse or promote products derived from this software without 
In line 79   *    prior written permission. For written permission, please contact 
In line 80   *    openssl-core@openssl.org. 
In line 81   * 
In line 82   * 5. Products derived from this software may not be called "OpenSSL" 
In line 83   *    nor may "OpenSSL" appear in their names without prior written 
In line 84   *    permission of the OpenSSL Project. 
In line 85   * 
In line 86   * 6. Redistributions of any form whatsoever must retain the following 
In line 87   *    acknowledgment: 
In line 88   *    "This product includes software developed by the OpenSSL Project 
In line 89   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 90   * 
In line 91   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 92   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 93   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 94   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 95   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 96   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 97   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 98   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 99   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 100   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 101   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 102   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 103   * ==================================================================== 
In line 104   * 
In line 105   * This product includes cryptographic software written by Eric Young 
In line 106   * (eay@cryptsoft.com).  This product includes software written by Tim 
In line 107   * Hudson (tjh@cryptsoft.com). 
In line 108   * 
In line 109   */ 
In line 75   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 89   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 110  /* 
In line 111    DTLS code by Eric Rescorla <ekr@rtfm.com> 
In line 112   
In line 113    Copyright (C) 2006, Network Resonance, Inc. 
In line 114    Copyright (C) 2011, RTFM, Inc. 
In line 115  */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\ssl.h  for analysis => 
In line 0  /* ssl/ssl.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 57  /* ==================================================================== 
In line 58   * Copyright (c) 1998-2007 The OpenSSL Project.  All rights reserved. 
In line 59   * 
In line 60   * Redistribution and use in source and binary forms, with or without 
In line 61   * modification, are permitted provided that the following conditions 
In line 62   * are met: 
In line 63   * 
In line 64   * 1. Redistributions of source code must retain the above copyright 
In line 65   *    notice, this list of conditions and the following disclaimer.  
In line 66   * 
In line 67   * 2. Redistributions in binary form must reproduce the above copyright 
In line 68   *    notice, this list of conditions and the following disclaimer in 
In line 69   *    the documentation and/or other materials provided with the 
In line 70   *    distribution. 
In line 71   * 
In line 72   * 3. All advertising materials mentioning features or use of this 
In line 73   *    software must display the following acknowledgment: 
In line 74   *    "This product includes software developed by the OpenSSL Project 
In line 75   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 76   * 
In line 77   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 78   *    endorse or promote products derived from this software without 
In line 79   *    prior written permission. For written permission, please contact 
In line 80   *    openssl-core@openssl.org. 
In line 81   * 
In line 82   * 5. Products derived from this software may not be called "OpenSSL" 
In line 83   *    nor may "OpenSSL" appear in their names without prior written 
In line 84   *    permission of the OpenSSL Project. 
In line 85   * 
In line 86   * 6. Redistributions of any form whatsoever must retain the following 
In line 87   *    acknowledgment: 
In line 88   *    "This product includes software developed by the OpenSSL Project 
In line 89   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 90   * 
In line 91   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 92   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 93   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 94   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 95   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 96   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 97   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 98   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 99   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 100   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 101   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 102   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 103   * ==================================================================== 
In line 104   * 
In line 105   * This product includes cryptographic software written by Eric Young 
In line 106   * (eay@cryptsoft.com).  This product includes software written by Tim 
In line 107   * Hudson (tjh@cryptsoft.com). 
In line 108   * 
In line 109   */ 
In line 75   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 89   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 110  /* ==================================================================== 
In line 111   * Copyright 2002 Sun Microsystems, Inc. ALL RIGHTS RESERVED. 
In line 112   * ECC cipher suite support in OpenSSL originally developed by  
In line 113   * SUN MICROSYSTEMS, INC., and contributed to the OpenSSL project. 
In line 114   */ 
In line 115  /* ==================================================================== 
In line 116   * Copyright 2005 Nokia. All rights reserved. 
In line 117   * 
In line 118   * The portions of the attached software ("Contribution") is developed by 
In line 119   * Nokia Corporation and is licensed pursuant to the OpenSSL open source 
In line 120   * license. 
In line 121   * 
In line 122   * The Contribution, originally written by Mika Kousa and Pasi Eronen of 
In line 123   * Nokia Corporation, consists of the "PSK" (Pre-Shared Key) ciphersuites 
In line 124   * support (see RFC 4279) to OpenSSL. 
In line 125   * 
In line 126   * No patent licenses or other rights except those expressly stated in 
In line 127   * the OpenSSL open source license shall be deemed granted or received 
In line 128   * expressly, by implication, estoppel, or otherwise. 
In line 129   * 
In line 130   * No assurances are provided by Nokia that the Contribution does not 
In line 131   * infringe the patent or other intellectual property rights of any third 
In line 132   * party or that the license provides you with all the necessary rights 
In line 133   * to make use of the Contribution. 
In line 134   * 
In line 135   * THE SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND. IN 
In line 136   * ADDITION TO THE DISCLAIMERS INCLUDED IN THE LICENSE, NOKIA 
In line 137   * SPECIFICALLY DISCLAIMS ANY LIABILITY FOR CLAIMS BROUGHT BY YOU OR ANY 
In line 138   * OTHER ENTITY BASED ON INFRINGEMENT OF INTELLECTUAL PROPERTY RIGHTS OR 
In line 139   * OTHERWISE. 
In line 140   */ 
In line 172  /* SSLeay version number for ASN.1 encoding of the session information */ 
In line 173  /* Version 0 - initial version 
In line 174   * Version 1 - added the optional peer certificate 
In line 175   */ 
In line 178  /* text strings for the ciphers */ 
In line 190  /*    VRS Additional Kerberos5 entries 
In line 191   */ 
In line 224  /* These are used to specify which ciphers to use and not to use */ 
In line 233  #define SSL_TXT_kFZA		"kFZA" /* unused! */ 
In line 234  #define	SSL_TXT_aFZA		"aFZA" /* unused! */ 
In line 235  #define SSL_TXT_eFZA		"eFZA" /* unused! */ 
In line 236  #define SSL_TXT_FZA		"FZA"  /* unused! */ 
In line 243  #define SSL_TXT_kDHr		"kDHr" /* no such ciphersuites supported! */ 
In line 244  #define SSL_TXT_kDHd		"kDHd" /* no such ciphersuites supported! */ 
In line 245  #define SSL_TXT_kDH 		"kDH"  /* no such ciphersuites supported! */ 
In line 258  #define	SSL_TXT_aDH		"aDH" /* no such ciphersuites supported! */ 
In line 269  #define SSL_TXT_EDH		"EDH" /* same as "kEDH:-ADH" */ 
In line 273  #define SSL_TXT_EECDH		"EECDH" /* same as "kEECDH:-AECDH" */ 
In line 296  #define SSL_TXT_SHA		"SHA" /* same as "SHA1" */ 
In line 313  /* 
In line 314   * COMPLEMENTOF* definitions. These identifiers are used to (de-select) 
In line 315   * ciphers normally not being used. 
In line 316   * Example: "RC4" will activate all ciphers using RC4 including ciphers 
In line 317   * without authentication, which would normally disabled by DEFAULT (due 
In line 318   * the "!ADH" being part of default). Therefore "RC4:!COMPLEMENTOFDEFAULT" 
In line 319   * will make sure that it is also disabled in the specific selection. 
In line 320   * COMPLEMENTOF* identifiers are portable between version, as adjustments 
In line 321   * to the default cipher setup will also be included here. 
In line 322   * 
In line 323   * COMPLEMENTOFDEFAULT does not experience the same special treatment that 
In line 324   * DEFAULT gets, as only selection is being done and no sorting as needed 
In line 325   * for DEFAULT. 
In line 326   */ 
In line 330  /* The following cipher list is used by default. 
In line 331   * It also is substituted when an application-defined cipher list string 
In line 332   * starts with 'DEFAULT'. */ 
In line 334  /* As of OpenSSL 1.0.0, ssl_create_cipher_list() in ssl/ssl_ciph.c always 
In line 335   * starts with a reasonable order, and all we have to do for DEFAULT is 
In line 336   * throwing out anonymous and unencrypted ciphersuites! 
In line 337   * (The latter are not actually enabled by ALL, but "ALL:RSA" would enable 
In line 338   * some of them.) 
In line 339   */ 
In line 341  /* Used in SSL_set_shutdown()/SSL_get_shutdown(); */ 
In line 360  /* This is needed to stop compilers complaining about the 
In line 361   * 'struct ssl_st *' function parameters used to prototype callbacks 
In line 362   * in SSL_CTX. */ 
In line 371  /* SRTP protection profiles for use with the use_srtp extension (RFC 5764)*/ 
In line 386  /* used to hold info on the particular ciphers used */ 
In line 390  	const char *name;		/* text name */ 
In line 391  	unsigned long id;		/* id, 4 bytes, first is version */ 
In line 393  	/* changed in 0.9.9: these four used to be portions of a single value 'algorithms' */ 
In line 394  	unsigned long algorithm_mkey;	/* key exchange algorithm */ 
In line 395  	unsigned long algorithm_auth;	/* server authentication */ 
In line 396  	unsigned long algorithm_enc;	/* symmetric encryption */ 
In line 397  	unsigned long algorithm_mac;	/* symmetric authentication */ 
In line 398  	unsigned long algorithm_ssl;	/* (major) protocol version */ 
In line 400  	unsigned long algo_strength;	/* strength and export flags */ 
In line 401  	unsigned long algorithm2;	/* Extra flags */ 
In line 402  	int strength_bits;		/* Number of bits really used */ 
In line 403  	int alg_bits;			/* Number of bits for algorithm */ 
In line 407  /* Used to hold functions for SSLv2 or SSLv3/TLSv1 functions */ 
In line 437  	struct ssl3_enc_method *ssl3_enc; /* Extra SSLv3/TLS stuff */ 
In line 443  /* Lets make this into an ASN.1 type structure as follows 
In line 444   * SSL_SESSION_ID ::= SEQUENCE { 
In line 445   *	version 		INTEGER,	-- structure version number 
In line 446   *	SSLversion 		INTEGER,	-- SSL version number 
In line 447   *	Cipher 			OCTET STRING,	-- the 3 byte cipher ID 
In line 448   *	Session_ID 		OCTET STRING,	-- the Session ID 
In line 449   *	Master_key 		OCTET STRING,	-- the master key 
In line 450   *	KRB5_principal		OCTET STRING	-- optional Kerberos principal 
In line 451   *	Key_Arg [ 0 ] IMPLICIT	OCTET STRING,	-- the optional Key argument 
In line 452   *	Time [ 1 ] EXPLICIT	INTEGER,	-- optional Start Time 
In line 453   *	Timeout [ 2 ] EXPLICIT	INTEGER,	-- optional Timeout ins seconds 
In line 454   *	Peer [ 3 ] EXPLICIT	X509,		-- optional Peer Certificate 
In line 455   *	Session_ID_context [ 4 ] EXPLICIT OCTET STRING,   -- the Session ID context 
In line 456   *	Verify_result [ 5 ] EXPLICIT INTEGER,   -- X509_V_... code for `Peer' 
In line 457   *	HostName [ 6 ] EXPLICIT OCTET STRING,   -- optional HostName from servername TLS extension  
In line 458   *	PSK_identity_hint [ 7 ] EXPLICIT OCTET STRING, -- optional PSK identity hint 
In line 459   *	PSK_identity [ 8 ] EXPLICIT OCTET STRING,  -- optional PSK identity 
In line 460   *	Ticket_lifetime_hint [9] EXPLICIT INTEGER, -- server's lifetime hint for session ticket 
In line 461   *	Ticket [10]             EXPLICIT OCTET STRING, -- session ticket (clients only) 
In line 462   *	Compression_meth [11]   EXPLICIT OCTET STRING, -- optional compression method 
In line 463   *	SRP_username [ 12 ] EXPLICIT OCTET STRING -- optional SRP username 
In line 464   *	} 
In line 465   * Look in ssl/ssl_asn1.c for more details 
In line 466   * I'm using EXPLICIT tags so I can read the damn things using asn1parse :-). 
In line 467   */ 
In line 470  	int ssl_version;	/* what ssl version session info is 
In line 471  				 * being kept in here? */ 
In line 473  	/* only really used in SSLv2 */ 
In line 478  	/* session_id - valid? */ 
In line 481  	/* this is used to determine whether the session is being reused in 
In line 482  	 * the appropriate context. It is up to the application to set this, 
In line 483  	 * via SSL_new */ 
In line 490  #endif /* OPENSSL_NO_KRB5 */ 
In line 497  	/* The cert is the certificate used to establish this connection */ 
In line 498  	struct sess_cert_st /* SESS_CERT */ *sess_cert; 
In line 500  	/* This is the cert for the other end. 
In line 501  	 * On clients, it will be the same as sess_cert->peer_key->x509 
In line 502  	 * (the latter is not enough as sess_cert is not retained 
In line 503  	 * in the external representation of sessions, see ssl_asn1.c). */ 
In line 505  	/* when app_verify_callback accepts a session where the peer's certificate 
In line 506  	 * is not ok, we must remember the error for session reuse: */ 
In line 507  	long verify_result; /* only for servers */ 
In line 513  	unsigned int compress_meth;	/* Need to lookup the method */ 
In line 516  	unsigned long cipher_id;	/* when ASN.1 loaded, this 
In line 517  					 * needs to be used to load 
In line 518  					 * the 'cipher' structure */ 
In line 520  	STACK_OF(SSL_CIPHER) *ciphers; /* shared ciphers? */ 
In line 522  	CRYPTO_EX_DATA ex_data; /* application specific data */ 
In line 524  	/* These are used to make removal of session-ids more 
In line 525  	 * efficient and to implement a maximum cache size. */ 
In line 531  	unsigned char *tlsext_ecpointformatlist; /* peer's list */ 
In line 533  	unsigned char *tlsext_ellipticcurvelist; /* peer's list */ 
In line 534  #endif /* OPENSSL_NO_EC */ 
In line 535  	/* RFC4507 info */ 
In line 536  	unsigned char *tlsext_tick;	/* Session ticket */ 
In line 537  	size_t	tlsext_ticklen;		/* Session ticket length */	 
In line 538  	long tlsext_tick_lifetime_hint;	/* Session lifetime hint in seconds */ 
In line 549  /* Allow initial connection to servers that don't support RI */ 
In line 554  #define SSL_OP_MSIE_SSLV2_RSA_PADDING			0x00000040L /* no effect since 0.9.7h and 0.9.8b */ 
In line 560  /* Disable SSL 3.0/TLS 1.0 CBC vulnerability workaround that was added 
In line 561   * in OpenSSL 0.9.6d.  Usually (depending on the application protocol) 
In line 562   * the workaround is not needed.  Unfortunately some broken SSL/TLS 
In line 563   * implementations cannot handle it at all, which is why we include 
In line 564   * it in SSL_OP_ALL. */ 
In line 565  #define SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS              0x00000800L /* added in 0.9.6e */ 
In line 567  /* SSL_OP_ALL: various bug workarounds that should be rather harmless. 
In line 568   *             This used to be 0x000FFFFFL before 0.9.7. */ 
In line 571  /* DTLS options */ 
In line 573  /* Turn on Cookie Exchange (on relevant for servers) */ 
In line 575  /* Don't use RFC4507 ticket extension */ 
In line 577  /* Use Cisco's "speshul" version of DTLS_BAD_VER (as client)  */ 
In line 580  /* As server, disallow session resumption on renegotiation */ 
In line 582  /* Don't use compression even if supported */ 
In line 584  /* Permit unsafe legacy renegotiation */ 
In line 586  /* If set, always create a new key when using tmp_ecdh parameters */ 
In line 588  /* If set, always create a new key when using tmp_dh parameters */ 
In line 590  /* Set to always use the tmp_rsa key when doing RSA operations, 
In line 591   * even when this violates protocol specs */ 
In line 593  /* Set on servers to choose the cipher according to the server's 
In line 594   * preferences */ 
In line 596  /* If set, a server will allow a client to issue a SSLv3.0 version number 
In line 597   * as latest version supported in the premaster secret, even when TLSv1.0 
In line 598   * (version 3.1) was announced in the client hello. Normally this is 
In line 599   * forbidden to prevent version rollback attacks. */ 
In line 607  /* These next two were never actually used for anything since SSLeay 
In line 608   * zap so we have some more flags. 
In line 609   */ 
In line 610  /* The next flag deliberately changes the ciphertest, this is a check 
In line 611   * for the PKCS#1 attack */ 
In line 617  /* Make server add server-hello extension from early version of 
In line 618   * cryptopro draft, when GOST ciphersuite is negotiated.  
In line 619   * Required for interoperability with CryptoPro CSP 3.x  
In line 620   */ 
In line 623  /* Allow SSL_write(..., n) to return r with 0 < r < n (i.e. report success 
In line 624   * when just a single record has been written): */ 
In line 626  /* Make it possible to retry SSL_write() with changed buffer location 
In line 627   * (buffer contents must stay the same!); this is not the default to avoid 
In line 628   * the misconception that non-blocking SSL_write() behaves like 
In line 629   * non-blocking write(): */ 
In line 631  /* Never bother the application with retries if the transport 
In line 632   * is blocking: */ 
In line 634  /* Don't attempt to automatically build certificate chain */ 
In line 636  /* Save RAM by releasing read and write buffers when they're empty. (SSL3 and 
In line 637   * TLS only.)  "Released" buffers are put onto a free-list in the context 
In line 638   * or just freed (depending on the context's setting for freelist_max_len). */ 
In line 641  /* Note: SSL[_CTX]_set_{options,mode} use |= op on the previous value, 
In line 642   * they cannot be used to clear bits. */ 
In line 691  	/* param for all the callbacks */ 
In line 693  	/* set client Hello login callback */ 
In line 695  	/* set SRP N/g param callback for verification */ 
In line 697  	/* set SRP client passwd callback */ 
In line 711  /* see tls_srp.c */ 
In line 724  #define SSL_MAX_CERT_LIST_DEFAULT 1024*30 /* 30k max cert list :-) */ 
In line 726  #define SSL_MAX_CERT_LIST_DEFAULT 1024*100 /* 100k max cert list :-) */ 
In line 731  /* This callback type is used inside SSL_CTX, SSL, and in the functions that set 
In line 732   * them. It is used to override the generation of SSL/TLS session IDs in a 
In line 733   * server. Return value should be zero on an error, non-zero to proceed. Also, 
In line 734   * callbacks should themselves check if the id they generate is unique otherwise 
In line 735   * the SSL handshake will fail with an error - callbacks can do this using the 
In line 736   * 'ssl' value they're passed by; 
In line 737   *      SSL_has_matching_session_id(ssl, id, *id_len) 
In line 738   * The length value passed in is set at the maximum size the session ID can be. 
In line 739   * In SSLv2 this is 16 bytes, whereas SSLv3/TLSv1 it is 32 bytes. The callback 
In line 740   * can alter this length to be less if desired, but under SSLv2 session IDs are 
In line 741   * supposed to be fixed at 16 bytes so the id will be padded after the callback 
In line 742   * returns in this case. It is also an error for the callback to set the size to 
In line 743   * zero. */ 
In line 770  	/* same as above but sorted for lookup */ 
In line 773  	struct x509_store_st /* X509_STORE */ *cert_store; 
In line 775  	/* Most session-ids that will be cached, default is 
In line 776  	 * SSL_SESSION_CACHE_MAX_SIZE_DEFAULT. 0 is unlimited. */ 
In line 781  	/* This can have one of 2 values, ored together, 
In line 782  	 * SSL_SESS_CACHE_CLIENT, 
In line 783  	 * SSL_SESS_CACHE_SERVER, 
In line 784  	 * Default is SSL_SESSION_CACHE_SERVER, which means only 
In line 785  	 * SSL_accept which cache SSL_SESSIONS. */ 
In line 788  	/* If timeout is not 0, it is the default timeout value set 
In line 789  	 * when SSL_new() is called.  This has been put in to make 
In line 790  	 * life easier to set things up */ 
In line 793  	/* If this callback is not null, it will be called each 
In line 794  	 * time a session id is added to the cache.  If this function 
In line 795  	 * returns 1, it means that the callback will do a 
In line 796  	 * SSL_SESSION_free() when it has finished using it.  Otherwise, 
In line 797  	 * on 0, it means the callback has finished with it. 
In line 798  	 * If remove_session_cb is not null, it will be called when 
In line 799  	 * a session-id is removed from the cache.  After the call, 
In line 800  	 * OpenSSL will SSL_SESSION_free() it. */ 
In line 808  		int sess_connect;	/* SSL new conn - started */ 
In line 809  		int sess_connect_renegotiate;/* SSL reneg - requested */ 
In line 810  		int sess_connect_good;	/* SSL new conne/reneg - finished */ 
In line 811  		int sess_accept;	/* SSL new accept - started */ 
In line 812  		int sess_accept_renegotiate;/* SSL reneg - requested */ 
In line 813  		int sess_accept_good;	/* SSL accept/reneg - finished */ 
In line 814  		int sess_miss;		/* session lookup misses  */ 
In line 815  		int sess_timeout;	/* reuse attempt on timeouted session */ 
In line 816  		int sess_cache_full;	/* session removed due to full cache */ 
In line 817  		int sess_hit;		/* session reuse actually done */ 
In line 818  		int sess_cb_hit;	/* session-id that was not 
In line 819  					 * in the cache was 
In line 820  					 * passed back via the callback.  This 
In line 821  					 * indicates that the application is 
In line 822  					 * supplying session-id's from other 
In line 823  					 * processes - spooky :-) */ 
In line 828  	/* if defined, these override the X509_verify_cert() calls */ 
In line 831  	/* before OpenSSL 0.9.7, 'app_verify_arg' was ignored 
In line 832  	 * ('app_verify_callback' was called with just one argument) */ 
In line 834  	/* Default password callback. */ 
In line 837  	/* Default password callback user data. */ 
In line 840  	/* get client cert callback */ 
In line 843      /* cookie generate callback */ 
In line 847      /* verify cookie callback */ 
In line 853  	const EVP_MD *rsa_md5;/* For SSLv2 - name is 'ssl2-md5' */ 
In line 854  	const EVP_MD *md5;	/* For SSLv3/TLSv1 'ssl3-md5' */ 
In line 855  	const EVP_MD *sha1;   /* For SSLv3/TLSv1 'ssl3->sha1' */ 
In line 858  	STACK_OF(SSL_COMP) *comp_methods; /* stack of SSL_COMP, SSLv3/TLSv1 */ 
In line 861  	/* Default values used when no per-SSL value is defined follow */ 
In line 863  	void (*info_callback)(const SSL *ssl,int type,int val); /* used if SSL's info_callback is NULL */ 
In line 865  	/* what we put in client cert requests */ 
In line 869  	/* Default values to use in SSL structures follow (these are copied by SSL_new) */ 
In line 875  	struct cert_st /* CERT */ *cert; 
In line 878  	/* callback that allows applications to peek at protocol messages */ 
In line 885  	int (*default_verify_callback)(int ok,X509_STORE_CTX *ctx); /* called 'verify_callback' in the SSL */ 
In line 887  	/* Default generate session ID callback. */ 
In line 893  	int purpose;		/* Purpose setting */ 
In line 894  	int trust;		/* Trust setting */ 
In line 899  	/* Maximum amount of data to send in one fragment. 
In line 900  	 * actual record size can be more than this due to 
In line 901  	 * padding and MAC overheads. 
In line 902  	 */ 
In line 906  	/* Engine to pass requests for client certs to 
In line 907  	 */ 
In line 912  	/* TLS extensions servername callback */ 
In line 915  	/* RFC 4507 session ticket keys */ 
In line 919  	/* Callback to support customisation of ticket key setting */ 
In line 925  	/* certificate status request info */ 
In line 926  	/* Callback for status request */ 
In line 929  	/* draft-rescorla-tls-opaque-prf-input-00.txt information */ 
In line 950  	SRP_CTX srp_ctx; /* ctx for SRP authentication */ 
In line 955  	/* Next protocol negotiation information */ 
In line 956  	/* (for experimental NPN extension). */ 
In line 958  	/* For a server, this contains a callback function by which the set of 
In line 959  	 * advertised protocols can be provided. */ 
In line 963  	/* For a client, this contains a callback function that selects the 
In line 964  	 * next protocol from the list provided by the server. */ 
In line 972          /* SRTP profiles we are willing to do from RFC 5764 */ 
In line 984  /* enough comments already ... see SSL_CTX_set_session_cache_mode(3) */ 
In line 1059  /* the maximum length of the buffer given to callbacks containing the 
In line 1060   * resulting identity/psk */ 
In line 1088  /* These will only be used when doing non-blocking IO */ 
In line 1101  	/* protocol version 
In line 1102  	 * (one of SSL2_VERSION, SSL3_VERSION, TLS1_VERSION, DTLS1_VERSION) 
In line 1103  	 */ 
In line 1105  	int type; /* SSL_ST_CONNECT or SSL_ST_ACCEPT */ 
In line 1107  	const SSL_METHOD *method; /* SSLv3 */ 
In line 1109  	/* There are 2 BIO's even though they are normally both the 
In line 1110  	 * same.  This is so data can be read and written to different 
In line 1111  	 * handlers */ 
In line 1114  	BIO *rbio; /* used by SSL_read */ 
In line 1115  	BIO *wbio; /* used by SSL_write */ 
In line 1116  	BIO *bbio; /* used during session-id reuse to concatenate 
In line 1117  		    * messages */ 
In line 1119  	char *rbio; /* used by SSL_read */ 
In line 1120  	char *wbio; /* used by SSL_write */ 
In line 1123  	/* This holds a variable that indicates what we were doing 
In line 1124  	 * when a 0 or -1 is returned.  This is needed for 
In line 1125  	 * non-blocking IO so we know what request needs re-doing when 
In line 1126  	 * in SSL_accept or SSL_connect */ 
In line 1129  	/* true when we are actually in SSL_accept() or SSL_connect() */ 
In line 1133  	/* Imagine that here's a boolean member "init" that is 
In line 1134  	 * switched as soon as SSL_set_{accept/connect}_state 
In line 1135  	 * is called for the first time, so that "state" and 
In line 1136  	 * "handshake_func" are properly initialized.  But as 
In line 1137  	 * handshake_func is == 0 until then, we use this 
In line 1138  	 * test instead of an "init" member. 
In line 1139  	 */ 
In line 1141  	int server;	/* are we the server side? - mostly used by SSL_clear*/ 
In line 1143  	int new_session;/* Generate a new session or reuse an old one. 
In line 1144  	                 * NB: For servers, the 'new' session may actually be a previously 
In line 1145  	                 * cached session or even the previous session unless 
In line 1146  	                 * SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION is set */ 
In line 1147  	int quiet_shutdown;/* don't send shutdown packets */ 
In line 1148  	int shutdown;	/* we have shut things down, 0x01 sent, 0x02 
In line 1149  			 * for received */ 
In line 1150  	int state;	/* where we are */ 
In line 1151  	int rstate;	/* where we are when reading */ 
In line 1153  	BUF_MEM *init_buf;	/* buffer used during init */ 
In line 1154  	void *init_msg;   	/* pointer to handshake message body, set by ssl3_get_message() */ 
In line 1155  	int init_num;		/* amount read/written */ 
In line 1156  	int init_off;		/* amount read/written */ 
In line 1158  	/* used internally to point at a raw packet */ 
In line 1162  	struct ssl2_state_st *s2; /* SSLv2 variables */ 
In line 1163  	struct ssl3_state_st *s3; /* SSLv3 variables */ 
In line 1164  	struct dtls1_state_st *d1; /* DTLSv1 variables */ 
In line 1166  	int read_ahead;		/* Read as many input bytes as possible 
In line 1167  	               	 	 * (for non-blocking reads) */ 
In line 1169  	/* callback that allows applications to peek at protocol messages */ 
In line 1173  	int hit;		/* reusing a previous session */ 
In line 1178  	int purpose;		/* Purpose setting */ 
In line 1179  	int trust;		/* Trust setting */ 
In line 1182  	/* crypto */ 
In line 1186  	/* These are the ones being used, the ones in SSL_SESSION are 
In line 1187  	 * the ones to be 'copied' into these ones */ 
In line 1189  	EVP_CIPHER_CTX *enc_read_ctx;		/* cryptographic state */ 
In line 1190  	EVP_MD_CTX *read_hash;		/* used for mac generation */ 
In line 1192  	COMP_CTX *expand;			/* uncompress */ 
In line 1197  	EVP_CIPHER_CTX *enc_write_ctx;		/* cryptographic state */ 
In line 1198  	EVP_MD_CTX *write_hash;		/* used for mac generation */ 
In line 1200  	COMP_CTX *compress;			/* compression */ 
In line 1205  	/* session info */ 
In line 1207  	/* client cert? */ 
In line 1208  	/* This is used to hold the server certificate used */ 
In line 1209  	struct cert_st /* CERT */ *cert; 
In line 1211  	/* the session_id_context is used to ensure sessions are only reused 
In line 1212  	 * in the appropriate context */ 
In line 1216  	/* This can also be in the session once a session is established */ 
In line 1219  	/* Default generate session ID callback. */ 
In line 1222  	/* Used in SSL2 and SSL3 */ 
In line 1223  	int verify_mode;	/* 0 don't care about verify failure. 
In line 1224  				 * 1 fail if verify fails */ 
In line 1225  	int (*verify_callback)(int ok,X509_STORE_CTX *ctx); /* fail if callback returns 0 */ 
In line 1227  	void (*info_callback)(const SSL *ssl,int type,int val); /* optional informational callback */ 
In line 1229  	int error;		/* error bytes to be written */ 
In line 1230  	int error_code;		/* actual code */ 
In line 1233  	KSSL_CTX *kssl_ctx;     /* Kerberos 5 context */ 
In line 1234  #endif	/* OPENSSL_NO_KRB5 */ 
In line 1245  	/* set this flag to 1 and a sleep(1) is put into all SSL_read() 
In line 1246  	 * and SSL_write() calls, good for nbio debuging :-) */ 
In line 1249  	/* extra application data */ 
In line 1253  	/* for server side, keep the list of CA_dn we can use */ 
In line 1257  	unsigned long options; /* protocol behaviour */ 
In line 1258  	unsigned long mode; /* API behaviour */ 
In line 1261  	int client_version;	/* what was passed, used for 
In line 1262  				 * SSLv3/TLS rollback check */ 
In line 1265  	/* TLS extension debug callback */ 
In line 1271  	int servername_done;   /* no further mod of servername  
In line 1272  	                          0 : call the servername extension callback. 
In line 1273  	                          1 : prepare 2, allow last ack just after in server callback. 
In line 1274  	                          2 : don't call servername callback, no ack in server hello 
In line 1275  	                       */ 
In line 1276  	/* certificate status request info */ 
In line 1277  	/* Status type or -1 if no status type */ 
In line 1279  	/* Expect OCSP CertificateStatus message */ 
In line 1281  	/* OCSP status request only */ 
In line 1284  	/* OCSP response received or to be sent */ 
In line 1288  	/* RFC4507 session ticket expected to be received or sent */ 
In line 1292  	unsigned char *tlsext_ecpointformatlist; /* our list */ 
In line 1294  	unsigned char *tlsext_ellipticcurvelist; /* our list */ 
In line 1295  #endif /* OPENSSL_NO_EC */ 
In line 1297  	/* draft-rescorla-tls-opaque-prf-input-00.txt information to be used for handshakes */ 
In line 1301  	/* TLS Session Ticket extension override */ 
In line 1304  	/* TLS Session Ticket extension callback */ 
In line 1308  	/* TLS pre-shared secret session resumption */ 
In line 1312  	SSL_CTX * initial_ctx; /* initial ctx, used to store sessions */ 
In line 1315  	/* Next protocol negotiation. For the client, this is the protocol that 
In line 1316  	 * we sent in NextProtocol and is set when handling ServerHello 
In line 1317  	 * extensions. 
In line 1318  	 * 
In line 1319  	 * For a server, this is the client's selected_protocol from 
In line 1320  	 * NextProtocol and is set when handling the NextProtocol message, 
In line 1321  	 * before the Finished message. */ 
In line 1328  	STACK_OF(SRTP_PROTECTION_PROFILE) *srtp_profiles;  /* What we'll do */ 
In line 1329  	SRTP_PROTECTION_PROFILE *srtp_profile;            /* What's been chosen */ 
In line 1331  	unsigned int tlsext_heartbeat;  /* Is use of the Heartbeat extension negotiated? 
In line 1332  	                                   0: disabled 
In line 1333  	                                   1: enabled 
In line 1334  	                                   2: enabled, but not allowed to send Requests 
In line 1335  	                                 */ 
In line 1336  	unsigned int tlsext_hb_pending; /* Indicates if a HeartbeatRequest is in flight */ 
In line 1337  	unsigned int tlsext_hb_seq;     /* HeartbeatRequest sequence number */ 
In line 1340  #endif /* OPENSSL_NO_TLSEXT */ 
In line 1342  	int renegotiate;/* 1 if we are renegotiating. 
In line 1343  	                 * 2 if we are a server and are inside a handshake 
In line 1344  	                 * (i.e. not just sending a HelloRequest) */ 
In line 1347  	SRP_CTX srp_ctx; /* ctx for SRP authentication */ 
In line 1359  #include <openssl/tls1.h> /* This is mostly sslv3 with a few tweaks */ 
In line 1360  #include <openssl/dtls1.h> /* Datagram TLS */ 
In line 1362  #include <openssl/srtp.h>  /* Support for the use_srtp extension */ 
In line 1368  /* compatibility */ 
In line 1376  /* The following are the possible values for ssl->state are are 
In line 1377   * used to indicate where we are up to in the SSL connection establishment. 
In line 1378   * The macros that follow are about the only things you should need to use 
In line 1379   * and even then, only when using non-blocking IO. 
In line 1380   * It can also be useful to work out where you were when the connection 
In line 1381   * failed */ 
In line 1395  #define SSL_CB_ALERT			0x4000 /* used in callback */ 
In line 1405  /* Is the SSL_connection established? */ 
In line 1413  /* The following 2 states are kept in ssl->rstate when reads fail, 
In line 1414   * you should not need these */ 
In line 1419  /* Obtain latest Finished message 
In line 1420   *   -- that we sent (SSL_get_finished) 
In line 1421   *   -- that we expected from peer (SSL_get_peer_finished). 
In line 1422   * Returns length (0 == no Finished so far), copies up to 'count' bytes. */ 
In line 1426  /* use either SSL_VERIFY_NONE or SSL_VERIFY_PEER, the last 2 options 
In line 1427   * are 'ored' with SSL_VERIFY_PEER if they are desired */ 
In line 1436  /* this is for backward compatibility */ 
In line 1437  #if 0 /* NEW_SSLEAY */ 
In line 1444  /* More backward compatibility */ 
In line 1463  #define SSL_AD_REASON_OFFSET		1000 /* offset to get SSL_R_... value from SSL_AD_... */ 
In line 1465  /* These alert types are for SSLv3 and TLSv1 */ 
In line 1467  #define SSL_AD_UNEXPECTED_MESSAGE	SSL3_AD_UNEXPECTED_MESSAGE /* fatal */ 
In line 1468  #define SSL_AD_BAD_RECORD_MAC		SSL3_AD_BAD_RECORD_MAC     /* fatal */ 
In line 1471  #define SSL_AD_DECOMPRESSION_FAILURE	SSL3_AD_DECOMPRESSION_FAILURE/* fatal */ 
In line 1472  #define SSL_AD_HANDSHAKE_FAILURE	SSL3_AD_HANDSHAKE_FAILURE/* fatal */ 
In line 1473  #define SSL_AD_NO_CERTIFICATE		SSL3_AD_NO_CERTIFICATE /* Not for TLS */ 
In line 1479  #define SSL_AD_ILLEGAL_PARAMETER	SSL3_AD_ILLEGAL_PARAMETER   /* fatal */ 
In line 1480  #define SSL_AD_UNKNOWN_CA		TLS1_AD_UNKNOWN_CA	/* fatal */ 
In line 1481  #define SSL_AD_ACCESS_DENIED		TLS1_AD_ACCESS_DENIED	/* fatal */ 
In line 1482  #define SSL_AD_DECODE_ERROR		TLS1_AD_DECODE_ERROR	/* fatal */ 
In line 1484  #define SSL_AD_EXPORT_RESTRICTION	TLS1_AD_EXPORT_RESTRICTION/* fatal */ 
In line 1485  #define SSL_AD_PROTOCOL_VERSION		TLS1_AD_PROTOCOL_VERSION /* fatal */ 
In line 1486  #define SSL_AD_INSUFFICIENT_SECURITY	TLS1_AD_INSUFFICIENT_SECURITY/* fatal */ 
In line 1487  #define SSL_AD_INTERNAL_ERROR		TLS1_AD_INTERNAL_ERROR	/* fatal */ 
In line 1495  #define SSL_AD_UNKNOWN_PSK_IDENTITY     TLS1_AD_UNKNOWN_PSK_IDENTITY /* fatal */ 
In line 1502  #define SSL_ERROR_SYSCALL		5 /* look at error stack/return value/errno */ 
In line 1526  /* only applies to datagram connections */ 
In line 1528  /* Stats */ 
In line 1556  /* see tls1.h for macros based on these */ 
In line 1716  int	SSL_CTX_use_certificate_chain_file(SSL_CTX *ctx, const char *file); /* PEM type */ 
In line 1721  #ifndef OPENSSL_SYS_MACINTOSH_CLASSIC /* XXXXX: Better scheme needed! [was: #ifndef MAC_OS_pre_X] */ 
In line 1847  /* This sets the 'default' SSL version that SSL_new() will create */ 
In line 1851  const SSL_METHOD *SSLv2_method(void);		/* SSLv2 */ 
In line 1852  const SSL_METHOD *SSLv2_server_method(void);	/* SSLv2 */ 
In line 1853  const SSL_METHOD *SSLv2_client_method(void);	/* SSLv2 */ 
In line 1856  const SSL_METHOD *SSLv3_method(void);		/* SSLv3 */ 
In line 1857  const SSL_METHOD *SSLv3_server_method(void);	/* SSLv3 */ 
In line 1858  const SSL_METHOD *SSLv3_client_method(void);	/* SSLv3 */ 
In line 1860  const SSL_METHOD *SSLv23_method(void);	/* SSLv3 but can rollback to v2 */ 
In line 1861  const SSL_METHOD *SSLv23_server_method(void);	/* SSLv3 but can rollback to v2 */ 
In line 1862  const SSL_METHOD *SSLv23_client_method(void);	/* SSLv3 but can rollback to v2 */ 
In line 1864  const SSL_METHOD *TLSv1_method(void);		/* TLSv1.0 */ 
In line 1865  const SSL_METHOD *TLSv1_server_method(void);	/* TLSv1.0 */ 
In line 1866  const SSL_METHOD *TLSv1_client_method(void);	/* TLSv1.0 */ 
In line 1868  const SSL_METHOD *TLSv1_1_method(void);		/* TLSv1.1 */ 
In line 1869  const SSL_METHOD *TLSv1_1_server_method(void);	/* TLSv1.1 */ 
In line 1870  const SSL_METHOD *TLSv1_1_client_method(void);	/* TLSv1.1 */ 
In line 1872  const SSL_METHOD *TLSv1_2_method(void);		/* TLSv1.2 */ 
In line 1873  const SSL_METHOD *TLSv1_2_server_method(void);	/* TLSv1.2 */ 
In line 1874  const SSL_METHOD *TLSv1_2_client_method(void);	/* TLSv1.2 */ 
In line 1877  const SSL_METHOD *DTLSv1_method(void);		/* DTLSv1.0 */ 
In line 1878  const SSL_METHOD *DTLSv1_server_method(void);	/* DTLSv1.0 */ 
In line 1879  const SSL_METHOD *DTLSv1_client_method(void);	/* DTLSv1.0 */ 
In line 1916  /* EVP_PKEY */ struct evp_pkey_st *SSL_get_privatekey(SSL *ssl); 
In line 1928  #define SSL_get0_session SSL_get_session /* just peek at pointer */ 
In line 1930  SSL_SESSION *SSL_get1_session(SSL *ssl); /* obtain a reference count */ 
In line 1988       /* NB: the keylength is only applicable when is_export is true */ 
In line 2029  /* TLS extensions functions */ 
In line 2035  /* Pre-shared secret session resumption functions */ 
In line 2041  /* BEGIN ERROR CODES */ 
In line 2042  /* The following lines are auto generated by the script mkerr.pl. Any changes 
In line 2043   * made after this point may be overwritten when the script is next run. 
In line 2044   */ 
In line 2047  /* Error codes for the SSL functions. */ 
In line 2049  /* Function codes. */ 
In line 2268  /* Reason codes. */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\ssl2.h  for analysis => 
In line 0  /* ssl/ssl2.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 65  /* Protocol Version Codes */ 
In line 69  /* #define SSL2_CLIENT_VERSION	0x0002 */ 
In line 70  /* #define SSL2_SERVER_VERSION	0x0002 */ 
In line 72  /* Protocol Message Codes */ 
In line 83  /* Error Message Codes */ 
In line 90  /* Cipher Kind Values */ 
In line 91  #define SSL2_CK_NULL_WITH_MD5			0x02000000 /* v3 */ 
In line 98  #define SSL2_CK_DES_64_CBC_WITH_SHA		0x02060140 /* v3 */ 
In line 100  #define SSL2_CK_DES_192_EDE3_CBC_WITH_SHA	0x020701c0 /* v3 */ 
In line 101  #define SSL2_CK_RC4_64_WITH_MD5			0x02080080 /* MS hack */ 
In line 103  #define SSL2_CK_DES_64_CFB64_WITH_MD5_1		0x02ff0800 /* SSLeay */ 
In line 104  #define SSL2_CK_NULL				0x02ff0810 /* SSLeay */ 
In line 121  /* Flags for the SSL_CIPHER.algorithm2 field */ 
In line 125  /* Certificate Type Codes */ 
In line 128  /* Authentication Type Code */ 
In line 133  /* Upper/Lower Bounds */ 
In line 138  #define SSL2_MAX_RECORD_LENGTH_2_BYTE_HEADER	32767u  /* 2^15-1 */ 
In line 140  #define SSL2_MAX_RECORD_LENGTH_3_BYTE_HEADER	16383 /* 2^14-1 */ 
In line 143  /*#define SSL2_CHALLENGE_LENGTH	32 */ 
In line 162  	int clear_text;		/* clear text */ 
In line 163  	int escape;		/* not used in SSLv2 */ 
In line 164  	int ssl2_rollback;	/* used if SSLv23 rolled back to SSLv2 */ 
In line 166  	/* non-blocking io info, used to make sure the same 
In line 167  	 * args were passwd */ 
In line 168  	unsigned int wnum;	/* number of bytes sent so far */ 
In line 172  	int wpend_off;	/* offset to data to write */ 
In line 173  	int wpend_len; 	/* number of bytes passwd to write */ 
In line 174  	int wpend_ret; 	/* number of bytes to return to caller */ 
In line 176  	/* buffer raw data */ 
In line 182  	unsigned char *write_ptr;/* used to point to the start due to 
In line 183  				  * 2/3 byte header. */ 
In line 186  	unsigned int rlength; /* passed to ssl2_enc */ 
In line 187  	int ract_data_length; /* Set when things are encrypted. */ 
In line 188  	unsigned int wlength; /* passed to ssl2_enc */ 
In line 189  	int wact_data_length; /* Set when things are decrypted. */ 
In line 197  		/* Stuff specifically to do with this SSL session */ 
In line 225  /* SSLv2 */ 
In line 226  /* client */ 
In line 245  /* server */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\ssl23.h  for analysis => 
In line 0  /* ssl/ssl23.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 65  /*client */ 
In line 66  /* write to server */ 
In line 69  /* read from server */ 
In line 73  /* server */ 
In line 74  /* read from client */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\ssl3.h  for analysis => 
In line 0  /* ssl/ssl3.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 57  /* ==================================================================== 
In line 58   * Copyright (c) 1998-2002 The OpenSSL Project.  All rights reserved. 
In line 59   * 
In line 60   * Redistribution and use in source and binary forms, with or without 
In line 61   * modification, are permitted provided that the following conditions 
In line 62   * are met: 
In line 63   * 
In line 64   * 1. Redistributions of source code must retain the above copyright 
In line 65   *    notice, this list of conditions and the following disclaimer.  
In line 66   * 
In line 67   * 2. Redistributions in binary form must reproduce the above copyright 
In line 68   *    notice, this list of conditions and the following disclaimer in 
In line 69   *    the documentation and/or other materials provided with the 
In line 70   *    distribution. 
In line 71   * 
In line 72   * 3. All advertising materials mentioning features or use of this 
In line 73   *    software must display the following acknowledgment: 
In line 74   *    "This product includes software developed by the OpenSSL Project 
In line 75   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 76   * 
In line 77   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 78   *    endorse or promote products derived from this software without 
In line 79   *    prior written permission. For written permission, please contact 
In line 80   *    openssl-core@openssl.org. 
In line 81   * 
In line 82   * 5. Products derived from this software may not be called "OpenSSL" 
In line 83   *    nor may "OpenSSL" appear in their names without prior written 
In line 84   *    permission of the OpenSSL Project. 
In line 85   * 
In line 86   * 6. Redistributions of any form whatsoever must retain the following 
In line 87   *    acknowledgment: 
In line 88   *    "This product includes software developed by the OpenSSL Project 
In line 89   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 90   * 
In line 91   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 92   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 93   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 94   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 95   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 96   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 97   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 98   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 99   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 100   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 101   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 102   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 103   * ==================================================================== 
In line 104   * 
In line 105   * This product includes cryptographic software written by Eric Young 
In line 106   * (eay@cryptsoft.com).  This product includes software written by Tim 
In line 107   * Hudson (tjh@cryptsoft.com). 
In line 108   * 
In line 109   */ 
In line 75   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 89   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 110  /* ==================================================================== 
In line 111   * Copyright 2002 Sun Microsystems, Inc. ALL RIGHTS RESERVED. 
In line 112   * ECC cipher suite support in OpenSSL originally developed by  
In line 113   * SUN MICROSYSTEMS, INC., and contributed to the OpenSSL project. 
In line 114   */ 
In line 130  /* Signalling cipher suite value: from draft-ietf-tls-renegotiation-03.txt */ 
In line 167  	#if 0 /* Because it clashes with KRB5, is never used any more, and is safe 
In line 168  		 to remove according to David Hopwood <david.hopwood@zetnet.co.uk> 
In line 169  		 of the ietf-tls list */ 
In line 174  /*    VRS Additional Kerberos5 entries 
In line 175   */ 
In line 254   /* Some will argue that this increases memory footprint, but it's 
In line 255    * not actually true. Point is that malloc has to return at least 
In line 256    * 64-bit aligned pointers, meaning that allocating 5 bytes wastes 
In line 257    * 3 bytes in either case. Suggested pre-gaping simply moves these 
In line 258    * wasted bytes from the end of allocated region to its front, 
In line 259    * but makes data payload aligned, which improves performance:-) */ 
In line 268  /* This is the maximum MAC (digest) size used by the SSL library. 
In line 269   * Currently maximum of 20 is used by SHA1, but we reserve for 
In line 270   * future extension for 512-bit hashes. 
In line 271   */ 
In line 275  /* Maximum block size used in all ciphersuites. Currently 16 for AES. 
In line 276   */ 
In line 282  /* Maximum plaintext length: defined by SSL/TLS standards */ 
In line 284  /* Maximum compression overhead: defined by SSL/TLS standards */ 
In line 287  /* The standards give a maximum encryption overhead of 1024 bytes. 
In line 288   * In practice the value is lower than this. The overhead is the maximum 
In line 289   * number of padding bytes (256) plus the mac size. 
In line 290   */ 
In line 293  /* OpenSSL currently only uses a padding length of at most one block so 
In line 294   * the send overhead is smaller. 
In line 295   */ 
In line 300  /* If compression isn't used don't include the compression overhead */ 
In line 330  #define SSL3_AD_UNEXPECTED_MESSAGE	10	/* fatal */ 
In line 331  #define SSL3_AD_BAD_RECORD_MAC		20	/* fatal */ 
In line 332  #define SSL3_AD_DECOMPRESSION_FAILURE	30	/* fatal */ 
In line 333  #define SSL3_AD_HANDSHAKE_FAILURE	40	/* fatal */ 
In line 340  #define SSL3_AD_ILLEGAL_PARAMETER	47	/* fatal */ 
In line 349  /*r */	int type;               /* type of record */ 
In line 350  /*rw*/	unsigned int length;    /* How many bytes available */ 
In line 351  /*r */	unsigned int off;       /* read/write offset into 'buf' */ 
In line 352  /*rw*/	unsigned char *data;    /* pointer to the record data */ 
In line 353  /*rw*/	unsigned char *input;   /* where the decode bytes are */ 
In line 354  /*r */	unsigned char *comp;    /* only used with decompression - malloc()ed */ 
In line 355  /*r */  unsigned long epoch;    /* epoch number, needed by DTLS1 */ 
In line 356  /*r */  unsigned char seq_num[8]; /* sequence number, needed by DTLS1 */ 
In line 361  	unsigned char *buf;     /* at least SSL3_RT_MAX_PACKET_SIZE bytes, 
In line 362  	                         * see ssl3_setup_buffers() */ 
In line 363  	size_t len;             /* buffer size */ 
In line 364  	int offset;             /* where to 'copy from' */ 
In line 365  	int left;               /* how many bytes left */ 
In line 377  /* SSL3_CT_NUMBER is used to size arrays and it must be large 
In line 378   * enough to contain all of the cert types defined either for 
In line 379   * SSLv3 and TLSv1. 
In line 380   */ 
In line 391  /* SSL3_FLAGS_SGC_RESTART_DONE is set when we 
In line 392   * restart a handshake because of MS SGC and so prevents us 
In line 393   * from restarting the handshake in a loop. It's reset on a 
In line 394   * renegotiation, so effectively limits the client to one restart 
In line 395   * per negotiation. This limits the possibility of a DDoS 
In line 396   * attack where the client handshakes in a loop using SGC to 
In line 397   * restart. Servers which permit renegotiation can still be 
In line 398   * effected, but we can't prevent that. 
In line 399   */ 
In line 419  	/* flags for countermeasure against known-IV weakness */ 
In line 423  	/* The value of 'extra' when the buffers were initialized */ 
In line 426  	SSL3_BUFFER rbuf;	/* read IO goes into here */ 
In line 427  	SSL3_BUFFER wbuf;	/* write IO goes into here */ 
In line 429  	SSL3_RECORD rrec;	/* each decoded record goes in here */ 
In line 430  	SSL3_RECORD wrec;	/* goes out from here */ 
In line 432  	/* storage for Alert/Handshake protocol data received but not 
In line 433  	 * yet processed by ssl3_read_bytes: */ 
In line 439  	/* partial write - check the numbers match */ 
In line 440  	unsigned int wnum;	/* number of bytes sent so far */ 
In line 441  	int wpend_tot;		/* number bytes written */ 
In line 443  	int wpend_ret;		/* number of bytes submitted */ 
In line 446  	/* used during startup, digest all incoming/outgoing packets */ 
In line 448  	/* When set of handshake digests is determined, buffer is hashed 
In line 449  	 * and freed and MD_CTX-es for all required digests are stored in 
In line 450  	 * this array */ 
In line 452  	/* this is set whenerver we see a change_cipher_spec message 
In line 453  	 * come in when we are not looking for one */ 
In line 458  	/* we allow one fatal and one warning alert to be outstanding, 
In line 459  	 * send close alert via the warning alert */ 
In line 463  	/* This flag is set when we should renegotiate ASAP, basically when 
In line 464  	 * there is no more data in the read or write buffers */ 
In line 471  	/* Opaque PRF input as used for the current handshake. 
In line 472  	 * These fields are used only if TLSEXT_TYPE_opaque_prf_input is defined 
In line 473  	 * (otherwise, they are merely present to improve binary compatibility) */ 
In line 480  		/* actually only needs to be 16+20 */ 
In line 483  		/* actually only need to be 16+20 for SSLv3 and 12 for TLS */ 
In line 492  		/* used to hold the new cipher we are going to use */ 
In line 499  		EC_KEY *ecdh; /* holds short lived ECDH key */ 
In line 502  		/* used when SSL_ST_FLUSH_DATA is entered */ 
In line 507  		/* used for certificate requests */ 
In line 530          /* Connection binding to prevent renegotiation attacks */ 
In line 535          int send_connection_binding; /* TODOEKR */ 
In line 538  	/* Set if we saw the Next Protocol Negotiation extension from our peer. */ 
In line 545  /* SSLv3 */ 
In line 546  /*client */ 
In line 547  /* extra state */ 
In line 553  /* write to server */ 
In line 556  /* read from server */ 
In line 569  /* write to server */ 
In line 584  /* read from server */ 
In line 594  /* server */ 
In line 595  /* extra state */ 
In line 601  /* read from client */ 
In line 602  /* Do not change the number values, they do matter */ 
In line 606  /* write to client */ 
In line 622  /* read from client */ 
In line 635  /* write to client */ 
In line 663  /* These are used when changing over to a new cipher */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\stack.h  for analysis => 
In line 0  /* crypto/stack/stack.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 73  	} _STACK;  /* Use STACK_OF(...) instead */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\symhacks.h  for analysis => 
In line 0  /* ==================================================================== 
In line 1   * Copyright (c) 1999 The OpenSSL Project.  All rights reserved. 
In line 2   * 
In line 3   * Redistribution and use in source and binary forms, with or without 
In line 4   * modification, are permitted provided that the following conditions 
In line 5   * are met: 
In line 6   * 
In line 7   * 1. Redistributions of source code must retain the above copyright 
In line 8   *    notice, this list of conditions and the following disclaimer.  
In line 9   * 
In line 10   * 2. Redistributions in binary form must reproduce the above copyright 
In line 11   *    notice, this list of conditions and the following disclaimer in 
In line 12   *    the documentation and/or other materials provided with the 
In line 13   *    distribution. 
In line 14   * 
In line 15   * 3. All advertising materials mentioning features or use of this 
In line 16   *    software must display the following acknowledgment: 
In line 17   *    "This product includes software developed by the OpenSSL Project 
In line 18   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 19   * 
In line 20   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 21   *    endorse or promote products derived from this software without 
In line 22   *    prior written permission. For written permission, please contact 
In line 23   *    openssl-core@openssl.org. 
In line 24   * 
In line 25   * 5. Products derived from this software may not be called "OpenSSL" 
In line 26   *    nor may "OpenSSL" appear in their names without prior written 
In line 27   *    permission of the OpenSSL Project. 
In line 28   * 
In line 29   * 6. Redistributions of any form whatsoever must retain the following 
In line 30   *    acknowledgment: 
In line 31   *    "This product includes software developed by the OpenSSL Project 
In line 32   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 33   * 
In line 34   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 35   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 36   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 37   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 38   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 39   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 40   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 41   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 42   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 43   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 44   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 45   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 46   * ==================================================================== 
In line 47   * 
In line 48   * This product includes cryptographic software written by Eric Young 
In line 49   * (eay@cryptsoft.com).  This product includes software written by Tim 
In line 50   * Hudson (tjh@cryptsoft.com). 
In line 51   * 
In line 52   */ 
In line 18   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 32   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 59  /* Hacks to solve the problem with linkers incapable of handling very long 
In line 60     symbol names.  In the case of VMS, the limit is 31 characters on VMS for 
In line 61     VAX. */ 
In line 62  /* Note that this affects util/libeay.num and util/ssleay.num...  you may 
In line 63     change those manually, but that's not recommended, as those files are 
In line 64     controlled centrally and updated on Unix, and the central definition 
In line 65     may disagree with yours, which in turn may come with shareable library 
In line 66     incompatibilities. */ 
In line 69  /* Hack a long name in crypto/ex_data.c */ 
In line 75  /* Hack a long name in crypto/asn1/a_mbstr.c */ 
In line 79  #if 0 /* No longer needed, since safestack macro magic does the job */ 
In line 80  /* Hack the names created with DECLARE_ASN1_SET_OF(PKCS7_SIGNER_INFO) */ 
In line 87  #if 0 /* No longer needed, since safestack macro magic does the job */ 
In line 88  /* Hack the names created with DECLARE_ASN1_SET_OF(PKCS7_RECIP_INFO) */ 
In line 95  #if 0 /* No longer needed, since safestack macro magic does the job */ 
In line 96  /* Hack the names created with DECLARE_ASN1_SET_OF(ACCESS_DESCRIPTION) */ 
In line 103  /* Hack the names created with DECLARE_PEM_rw(NETSCAPE_CERT_SEQUENCE) */ 
In line 115  /* Hack the names created with DECLARE_PEM_rw(PKCS8_PRIV_KEY_INFO) */ 
In line 127  /* Hack other PEM names */ 
In line 131  /* Hack some long X509 names */ 
In line 143  /* Hack some long CRYPTO names */ 
In line 161  /* Hack some long SSL names */ 
In line 207  /* Hack some long ENGINE names */ 
In line 230  /* Hack some long OCSP names */ 
In line 238  /* Hack some long DES names */ 
In line 244  /* Hack some long EVP names */ 
In line 252  /* Hack some long EC names */ 
In line 347  /* Hack som long STORE names */ 
In line 397  /* Hack some long TS names */ 
In line 405  /* Hack some long CMS names */ 
In line 419  /* Hack some long DTLS1 names */ 
In line 423  /* Hack some long SRP names */ 
In line 429  /* Hack some long UI names */ 
In line 435  #endif /* defined OPENSSL_SYS_VMS */ 
In line 438  /* Case insensitive linking causes problems.... */ 
In line 454  /* These functions do not seem to exist!  However, I'm paranoid... 
In line 455     Original command in x509v3.h: 
In line 456     These functions are being redefined in another directory, 
In line 457     and clash when the linker is case-insensitive, so let's 
In line 458     hide them a little, by giving them an extra 'o' at the 
In line 459     beginning of the name... */ 
In line 469  /* This one clashes with CMS_data_create */ 
In line 476  #endif /* ! defined HEADER_VMS_IDHACKS_H */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\tls1.h  for analysis => 
In line 0  /* ssl/tls1.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 57  /* ==================================================================== 
In line 58   * Copyright (c) 1998-2006 The OpenSSL Project.  All rights reserved. 
In line 59   * 
In line 60   * Redistribution and use in source and binary forms, with or without 
In line 61   * modification, are permitted provided that the following conditions 
In line 62   * are met: 
In line 63   * 
In line 64   * 1. Redistributions of source code must retain the above copyright 
In line 65   *    notice, this list of conditions and the following disclaimer.  
In line 66   * 
In line 67   * 2. Redistributions in binary form must reproduce the above copyright 
In line 68   *    notice, this list of conditions and the following disclaimer in 
In line 69   *    the documentation and/or other materials provided with the 
In line 70   *    distribution. 
In line 71   * 
In line 72   * 3. All advertising materials mentioning features or use of this 
In line 73   *    software must display the following acknowledgment: 
In line 74   *    "This product includes software developed by the OpenSSL Project 
In line 75   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 76   * 
In line 77   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 78   *    endorse or promote products derived from this software without 
In line 79   *    prior written permission. For written permission, please contact 
In line 80   *    openssl-core@openssl.org. 
In line 81   * 
In line 82   * 5. Products derived from this software may not be called "OpenSSL" 
In line 83   *    nor may "OpenSSL" appear in their names without prior written 
In line 84   *    permission of the OpenSSL Project. 
In line 85   * 
In line 86   * 6. Redistributions of any form whatsoever must retain the following 
In line 87   *    acknowledgment: 
In line 88   *    "This product includes software developed by the OpenSSL Project 
In line 89   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 90   * 
In line 91   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 92   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 93   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 94   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 95   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 96   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 97   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 98   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 99   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 100   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 101   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 102   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 103   * ==================================================================== 
In line 104   * 
In line 105   * This product includes cryptographic software written by Eric Young 
In line 106   * (eay@cryptsoft.com).  This product includes software written by Tim 
In line 107   * Hudson (tjh@cryptsoft.com). 
In line 108   * 
In line 109   */ 
In line 75   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 89   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 110  /* ==================================================================== 
In line 111   * Copyright 2002 Sun Microsystems, Inc. ALL RIGHTS RESERVED. 
In line 112   * 
In line 113   * Portions of the attached software ("Contribution") are developed by  
In line 114   * SUN MICROSYSTEMS, INC., and are contributed to the OpenSSL project. 
In line 115   * 
In line 116   * The Contribution is licensed pursuant to the OpenSSL open source 
In line 117   * license provided above. 
In line 118   * 
In line 119   * ECC cipher suite support in OpenSSL originally written by 
In line 120   * Vipul Gupta and Sumit Gupta of Sun Microsystems Laboratories. 
In line 121   * 
In line 122   */ 
In line 123  /* ==================================================================== 
In line 124   * Copyright 2005 Nokia. All rights reserved. 
In line 125   * 
In line 126   * The portions of the attached software ("Contribution") is developed by 
In line 127   * Nokia Corporation and is licensed pursuant to the OpenSSL open source 
In line 128   * license. 
In line 129   * 
In line 130   * The Contribution, originally written by Mika Kousa and Pasi Eronen of 
In line 131   * Nokia Corporation, consists of the "PSK" (Pre-Shared Key) ciphersuites 
In line 132   * support (see RFC 4279) to OpenSSL. 
In line 133   * 
In line 134   * No patent licenses or other rights except those expressly stated in 
In line 135   * the OpenSSL open source license shall be deemed granted or received 
In line 136   * expressly, by implication, estoppel, or otherwise. 
In line 137   * 
In line 138   * No assurances are provided by Nokia that the Contribution does not 
In line 139   * infringe the patent or other intellectual property rights of any third 
In line 140   * party or that the license provides you with all the necessary rights 
In line 141   * to make use of the Contribution. 
In line 142   * 
In line 143   * THE SOFTWARE IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND. IN 
In line 144   * ADDITION TO THE DISCLAIMERS INCLUDED IN THE LICENSE, NOKIA 
In line 145   * SPECIFICALLY DISCLAIMS ANY LIABILITY FOR CLAIMS BROUGHT BY YOU OR ANY 
In line 146   * OTHER ENTITY BASED ON INFRINGEMENT OF INTELLECTUAL PROPERTY RIGHTS OR 
In line 147   * OTHERWISE. 
In line 148   */ 
In line 181  #define TLS1_AD_UNKNOWN_CA		48	/* fatal */ 
In line 182  #define TLS1_AD_ACCESS_DENIED		49	/* fatal */ 
In line 183  #define TLS1_AD_DECODE_ERROR		50	/* fatal */ 
In line 185  #define TLS1_AD_EXPORT_RESTRICTION	60	/* fatal */ 
In line 186  #define TLS1_AD_PROTOCOL_VERSION	70	/* fatal */ 
In line 187  #define TLS1_AD_INSUFFICIENT_SECURITY	71	/* fatal */ 
In line 188  #define TLS1_AD_INTERNAL_ERROR		80	/* fatal */ 
In line 191  /* codes 110-114 are from RFC3546 */ 
In line 197  #define TLS1_AD_UNKNOWN_PSK_IDENTITY	115	/* fatal */ 
In line 199  /* ExtensionType values from RFC3546 / RFC4366 / RFC6066 */ 
In line 206  /* ExtensionType values from RFC4681 */ 
In line 209  /* ExtensionType values from RFC5878 */ 
In line 213  /* ExtensionType values from RFC6091 */ 
In line 216  /* ExtensionType values from RFC4492 */ 
In line 220  /* ExtensionType value from RFC5054 */ 
In line 223  /* ExtensionType values from RFC5246 */ 
In line 226  /* ExtensionType value from RFC5764 */ 
In line 229  /* ExtensionType value from RFC5620 */ 
In line 232  /* ExtensionType value from RFC4507 */ 
In line 235  /* ExtensionType value from draft-rescorla-tls-opaque-prf-input-00.txt */ 
In line 236  #if 0 /* will have to be provided externally for now , 
In line 237         * i.e. build with -DTLSEXT_TYPE_opaque_prf_input=38183 
In line 238         * using whatever extension number you'd like to try */ 
In line 242  /* Temporary extension type */ 
In line 246  /* This is not an IANA defined extension number */ 
In line 250  /* NameType value from RFC 3546 */ 
In line 252  /* status request value from RFC 3546 */ 
In line 255  /* ECPointFormat values from draft-ietf-tls-ecc-12 */ 
In line 262  /* Signature and hash algorithms from RFC 5246 */ 
In line 283  /* SSL_export_keying_material exports a value derived from the master secret, 
In line 284   * as specified in RFC 5705. It writes |olen| bytes to |out| given a label and 
In line 285   * optional context. (Since a zero length context is allowed, the |use_context| 
In line 286   * flag controls whether a context is included.) 
In line 287   * 
In line 288   * It returns 1 on success and zero otherwise. 
In line 289   */ 
In line 368  /* PSK ciphersuites from 4279 */ 
In line 374  /* Additional TLS ciphersuites from expired Internet Draft 
In line 375   * draft-ietf-tls-56-bit-ciphersuites-01.txt 
In line 376   * (available if TLS1_ALLOW_EXPERIMENTAL_CIPHERSUITES is defined, see 
In line 377   * s3_lib.c).  We actually treat them like SSL 3.0 ciphers, which we probably 
In line 378   * shouldn't.  Note that the first two are actually not in the IDs. */ 
In line 379  #define TLS1_CK_RSA_EXPORT1024_WITH_RC4_56_MD5		0x03000060 /* not in ID */ 
In line 380  #define TLS1_CK_RSA_EXPORT1024_WITH_RC2_CBC_56_MD5	0x03000061 /* not in ID */ 
In line 387  /* AES ciphersuites from RFC3268 */ 
In line 403  /* TLS v1.2 ciphersuites */ 
In line 411  /* Camellia ciphersuites from RFC4132 */ 
In line 419  /* TLS v1.2 ciphersuites */ 
In line 428  /* Camellia ciphersuites from RFC4132 */ 
In line 436  /* SEED ciphersuites from RFC4162 */ 
In line 444  /* TLS v1.2 GCM ciphersuites from RFC5288 */ 
In line 458  /* ECC ciphersuites from draft-ietf-tls-ecc-12.txt with changes soon to be in draft 13 */ 
In line 489  /* SRP ciphersuites from RFC 5054 */ 
In line 500  /* ECDH HMAC based ciphersuites from RFC5289 */ 
In line 511  /* ECDH GCM based ciphersuites from RFC5289 */ 
In line 521  /* XXX 
In line 522   * Inconsistency alert: 
In line 523   * The OpenSSL names of ciphers with ephemeral DH here include the string 
In line 524   * "DHE", while elsewhere it has always been "EDH". 
In line 525   * (The alias for the list of all such ciphers also is "EDH".) 
In line 526   * The specifications speak of "EDH"; maybe we should allow both forms 
In line 527   * for everything. */ 
In line 536  /* AES ciphersuites from RFC3268 */ 
In line 551  /* ECC ciphersuites from draft-ietf-tls-ecc-01.txt (Mar 15, 2001) */ 
In line 582  /* PSK ciphersuites from RFC 4279 */ 
In line 588  /* SRP ciphersuite from RFC 5054 */ 
In line 599  /* Camellia ciphersuites from RFC4132 */ 
In line 614  /* SEED ciphersuites from RFC4162 */ 
In line 622  /* TLS v1.2 ciphersuites */ 
In line 637  /* TLS v1.2 GCM ciphersuites from RFC5288 */ 
In line 651  /* ECDH HMAC based ciphersuites from RFC5289 */ 
In line 662  /* ECDH GCM based ciphersuites from RFC5289 */ 
In line 681  /* when correcting this number, correct also SSL3_CT_NUMBER in ssl3.h (see 
In line 682   * comment there) */ 
In line 707  #define TLS_MD_CLIENT_FINISH_CONST    "\x63\x6c\x69\x65\x6e\x74\x20\x66\x69\x6e\x69\x73\x68\x65\x64"  /*client finished*/ 
In line 709  #define TLS_MD_SERVER_FINISH_CONST    "\x73\x65\x72\x76\x65\x72\x20\x66\x69\x6e\x69\x73\x68\x65\x64"  /*server finished*/ 
In line 711  #define TLS_MD_SERVER_WRITE_KEY_CONST "\x73\x65\x72\x76\x65\x72\x20\x77\x72\x69\x74\x65\x20\x6b\x65\x79"  /*server write key*/ 
In line 713  #define TLS_MD_KEY_EXPANSION_CONST    "\x6b\x65\x79\x20\x65\x78\x70\x61\x6e\x73\x69\x6f\x6e"  /*key expansion*/ 
In line 715  #define TLS_MD_CLIENT_WRITE_KEY_CONST "\x63\x6c\x69\x65\x6e\x74\x20\x77\x72\x69\x74\x65\x20\x6b\x65\x79"  /*client write key*/ 
In line 717  #define TLS_MD_SERVER_WRITE_KEY_CONST "\x73\x65\x72\x76\x65\x72\x20\x77\x72\x69\x74\x65\x20\x6b\x65\x79"  /*server write key*/ 
In line 719  #define TLS_MD_IV_BLOCK_CONST         "\x49\x56\x20\x62\x6c\x6f\x63\x6b"  /*IV block*/ 
In line 721  #define TLS_MD_MASTER_SECRET_CONST    "\x6d\x61\x73\x74\x65\x72\x20\x73\x65\x63\x72\x65\x74"  /*master secret*/ 
In line 724  /* TLS Session Ticket extension struct */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\ts.h  for analysis => 
In line 0  /* crypto/ts/ts.h */ 
In line 1  /* Written by Zoltan Glozik (zglozik@opentsa.org) for the OpenSSL 
In line 2   * project 2002, 2003, 2004. 
In line 3   */ 
In line 4  /* ==================================================================== 
In line 5   * Copyright (c) 2006 The OpenSSL Project.  All rights reserved. 
In line 6   * 
In line 7   * Redistribution and use in source and binary forms, with or without 
In line 8   * modification, are permitted provided that the following conditions 
In line 9   * are met: 
In line 10   * 
In line 11   * 1. Redistributions of source code must retain the above copyright 
In line 12   *    notice, this list of conditions and the following disclaimer.  
In line 13   * 
In line 14   * 2. Redistributions in binary form must reproduce the above copyright 
In line 15   *    notice, this list of conditions and the following disclaimer in 
In line 16   *    the documentation and/or other materials provided with the 
In line 17   *    distribution. 
In line 18   * 
In line 19   * 3. All advertising materials mentioning features or use of this 
In line 20   *    software must display the following acknowledgment: 
In line 21   *    "This product includes software developed by the OpenSSL Project 
In line 22   *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)" 
In line 23   * 
In line 24   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 25   *    endorse or promote products derived from this software without 
In line 26   *    prior written permission. For written permission, please contact 
In line 27   *    licensing@OpenSSL.org. 
In line 28   * 
In line 29   * 5. Products derived from this software may not be called "OpenSSL" 
In line 30   *    nor may "OpenSSL" appear in their names without prior written 
In line 31   *    permission of the OpenSSL Project. 
In line 32   * 
In line 33   * 6. Redistributions of any form whatsoever must retain the following 
In line 34   *    acknowledgment: 
In line 35   *    "This product includes software developed by the OpenSSL Project 
In line 36   *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)" 
In line 37   * 
In line 38   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 39   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 40   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 41   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 42   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 43   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 44   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 45   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 46   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 47   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 48   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 49   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 50   * ==================================================================== 
In line 51   * 
In line 52   * This product includes cryptographic software written by Eric Young 
In line 53   * (eay@cryptsoft.com).  This product includes software written by Tim 
In line 54   * Hudson (tjh@cryptsoft.com). 
In line 55   * 
In line 56   */ 
In line 22   *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)" 
In line 36   *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)" 
In line 93  /* Under Win32 this is defined in wincrypt.h */ 
In line 100  /* 
In line 101  MessageImprint ::= SEQUENCE  { 
In line 102       hashAlgorithm                AlgorithmIdentifier, 
In line 103       hashedMessage                OCTET STRING  } 
In line 104  */ 
In line 112  /* 
In line 113  TimeStampReq ::= SEQUENCE  { 
In line 114     version                  INTEGER  { v1(1) }, 
In line 115     messageImprint           MessageImprint, 
In line 116       --a hash algorithm OID and the hash value of the data to be 
In line 117       --time-stamped 
In line 118     reqPolicy                TSAPolicyId                OPTIONAL, 
In line 119     nonce                    INTEGER                    OPTIONAL, 
In line 120     certReq                  BOOLEAN                    DEFAULT FALSE, 
In line 121     extensions               [0] IMPLICIT Extensions    OPTIONAL  } 
In line 122  */ 
In line 128  	ASN1_OBJECT *policy_id;		/* OPTIONAL */ 
In line 129  	ASN1_INTEGER *nonce;		/* OPTIONAL */ 
In line 130  	ASN1_BOOLEAN cert_req;		/* DEFAULT FALSE */ 
In line 131  	STACK_OF(X509_EXTENSION) *extensions;	/* [0] OPTIONAL */ 
In line 134  /* 
In line 135  Accuracy ::= SEQUENCE { 
In line 136                  seconds        INTEGER           OPTIONAL, 
In line 137                  millis     [0] INTEGER  (1..999) OPTIONAL, 
In line 138                  micros     [1] INTEGER  (1..999) OPTIONAL  } 
In line 139  */ 
In line 148  /* 
In line 149  TSTInfo ::= SEQUENCE  { 
In line 150      version                      INTEGER  { v1(1) }, 
In line 151      policy                       TSAPolicyId, 
In line 152      messageImprint               MessageImprint, 
In line 153        -- MUST have the same value as the similar field in 
In line 154        -- TimeStampReq 
In line 155      serialNumber                 INTEGER, 
In line 156       -- Time-Stamping users MUST be ready to accommodate integers 
In line 157       -- up to 160 bits. 
In line 158      genTime                      GeneralizedTime, 
In line 159      accuracy                     Accuracy                 OPTIONAL, 
In line 160      ordering                     BOOLEAN             DEFAULT FALSE, 
In line 161      nonce                        INTEGER                  OPTIONAL, 
In line 162        -- MUST be present if the similar field was present 
In line 163        -- in TimeStampReq.  In that case it MUST have the same value. 
In line 164      tsa                          [0] GeneralName          OPTIONAL, 
In line 165      extensions                   [1] IMPLICIT Extensions  OPTIONAL   } 
In line 166  */ 
In line 182  /* 
In line 183  PKIStatusInfo ::= SEQUENCE { 
In line 184      status        PKIStatus, 
In line 185      statusString  PKIFreeText     OPTIONAL, 
In line 186      failInfo      PKIFailureInfo  OPTIONAL  } 
In line 187   
In line 188  From RFC 1510 - section 3.1.1: 
In line 189  PKIFreeText ::= SEQUENCE SIZE (1..MAX) OF UTF8String 
In line 190  	-- text encoded as UTF-8 String (note:  each UTF8String SHOULD 
In line 191  	-- include an RFC 1766 language tag to indicate the language 
In line 192  	-- of the contained text) 
In line 193  */ 
In line 195  /* Possible values for status. See ts_resp_print.c && ts_resp_verify.c. */ 
In line 204  /* Possible values for failure_info. See ts_resp_print.c && ts_resp_verify.c */ 
In line 225  /* 
In line 226  TimeStampResp ::= SEQUENCE  { 
In line 227       status                  PKIStatusInfo, 
In line 228       timeStampToken          TimeStampToken     OPTIONAL } 
In line 229  */ 
In line 238  /* The structure below would belong to the ESS component. */ 
In line 240  /* 
In line 241  IssuerSerial ::= SEQUENCE { 
In line 242  	issuer                   GeneralNames, 
In line 243  	serialNumber             CertificateSerialNumber 
In line 244  	} 
In line 245  */ 
In line 253  /* 
In line 254  ESSCertID ::=  SEQUENCE { 
In line 255          certHash                 Hash, 
In line 256          issuerSerial             IssuerSerial OPTIONAL 
In line 257  } 
In line 258  */ 
In line 262  	ASN1_OCTET_STRING *hash;	/* Always SHA-1 digest. */ 
In line 269  /* 
In line 270  SigningCertificate ::=  SEQUENCE { 
In line 271         certs        SEQUENCE OF ESSCertID, 
In line 272         policies     SEQUENCE OF PolicyInformation OPTIONAL 
In line 273  } 
In line 274  */ 
In line 403  /* Function declarations for TS_REQ defined in ts/ts_req_print.c */ 
In line 407  /* Function declarations for TS_RESP defined in ts/ts_resp_utils.c */ 
In line 412  /* Caller loses ownership of PKCS7 and TS_TST_INFO objects. */ 
In line 464  /* Declarations related to response generation, defined in ts/ts_resp_sign.c. */ 
In line 466  /* Optional flags for response generation. */ 
In line 468  /* Don't include the TSA name in response. */ 
In line 471  /* Set ordering to true in response. */ 
In line 474  /* 
In line 475   * Include the signer certificate and the other specified certificates in 
In line 476   * the ESS signing certificate attribute beside the PKCS7 signed data. 
In line 477   * Only the signer certificates is included by default. 
In line 478   */ 
In line 481  /* Forward declaration. */ 
In line 484  /* This must return a unique number less than 160 bits long. */ 
In line 487  /* This must return the seconds and microseconds since Jan 1, 1970 in 
In line 488     the sec and usec variables allocated by the caller.  
In line 489     Return non-zero for success and zero for failure. */ 
In line 492  /* This must process the given extension. 
In line 493   * It can modify the TS_TST_INFO object of the context. 
In line 494   * Return values: !0 (processed), 0 (error, it must set the  
In line 495   * status info/failure info of the response). 
In line 496   */ 
In line 503  	STACK_OF(X509)	*certs;	/* Certs to include in signed data. */ 
In line 504  	STACK_OF(ASN1_OBJECT)	*policies;	/* Acceptable policies. */ 
In line 505  	ASN1_OBJECT	*default_policy; /* It may appear in policies, too. */ 
In line 506  	STACK_OF(EVP_MD)	*mds;	/* Acceptable message digests. */ 
In line 507  	ASN1_INTEGER	*seconds;	/* accuracy, 0 means not specified. */ 
In line 508  	ASN1_INTEGER	*millis;	/* accuracy, 0 means not specified. */ 
In line 509  	ASN1_INTEGER	*micros;	/* accuracy, 0 means not specified. */ 
In line 510  	unsigned	clock_precision_digits; /* fraction of seconds in 
In line 511  						   time stamp token. */ 
In line 512  	unsigned	flags;		/* Optional info, see values above. */ 
In line 514  	/* Callback functions. */ 
In line 516  	void *serial_cb_data;	/* User data for serial_cb. */ 
In line 519  	void *time_cb_data;	/* User data for time_cb. */ 
In line 522  	void *extension_cb_data;	/* User data for extension_cb. */ 
In line 524  	/* These members are used only while creating the response. */ 
In line 533  /* Creates a response context that can be used for generating responses. */ 
In line 537  /* This parameter must be set. */ 
In line 540  /* This parameter must be set. */ 
In line 543  /* This parameter must be set. */ 
In line 546  /* No additional certs are included in the response by default. */ 
In line 549  /* Adds a new acceptable policy, only the default policy  
In line 550     is accepted by default. */ 
In line 553  /* Adds a new acceptable message digest. Note that no message digests  
In line 554     are accepted by default. The md argument is shared with the caller. */ 
In line 557  /* Accuracy is not included by default. */ 
In line 561  /* Clock precision digits, i.e. the number of decimal digits:  
In line 562     '0' means sec, '3' msec, '6' usec, and so on. Default is 0. */  
In line 565  /* At most we accept usec precision. */	 
In line 568  /* No flags are set by default. */ 
In line 571  /* Default callback always returns a constant. */ 
In line 574  /* Default callback uses the gettimeofday() and gmtime() system calls. */ 
In line 577  /* Default callback rejects all extensions. The extension callback is called  
In line 578   * when the TS_TST_INFO object is already set up and not signed yet. */ 
In line 579  /* FIXME: extension handling is not tested yet. */ 
In line 583  /* The following methods can be used in the callbacks. */ 
In line 587  /* Sets the status info only if it is still TS_STATUS_GRANTED. */ 
In line 593  /* The get methods below can be used in the extension callback. */ 
In line 598  /*  
In line 599   * Creates the signed TS_TST_INFO and puts it in TS_RESP. 
In line 600   * In case of errors it sets the status info properly. 
In line 601   * Returns NULL only in case of memory allocation/fatal error. 
In line 602   */ 
In line 605  /* 
In line 606   * Declarations related to response verification, 
In line 607   * they are defined in ts/ts_resp_verify.c. 
In line 608   */ 
In line 613  /* Context structure for the generic verify method. */ 
In line 615  /* Verify the signer's certificate and the signature of the response. */ 
In line 617  /* Verify the version number of the response. */ 
In line 619  /* Verify if the policy supplied by the user matches the policy of the TSA. */ 
In line 621  /* Verify the message imprint provided by the user. This flag should not be 
In line 622     specified with TS_VFY_DATA. */ 
In line 624  /* Verify the message imprint computed by the verify method from the user 
In line 625     provided data and the MD algorithm of the response. This flag should not be 
In line 626     specified with TS_VFY_IMPRINT. */ 
In line 628  /* Verify the nonce value. */ 
In line 630  /* Verify if the TSA name field matches the signer certificate. */ 
In line 632  /* Verify if the TSA name field equals to the user provided name. */ 
In line 635  /* You can use the following convenience constants. */ 
In line 653  	/* Set this to the union of TS_VFY_... flags you want to carry out. */ 
In line 656  	/* Must be set only with TS_VFY_SIGNATURE. certs is optional. */ 
In line 660  	/* Must be set only with TS_VFY_POLICY. */ 
In line 663  	/* Must be set only with TS_VFY_IMPRINT. If md_alg is NULL,  
In line 664  	   the algorithm from the response is used. */ 
In line 669  	/* Must be set only with TS_VFY_DATA. */ 
In line 672  	/* Must be set only with TS_VFY_TSA_NAME. */ 
In line 675  	/* Must be set only with TS_VFY_TSA_NAME. */ 
In line 682  /* 
In line 683   * Declarations related to response verification context, 
In line 684   * they are defined in ts/ts_verify_ctx.c. 
In line 685   */ 
In line 687  /* Set all fields to zero. */ 
In line 693  /*  
In line 694   * If ctx is NULL, it allocates and returns a new object, otherwise 
In line 695   * it returns ctx. It initialises all the members as follows: 
In line 696   * flags = TS_VFY_ALL_IMPRINT & ~(TS_VFY_TSA_NAME | TS_VFY_SIGNATURE) 
In line 697   * certs = NULL 
In line 698   * store = NULL 
In line 699   * policy = policy from the request or NULL if absent (in this case 
In line 700   *	TS_VFY_POLICY is cleared from flags as well) 
In line 701   * md_alg = MD algorithm from request 
In line 702   * imprint, imprint_len = imprint from request 
In line 703   * data = NULL 
In line 704   * nonce, nonce_len = nonce from the request or NULL if absent (in this case 
In line 705   * 	TS_VFY_NONCE is cleared from flags as well) 
In line 706   * tsa_name = NULL 
In line 707   * Important: after calling this method TS_VFY_SIGNATURE should be added! 
In line 708   */ 
In line 711  /* Function declarations for TS_RESP defined in ts/ts_resp_print.c */ 
In line 717  /* Common utility functions defined in ts/ts_lib.c */ 
In line 725  /* Function declarations for handling configuration options, 
In line 726     defined in ts/ts_conf.c */ 
In line 755  /* -------------------------------------------------- */ 
In line 756  /* BEGIN ERROR CODES */ 
In line 757  /* The following lines are auto generated by the script mkerr.pl. Any changes 
In line 758   * made after this point may be overwritten when the script is next run. 
In line 759   */ 
In line 762  /* Error codes for the TS functions. */ 
In line 764  /* Function codes. */ 
In line 817  /* Reason codes. */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\txt_db.h  for analysis => 
In line 0  /* crypto/txt_db/txt_db.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\ui.h  for analysis => 
In line 0  /* crypto/ui/ui.h -*- mode:C; c-file-style: "eay" -*- */ 
In line 1  /* Written by Richard Levitte (richard@levitte.org) for the OpenSSL 
In line 2   * project 2001. 
In line 3   */ 
In line 4  /* ==================================================================== 
In line 5   * Copyright (c) 2001 The OpenSSL Project.  All rights reserved. 
In line 6   * 
In line 7   * Redistribution and use in source and binary forms, with or without 
In line 8   * modification, are permitted provided that the following conditions 
In line 9   * are met: 
In line 10   * 
In line 11   * 1. Redistributions of source code must retain the above copyright 
In line 12   *    notice, this list of conditions and the following disclaimer.  
In line 13   * 
In line 14   * 2. Redistributions in binary form must reproduce the above copyright 
In line 15   *    notice, this list of conditions and the following disclaimer in 
In line 16   *    the documentation and/or other materials provided with the 
In line 17   *    distribution. 
In line 18   * 
In line 19   * 3. All advertising materials mentioning features or use of this 
In line 20   *    software must display the following acknowledgment: 
In line 21   *    "This product includes software developed by the OpenSSL Project 
In line 22   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 23   * 
In line 24   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 25   *    endorse or promote products derived from this software without 
In line 26   *    prior written permission. For written permission, please contact 
In line 27   *    openssl-core@openssl.org. 
In line 28   * 
In line 29   * 5. Products derived from this software may not be called "OpenSSL" 
In line 30   *    nor may "OpenSSL" appear in their names without prior written 
In line 31   *    permission of the OpenSSL Project. 
In line 32   * 
In line 33   * 6. Redistributions of any form whatsoever must retain the following 
In line 34   *    acknowledgment: 
In line 35   *    "This product includes software developed by the OpenSSL Project 
In line 36   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 37   * 
In line 38   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 39   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 40   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 41   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 42   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 43   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 44   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 45   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 46   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 47   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 48   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 49   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 50   * ==================================================================== 
In line 51   * 
In line 52   * This product includes cryptographic software written by Eric Young 
In line 53   * (eay@cryptsoft.com).  This product includes software written by Tim 
In line 54   * Hudson (tjh@cryptsoft.com). 
In line 55   * 
In line 56   */ 
In line 22   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 36   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 71  /* Declared already in ossl_typ.h */ 
In line 72  /* typedef struct ui_st UI; */ 
In line 73  /* typedef struct ui_method_st UI_METHOD; */ 
In line 76  /* All the following functions return -1 or NULL on error and in some cases 
In line 77     (UI_process()) -2 if interrupted or in some other way cancelled. 
In line 78     When everything is fine, they return 0, a positive value or a non-NULL 
In line 79     pointer, all depending on their purpose. */ 
In line 81  /* Creators and destructor.   */ 
In line 86  /* The following functions are used to add strings to be printed and prompt 
In line 87     strings to prompt for data.  The names are UI_{add,dup}_<function>_string 
In line 88     and UI_{add,dup}_input_boolean. 
In line 89   
In line 90     UI_{add,dup}_<function>_string have the following meanings: 
In line 91  	add	add a text or prompt string.  The pointers given to these 
In line 92  		functions are used verbatim, no copying is done. 
In line 93  	dup	make a copy of the text or prompt string, then add the copy 
In line 94  		to the collection of strings in the user interface. 
In line 95  	<function> 
In line 96  		The function is a name for the functionality that the given 
In line 97  		string shall be used for.  It can be one of: 
In line 98  			input	use the string as data prompt. 
In line 99  			verify	use the string as verification prompt.  This 
In line 100  				is used to verify a previous input. 
In line 101  			info	use the string for informational output. 
In line 102  			error	use the string for error output. 
In line 103     Honestly, there's currently no difference between info and error for the 
In line 104     moment. 
In line 105   
In line 106     UI_{add,dup}_input_boolean have the same semantics for "add" and "dup", 
In line 107     and are typically used when one wants to prompt for a yes/no response. 
In line 108   
In line 109   
In line 110     All of the functions in this group take a UI and a prompt string. 
In line 111     The string input and verify addition functions also take a flag argument, 
In line 112     a buffer for the result to end up with, a minimum input size and a maximum 
In line 113     input size (the result buffer MUST be large enough to be able to contain 
In line 114     the maximum number of characters).  Additionally, the verify addition 
In line 115     functions takes another buffer to compare the result against. 
In line 116     The boolean input functions take an action description string (which should 
In line 117     be safe to ignore if the expected user action is obvious, for example with 
In line 118     a dialog box with an OK button and a Cancel button), a string of acceptable 
In line 119     characters to mean OK and to mean Cancel.  The two last strings are checked 
In line 120     to make sure they don't have common characters.  Additionally, the same 
In line 121     flag argument as for the string input is taken, as well as a result buffer. 
In line 122     The result buffer is required to be at least one byte long.  Depending on 
In line 123     the answer, the first character from the OK or the Cancel character strings 
In line 124     will be stored in the first byte of the result buffer.  No NUL will be 
In line 125     added, so the result is *not* a string. 
In line 126   
In line 127     On success, the all return an index of the added information.  That index 
In line 128     is usefull when retrieving results with UI_get0_result(). */ 
In line 148  /* These are the possible flags.  They can be or'ed together. */ 
In line 149  /* Use to have echoing of input */ 
In line 151  /* Use a default password.  Where that password is found is completely 
In line 152     up to the application, it might for example be in the user data set 
In line 153     with UI_add_user_data().  It is not recommended to have more than 
In line 154     one input in each UI being marked with this flag, or the application 
In line 155     might get confused. */ 
In line 158  /* The user of these routines may want to define flags of their own.  The core 
In line 159     UI won't look at those, but will pass them on to the method routines.  They 
In line 160     must use higher bits so they don't get confused with the UI bits above. 
In line 161     UI_INPUT_FLAG_USER_BASE tells which is the lowest bit to use.  A good 
In line 162     example of use is this: 
In line 163   
In line 164  	#define MY_UI_FLAG1	(0x01 << UI_INPUT_FLAG_USER_BASE) 
In line 165   
In line 166  */ 
In line 170  /* The following function helps construct a prompt.  object_desc is a 
In line 171     textual short description of the object, for example "pass phrase", 
In line 172     and object_name is the name of the object (might be a card name or 
In line 173     a file name. 
In line 174     The returned string shall always be allocated on the heap with 
In line 175     OPENSSL_malloc(), and need to be free'd with OPENSSL_free(). 
In line 176   
In line 177     If the ui_method doesn't contain a pointer to a user-defined prompt 
In line 178     constructor, a default string is built, looking like this: 
In line 179   
In line 180  	"Enter {object_desc} for {object_name}:" 
In line 181   
In line 182     So, if object_desc has the value "pass phrase" and object_name has 
In line 183     the value "foo.key", the resulting string is: 
In line 184   
In line 185  	"Enter pass phrase for foo.key:" 
In line 186  */ 
In line 191  /* The following function is used to store a pointer to user-specific data. 
In line 192     Any previous such pointer will be returned and replaced. 
In line 193   
In line 194     For callback purposes, this function makes a lot more sense than using 
In line 195     ex_data, since the latter requires that different parts of OpenSSL or 
In line 196     applications share the same ex_data index. 
In line 197   
In line 198     Note that the UI_OpenSSL() method completely ignores the user data. 
In line 199     Other methods may not, however.  */ 
In line 201  /* We need a user data retrieving function as well.  */ 
In line 204  /* Return the result associated with a prompt given with the index i. */ 
In line 207  /* When all strings have been added, process the whole thing. */ 
In line 210  /* Give a user interface parametrised control commands.  This can be used to 
In line 211     send down an integer, a data pointer or a function pointer, as well as 
In line 212     be used to get information from a UI. */ 
In line 215  /* The commands */ 
In line 216  /* Use UI_CONTROL_PRINT_ERRORS with the value 1 to have UI_process print the 
In line 217     OpenSSL error stack before printing any info or added error messages and 
In line 218     before any prompting. */ 
In line 220  /* Check if a UI_process() is possible to do again with the same instance of 
In line 221     a user interface.  This makes UI_ctrl() return 1 if it is redoable, and 0 
In line 222     if not. */ 
In line 226  /* Some methods may use extra data */ 
In line 234  /* Use specific methods instead of the built-in one */ 
In line 240  /* The method with all the built-in thingies */ 
In line 244  /* ---------- For method writers ---------- */ 
In line 245  /* A method contains a number of functions that implement the low level 
In line 246     of the User Interface.  The functions are: 
In line 247   
In line 248  	an opener	This function starts a session, maybe by opening 
In line 249  			a channel to a tty, or by opening a window. 
In line 250  	a writer	This function is called to write a given string, 
In line 251  			maybe to the tty, maybe as a field label in a 
In line 252  			window. 
In line 253  	a flusher	This function is called to flush everything that 
In line 254  			has been output so far.  It can be used to actually 
In line 255  			display a dialog box after it has been built. 
In line 256  	a reader	This function is called to read a given prompt, 
In line 257  			maybe from the tty, maybe from a field in a 
In line 258  			window.  Note that it's called wth all string 
In line 259  			structures, not only the prompt ones, so it must 
In line 260  			check such things itself. 
In line 261  	a closer	This function closes the session, maybe by closing 
In line 262  			the channel to the tty, or closing the window. 
In line 263   
In line 264     All these functions are expected to return: 
In line 265   
In line 266  	0	on error. 
In line 267  	1	on success. 
In line 268  	-1	on out-of-band events, for example if some prompting has 
In line 269  		been canceled (by pressing Ctrl-C, for example).  This is 
In line 270  		only checked when returned by the flusher or the reader. 
In line 271   
In line 272     The way this is used, the opener is first called, then the writer for all 
In line 273     strings, then the flusher, then the reader for all strings and finally the 
In line 274     closer.  Note that if you want to prompt from a terminal or other command 
In line 275     line interface, the best is to have the reader also write the prompts 
In line 276     instead of having the writer do it.  If you want to prompt from a dialog 
In line 277     box, the writer can be used to build up the contents of the box, and the 
In line 278     flusher to actually display the box and run the event loop until all data 
In line 279     has been given, after which the reader only grabs the given data and puts 
In line 280     them back into the UI strings. 
In line 281   
In line 282     All method functions take a UI as argument.  Additionally, the writer and 
In line 283     the reader take a UI_STRING. 
In line 284  */ 
In line 286  /* The UI_STRING type is the data structure that contains all the needed info 
In line 287     about a string or a prompt, including test data for a verification prompt. 
In line 288  */ 
In line 292  /* The different types of strings that are currently supported. 
In line 293     This is only needed by method authors. */ 
In line 297  	UIT_PROMPT,		/* Prompt for a string */ 
In line 298  	UIT_VERIFY,		/* Prompt for a string and verify */ 
In line 299  	UIT_BOOLEAN,		/* Prompt for a yes/no response */ 
In line 300  	UIT_INFO,		/* Send info to the user */ 
In line 301  	UIT_ERROR		/* Send an error message to the user */ 
In line 304  /* Create and manipulate methods */ 
In line 320  /* The following functions are helpers for method writers to access relevant 
In line 321     data from a UI_STRING. */ 
In line 323  /* Return type of the UI_STRING */ 
In line 325  /* Return input flags of the UI_STRING */ 
In line 327  /* Return the actual string to output (the prompt, info or error) */ 
In line 329  /* Return the optional action string to output (the boolean promtp instruction) */ 
In line 331  /* Return the result of a prompt */ 
In line 333  /* Return the string to test the result against.  Only useful with verifies. */ 
In line 335  /* Return the required minimum size of the result */ 
In line 337  /* Return the required maximum size of the result */ 
In line 339  /* Set the result of a UI_STRING. */ 
In line 343  /* A couple of popular utility functions */ 
In line 348  /* BEGIN ERROR CODES */ 
In line 349  /* The following lines are auto generated by the script mkerr.pl. Any changes 
In line 350   * made after this point may be overwritten when the script is next run. 
In line 351   */ 
In line 354  /* Error codes for the UI functions. */ 
In line 356  /* Function codes. */ 
In line 370  /* Reason codes. */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\ui_compat.h  for analysis => 
In line 0  /* crypto/ui/ui.h -*- mode:C; c-file-style: "eay" -*- */ 
In line 1  /* Written by Richard Levitte (richard@levitte.org) for the OpenSSL 
In line 2   * project 2001. 
In line 3   */ 
In line 4  /* ==================================================================== 
In line 5   * Copyright (c) 2001 The OpenSSL Project.  All rights reserved. 
In line 6   * 
In line 7   * Redistribution and use in source and binary forms, with or without 
In line 8   * modification, are permitted provided that the following conditions 
In line 9   * are met: 
In line 10   * 
In line 11   * 1. Redistributions of source code must retain the above copyright 
In line 12   *    notice, this list of conditions and the following disclaimer.  
In line 13   * 
In line 14   * 2. Redistributions in binary form must reproduce the above copyright 
In line 15   *    notice, this list of conditions and the following disclaimer in 
In line 16   *    the documentation and/or other materials provided with the 
In line 17   *    distribution. 
In line 18   * 
In line 19   * 3. All advertising materials mentioning features or use of this 
In line 20   *    software must display the following acknowledgment: 
In line 21   *    "This product includes software developed by the OpenSSL Project 
In line 22   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 23   * 
In line 24   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 25   *    endorse or promote products derived from this software without 
In line 26   *    prior written permission. For written permission, please contact 
In line 27   *    openssl-core@openssl.org. 
In line 28   * 
In line 29   * 5. Products derived from this software may not be called "OpenSSL" 
In line 30   *    nor may "OpenSSL" appear in their names without prior written 
In line 31   *    permission of the OpenSSL Project. 
In line 32   * 
In line 33   * 6. Redistributions of any form whatsoever must retain the following 
In line 34   *    acknowledgment: 
In line 35   *    "This product includes software developed by the OpenSSL Project 
In line 36   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 37   * 
In line 38   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 39   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 40   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 41   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 42   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 43   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 44   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 45   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 46   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 47   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 48   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 49   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 50   * ==================================================================== 
In line 51   * 
In line 52   * This product includes cryptographic software written by Eric Young 
In line 53   * (eay@cryptsoft.com).  This product includes software written by Tim 
In line 54   * Hudson (tjh@cryptsoft.com). 
In line 55   * 
In line 56   */ 
In line 22   *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)" 
In line 36   *    for use in the OpenSSL Toolkit (http://www.openssl.org/)" 
In line 68  /* The following functions were previously part of the DES section, 
In line 69     and are provided here for backward compatibility reasons. */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\whrlpool.h  for analysis => 
In line 17  		/* double q is here to ensure 64-bit alignment */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\x509.h  for analysis => 
In line 0  /* crypto/x509/x509.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 57  /* ==================================================================== 
In line 58   * Copyright 2002 Sun Microsystems, Inc. ALL RIGHTS RESERVED. 
In line 59   * ECDH support in OpenSSL originally developed by  
In line 60   * SUN MICROSYSTEMS, INC., and contributed to the OpenSSL project. 
In line 61   */ 
In line 115  /* Under Win32 these are defined in wincrypt.h */ 
In line 147  	} /* X509_ALGOR */; 
In line 177  	int size; 	/* temp variable */ 
In line 183  /* we always keep X509_NAMEs in 2 forms. */ 
In line 187  	int modified;	/* true if 'bytes' needs to be built */ 
In line 193  /*	unsigned long hash; Keep the hash around for lookups */ 
In line 196  	} /* X509_NAME */; 
In line 214  /* a sequence of these are used */ 
In line 218  	int single; /* 0 for a set, 1 for a single item (which is wrong) */ 
In line 221  /* 0 */		STACK_OF(ASN1_TYPE) *set; 
In line 222  /* 1 */		ASN1_TYPE	*single; 
In line 236  	/*  d=2 hl=2 l=  0 cons: cont: 00 */ 
In line 237  	STACK_OF(X509_ATTRIBUTE) *attributes; /* [ 0 ] */ 
In line 250  	ASN1_INTEGER *version;		/* [ 0 ] default of v1 */ 
In line 257  	ASN1_BIT_STRING *issuerUID;		/* [ 1 ] optional in v2 */ 
In line 258  	ASN1_BIT_STRING *subjectUID;		/* [ 2 ] optional in v2 */ 
In line 259  	STACK_OF(X509_EXTENSION) *extensions;	/* [ 3 ] optional in v3 */ 
In line 263  /* This stuff is certificate "auxiliary info" 
In line 264   * it contains details which are useful in certificate 
In line 265   * stores and databases. When used this is tagged onto 
In line 266   * the end of the certificate itself 
In line 267   */ 
In line 271  	STACK_OF(ASN1_OBJECT) *trust;		/* trusted uses */ 
In line 272  	STACK_OF(ASN1_OBJECT) *reject;		/* rejected uses */ 
In line 273  	ASN1_UTF8STRING *alias;			/* "friendly name" */ 
In line 274  	ASN1_OCTET_STRING *keyid;		/* key id of private key */ 
In line 275  	STACK_OF(X509_ALGOR) *other;		/* other unspecified info */ 
In line 287  	/* These contain copies of various extension values */ 
In line 308  	} /* X509 */; 
In line 313  /* This is used for a table of trust checking functions */ 
In line 331  /* standard trust ids */ 
In line 333  #define X509_TRUST_DEFAULT	-1	/* Only valid in purpose settings */ 
In line 344  /* Keep these up to date! */ 
In line 349  /* trust_flags values */ 
In line 353  /* check_trust return codes */ 
In line 359  /* Flags for X509_print_ex() */ 
In line 375  /* Flags specific to X509_NAME_print_ex() */	 
In line 377  /* The field separator information */ 
In line 381  #define XN_FLAG_COMPAT		0		/* Traditional SSLeay: use old X509_NAME_print */ 
In line 382  #define XN_FLAG_SEP_COMMA_PLUS	(1 << 16)	/* RFC2253 ,+ */ 
In line 383  #define XN_FLAG_SEP_CPLUS_SPC	(2 << 16)	/* ,+ spaced: more readable */ 
In line 384  #define XN_FLAG_SEP_SPLUS_SPC	(3 << 16)	/* ;+ spaced */ 
In line 385  #define XN_FLAG_SEP_MULTILINE	(4 << 16)	/* One line per field */ 
In line 387  #define XN_FLAG_DN_REV		(1 << 20)	/* Reverse DN order */ 
In line 389  /* How the field name is shown */ 
In line 393  #define XN_FLAG_FN_SN		0		/* Object short name */ 
In line 394  #define XN_FLAG_FN_LN		(1 << 21)	/* Object long name */ 
In line 395  #define XN_FLAG_FN_OID		(2 << 21)	/* Always use OIDs */ 
In line 396  #define XN_FLAG_FN_NONE		(3 << 21)	/* No field names */ 
In line 398  #define XN_FLAG_SPC_EQ		(1 << 23)	/* Put spaces round '=' */ 
In line 400  /* This determines if we dump fields we don't recognise: 
In line 401   * RFC2253 requires this. 
In line 402   */ 
In line 406  #define XN_FLAG_FN_ALIGN	(1 << 25)	/* Align field names to 20 characters */ 
In line 408  /* Complete set of RFC2253 flags */ 
In line 416  /* readable oneline form */ 
In line 424  /* readable multiline form */ 
In line 437  	STACK_OF(X509_EXTENSION) /* optional */ *extensions; 
In line 438  	/* Set up if indirect CRL */ 
In line 440  	/* Revocation reason */ 
In line 442  	int sequence; /* load sequence */ 
In line 456  	STACK_OF(X509_EXTENSION) /* [0] */ *extensions; 
In line 462  	/* actual signature */ 
In line 468  	/* Copies of various extensions */ 
In line 471  	/* Convenient breakdown of IDP */ 
In line 474  	/* CRL and base CRL numbers for delta processing */ 
In line 483  	} /* X509_CRL */; 
In line 491  	/* The PKCS#8 data types */ 
In line 493  	ASN1_OCTET_STRING *enc_pkey;	/* encrypted pub key */ 
In line 495  	/* When decrypted, the following will not be NULL */ 
In line 498  	/* used to encrypt and decrypt */ 
In line 501  	int key_free;	/* true if we should auto free key_data */ 
In line 503  	/* expanded version of 'enc_algor' */ 
In line 526  /* The next 2 structures and their 8 routines were sent to me by 
In line 527   * Pat Richard <patr@x509.com> and are used to manipulate 
In line 528   * Netscapes spki structures - useful if you are writing a CA web page 
In line 529   */ 
In line 533  	ASN1_IA5STRING *challenge;	/* challenge sent in atlas >= PR2 */ 
In line 538  	NETSCAPE_SPKAC *spkac;	/* signed public key and challenge */ 
In line 543  /* Netscape certificate sequence structure */ 
In line 550  /* Unused (and iv length is wrong) 
In line 551  typedef struct CBCParameter_st 
In line 552  	{ 
In line 553  	unsigned char iv[8]; 
In line 554  	} CBC_PARAM; 
In line 555  */ 
In line 557  /* Password based encryption structure */ 
In line 564  /* Password based encryption V2 structures */ 
In line 572  ASN1_TYPE *salt;	/* Usually OCTET STRING but could be anything */ 
In line 579  /* PKCS#8 private key info structure */ 
In line 583          int broken;     /* Flag for various broken formats */ 
In line 591          ASN1_TYPE *pkey; /* Should be OCTET STRING but some are broken */ 
In line 610  /* #define	X509_get_serialNumber(x) ((x)->cert_info->serialNumber) */ 
In line 613  #define		X509_extract_key(x)	X509_get_pubkey(x) /*****/ 
In line 638  /* This one is only used so that a binary form can output, as in 
In line 639   * i2d_X509_NAME(X509_get_X509_PUBKEY(x),&buf) */ 
In line 920  int		X509_certificate_type(X509 *x,EVP_PKEY *pubkey /* optional */); 
In line 1011  /* NOTE: you should be passsing -1, not 0 as lastpos.  The functions that use 
In line 1012   * lastpos, search after that position on. */ 
In line 1151  /* lookup a cert from a X509 STACK */ 
In line 1174  /* PKCS#8 utilities */ 
In line 1210  /* BEGIN ERROR CODES */ 
In line 1211  /* The following lines are auto generated by the script mkerr.pl. Any changes 
In line 1212   * made after this point may be overwritten when the script is next run. 
In line 1213   */ 
In line 1216  /* Error codes for the X509 functions. */ 
In line 1218  /* Function codes. */ 
In line 1265  /* Reason codes. */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\x509v3.h  for analysis => 
In line 0  /* x509v3.h */ 
In line 1  /* Written by Dr Stephen N Henson (steve@openssl.org) for the OpenSSL 
In line 2   * project 1999. 
In line 3   */ 
In line 4  /* ==================================================================== 
In line 5   * Copyright (c) 1999-2004 The OpenSSL Project.  All rights reserved. 
In line 6   * 
In line 7   * Redistribution and use in source and binary forms, with or without 
In line 8   * modification, are permitted provided that the following conditions 
In line 9   * are met: 
In line 10   * 
In line 11   * 1. Redistributions of source code must retain the above copyright 
In line 12   *    notice, this list of conditions and the following disclaimer.  
In line 13   * 
In line 14   * 2. Redistributions in binary form must reproduce the above copyright 
In line 15   *    notice, this list of conditions and the following disclaimer in 
In line 16   *    the documentation and/or other materials provided with the 
In line 17   *    distribution. 
In line 18   * 
In line 19   * 3. All advertising materials mentioning features or use of this 
In line 20   *    software must display the following acknowledgment: 
In line 21   *    "This product includes software developed by the OpenSSL Project 
In line 22   *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)" 
In line 23   * 
In line 24   * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to 
In line 25   *    endorse or promote products derived from this software without 
In line 26   *    prior written permission. For written permission, please contact 
In line 27   *    licensing@OpenSSL.org. 
In line 28   * 
In line 29   * 5. Products derived from this software may not be called "OpenSSL" 
In line 30   *    nor may "OpenSSL" appear in their names without prior written 
In line 31   *    permission of the OpenSSL Project. 
In line 32   * 
In line 33   * 6. Redistributions of any form whatsoever must retain the following 
In line 34   *    acknowledgment: 
In line 35   *    "This product includes software developed by the OpenSSL Project 
In line 36   *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)" 
In line 37   * 
In line 38   * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY 
In line 39   * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 40   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR 
In line 41   * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR 
In line 42   * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
In line 43   * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
In line 44   * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
In line 45   * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 46   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
In line 47   * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
In line 48   * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED 
In line 49   * OF THE POSSIBILITY OF SUCH DAMAGE. 
In line 50   * ==================================================================== 
In line 51   * 
In line 52   * This product includes cryptographic software written by Eric Young 
In line 53   * (eay@cryptsoft.com).  This product includes software written by Tim 
In line 54   * Hudson (tjh@cryptsoft.com). 
In line 55   * 
In line 56   */ 
In line 22   *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)" 
In line 36   *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)" 
In line 68  /* Forward reference */ 
In line 72  /* Useful typedefs */ 
In line 92  /* V3 extension structure */ 
In line 97  /* If this is set the following four fields are ignored */ 
In line 99  /* Old style ASN1 calls */ 
In line 105  /* The following pair is used for string extensions */ 
In line 109  /* The following pair is used for multi-valued extensions */ 
In line 113  /* The following are used for raw extensions */ 
In line 117  void *usr_data;	/* Any extension specific data */ 
In line 127  /* Context specific info */ 
In line 137  /* Maybe more here */ 
In line 144  /* ext_flags values */ 
In line 187  	OTHERNAME *otherName; /* otherName */ 
In line 197  	/* Old names */ 
In line 198  	ASN1_OCTET_STRING *ip; /* iPAddress */ 
In line 199  	X509_NAME *dirn;		/* dirn */ 
In line 200  	ASN1_IA5STRING *ia5;/* rfc822Name, dNSName, uniformResourceIdentifier */ 
In line 201  	ASN1_OBJECT *rid; /* registeredID */ 
In line 202  	ASN1_TYPE *other; /* x400Address */ 
In line 229  /* If relativename then this contains the full distribution point name */ 
In line 232  /* All existing reasons */ 
In line 265  /* Strong extranet structures */ 
In line 339  /* Proxy certificate structures, see RFC 3820 */ 
In line 365  /* Values in idp_flags field */ 
In line 366  /* IDP present */ 
In line 368  /* IDP values inconsistent */ 
In line 370  /* onlyuser true */ 
In line 372  /* onlyCA true */ 
In line 374  /* onlyattr true */ 
In line 376  /* indirectCRL true */ 
In line 378  /* onlysomereasons present */ 
In line 406  /* X509_PURPOSE stuff */ 
In line 414  /* Really self issued not necessarily self signed */ 
In line 459  	int trust;		/* Default trust ID */ 
In line 481  /* Flags for X509V3_EXT_print() */ 
In line 484  /* Return error for unknown extensions */ 
In line 486  /* Print error for unknown extensions */ 
In line 488  /* ASN1 parse unknown extensions */ 
In line 490  /* BIO_dump unknown extensions */ 
In line 493  /* Flags for X509V3_add1_i2d */ 
In line 792  /* 
In line 793   * API tag for elements of the ASIdentifer SEQUENCE. 
In line 794   */ 
In line 798  /* 
In line 799   * AFI values, assigned by IANA.  It'd be nice to make the AFI 
In line 800   * handling code totally generic, but there are too many little things 
In line 801   * that would need to be defined for other address families for it to 
In line 802   * be worth the trouble. 
In line 803   */ 
In line 807  /* 
In line 808   * Utilities to construct and extract values from RFC3779 extensions, 
In line 809   * since some of the encodings (particularly for IP address prefixes 
In line 810   * and ranges) are a bit tedious to work with directly. 
In line 811   */ 
In line 828  /* 
In line 829   * Canonical forms. 
In line 830   */ 
In line 836  /* 
In line 837   * Tests for inheritance and containment. 
In line 838   */ 
In line 844  /* 
In line 845   * Check whether RFC 3779 extensions nest properly in chains. 
In line 846   */ 
In line 856  #endif /* OPENSSL_NO_RFC3779 */ 
In line 858  /* BEGIN ERROR CODES */ 
In line 859  /* The following lines are auto generated by the script mkerr.pl. Any changes 
In line 860   * made after this point may be overwritten when the script is next run. 
In line 861   */ 
In line 864  /* Error codes for the X509V3 functions. */ 
In line 866  /* Function codes. */ 
In line 933  /* Reason codes. */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\Build-OpenSSL-VC-32\include\openssl\x509_vfy.h  for analysis => 
In line 0  /* crypto/x509/x509_vfy.h */ 
In line 1  /* Copyright (C) 1995-1998 Eric Young (eay@cryptsoft.com) 
In line 2   * All rights reserved. 
In line 3   * 
In line 4   * This package is an SSL implementation written 
In line 5   * by Eric Young (eay@cryptsoft.com). 
In line 6   * The implementation was written so as to conform with Netscapes SSL. 
In line 7   *  
In line 8   * This library is free for commercial and non-commercial use as long as 
In line 9   * the following conditions are aheared to.  The following conditions 
In line 10   * apply to all code found in this distribution, be it the RC4, RSA, 
In line 11   * lhash, DES, etc., code; not just the SSL code.  The SSL documentation 
In line 12   * included with this distribution is covered by the same copyright terms 
In line 13   * except that the holder is Tim Hudson (tjh@cryptsoft.com). 
In line 14   *  
In line 15   * Copyright remains Eric Young's, and as such any Copyright notices in 
In line 16   * the code are not to be removed. 
In line 17   * If this package is used in a product, Eric Young should be given attribution 
In line 18   * as the author of the parts of the library used. 
In line 19   * This can be in the form of a textual message at program startup or 
In line 20   * in documentation (online or textual) provided with the package. 
In line 21   *  
In line 22   * Redistribution and use in source and binary forms, with or without 
In line 23   * modification, are permitted provided that the following conditions 
In line 24   * are met: 
In line 25   * 1. Redistributions of source code must retain the copyright 
In line 26   *    notice, this list of conditions and the following disclaimer. 
In line 27   * 2. Redistributions in binary form must reproduce the above copyright 
In line 28   *    notice, this list of conditions and the following disclaimer in the 
In line 29   *    documentation and/or other materials provided with the distribution. 
In line 30   * 3. All advertising materials mentioning features or use of this software 
In line 31   *    must display the following acknowledgement: 
In line 32   *    "This product includes cryptographic software written by 
In line 33   *     Eric Young (eay@cryptsoft.com)" 
In line 34   *    The word 'cryptographic' can be left out if the rouines from the library 
In line 35   *    being used are not cryptographic related :-). 
In line 36   * 4. If you include any Windows specific code (or a derivative thereof) from  
In line 37   *    the apps directory (application code) you must include an acknowledgement: 
In line 38   *    "This product includes software written by Tim Hudson (tjh@cryptsoft.com)" 
In line 39   *  
In line 40   * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND 
In line 41   * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
In line 42   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE 
In line 43   * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE 
In line 44   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL 
In line 45   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS 
In line 46   * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) 
In line 47   * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
In line 48   * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY 
In line 49   * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
In line 50   * SUCH DAMAGE. 
In line 51   *  
In line 52   * The licence and distribution terms for any publically available version or 
In line 53   * derivative of this code cannot be changed.  i.e. this code cannot simply be 
In line 54   * copied and put under another distribution licence 
In line 55   * [including the GNU Public Licence.] 
In line 56   */ 
In line 60  /* openssl/x509.h ends up #include-ing this file at about the only 
In line 61   * appropriate moment. */ 
In line 80  /* Outer object */ 
In line 92  	int num_paths;	/* number of paths to files or directories */ 
In line 94  	char **paths;	/* the list of paths or directories */ 
In line 98  /*******************************/ 
In line 99  /* 
In line 100  SSL_CTX -> X509_STORE     
In line 101  		-> X509_LOOKUP 
In line 102  			->X509_LOOKUP_METHOD 
In line 103  		-> X509_LOOKUP 
In line 104  			->X509_LOOKUP_METHOD 
In line 105    
In line 106  SSL	-> X509_STORE_CTX 
In line 107  		->X509_STORE     
In line 108   
In line 109  The X509_STORE holds the tables etc for verification stuff. 
In line 110  A X509_STORE_CTX is used while validating a single certificate. 
In line 111  The X509_STORE has X509_LOOKUPs for looking up certs. 
In line 112  The X509_STORE then calls a function to actually verify the 
In line 113  certificate chain. 
In line 114  */ 
In line 124  	/* one of the above types */ 
In line 139  /* This is a static that defines the function interface */ 
In line 160  /* This structure hold all parameters associated with a verify operation 
In line 161   * by including an X509_VERIFY_PARAM structure in related structures the 
In line 162   * parameters used can be customized 
In line 163   */ 
In line 168  	time_t check_time;	/* Time to use */ 
In line 169  	unsigned long inh_flags; /* Inheritance flags */ 
In line 170  	unsigned long flags;	/* Various verify flags */ 
In line 171  	int purpose;		/* purpose to check untrusted certificates */ 
In line 172  	int trust;		/* trust setting to check */ 
In line 173  	int depth;		/* Verify depth */ 
In line 174  	STACK_OF(ASN1_OBJECT) *policies;	/* Permissible policies */ 
In line 179  /* This is used to hold everything.  It is used for all certificate 
In line 180   * validation.  Once we have a certificate chain, the 'verify' 
In line 181   * function is then called to actually check the cert chain. */ 
In line 184  	/* The following is a cache of trusted certs */ 
In line 185  	int cache; 	/* if true, stash any hits */ 
In line 186  	STACK_OF(X509_OBJECT) *objs;	/* Cache of all objects */ 
In line 188  	/* These are external lookup methods */ 
In line 193  	/* Callbacks for various operations */ 
In line 194  	int (*verify)(X509_STORE_CTX *ctx);	/* called to verify a certificate */ 
In line 195  	int (*verify_cb)(int ok,X509_STORE_CTX *ctx);	/* error callback */ 
In line 196  	int (*get_issuer)(X509 **issuer, X509_STORE_CTX *ctx, X509 *x);	/* get issuers cert from ctx */ 
In line 197  	int (*check_issued)(X509_STORE_CTX *ctx, X509 *x, X509 *issuer); /* check issued */ 
In line 198  	int (*check_revocation)(X509_STORE_CTX *ctx); /* Check revocation status of chain */ 
In line 199  	int (*get_crl)(X509_STORE_CTX *ctx, X509_CRL **crl, X509 *x); /* retrieve CRL */ 
In line 200  	int (*check_crl)(X509_STORE_CTX *ctx, X509_CRL *crl); /* Check CRL validity */ 
In line 201  	int (*cert_crl)(X509_STORE_CTX *ctx, X509_CRL *crl, X509 *x); /* Check certificate against CRL */ 
In line 208  	} /* X509_STORE */; 
In line 215  /* This is the functions plus an instance of the local variables. */ 
In line 218  	int init;			/* have we been started */ 
In line 219  	int skip;			/* don't use us. */ 
In line 220  	X509_LOOKUP_METHOD *method;	/* the functions */ 
In line 221  	char *method_data;		/* method data */ 
In line 223  	X509_STORE *store_ctx;	/* who owns us */ 
In line 224  	} /* X509_LOOKUP */; 
In line 226  /* This is a used when verifying cert chains.  Since the 
In line 227   * gathering of the cert chain can take some time (and have to be 
In line 228   * 'retried', this needs to be kept and passed around. */ 
In line 229  struct x509_store_ctx_st      /* X509_STORE_CTX */ 
In line 232  	int current_method;	/* used when looking up certs */ 
In line 234  	/* The following are set by the caller */ 
In line 235  	X509 *cert;		/* The cert to check */ 
In line 236  	STACK_OF(X509) *untrusted;	/* chain of X509s - untrusted - passed in */ 
In line 237  	STACK_OF(X509_CRL) *crls;	/* set of CRLs passed in */ 
In line 240  	void *other_ctx;	/* Other info for use with get_issuer() */ 
In line 242  	/* Callbacks for various operations */ 
In line 243  	int (*verify)(X509_STORE_CTX *ctx);	/* called to verify a certificate */ 
In line 244  	int (*verify_cb)(int ok,X509_STORE_CTX *ctx);		/* error callback */ 
In line 245  	int (*get_issuer)(X509 **issuer, X509_STORE_CTX *ctx, X509 *x);	/* get issuers cert from ctx */ 
In line 246  	int (*check_issued)(X509_STORE_CTX *ctx, X509 *x, X509 *issuer); /* check issued */ 
In line 247  	int (*check_revocation)(X509_STORE_CTX *ctx); /* Check revocation status of chain */ 
In line 248  	int (*get_crl)(X509_STORE_CTX *ctx, X509_CRL **crl, X509 *x); /* retrieve CRL */ 
In line 249  	int (*check_crl)(X509_STORE_CTX *ctx, X509_CRL *crl); /* Check CRL validity */ 
In line 250  	int (*cert_crl)(X509_STORE_CTX *ctx, X509_CRL *crl, X509 *x); /* Check certificate against CRL */ 
In line 256  	/* The following is built up */ 
In line 257  	int valid;		/* if 0, rebuild chain */ 
In line 258  	int last_untrusted;	/* index of last untrusted cert */ 
In line 259  	STACK_OF(X509) *chain; 		/* chain of X509s - built up and trusted */ 
In line 260  	X509_POLICY_TREE *tree;	/* Valid policy tree */ 
In line 262  	int explicit_policy;	/* Require explicit policy value */ 
In line 264  	/* When something goes wrong, this is why */ 
In line 268  	X509 *current_issuer;	/* cert currently being tested as valid issuer */ 
In line 269  	X509_CRL *current_crl;	/* current CRL */ 
In line 271  	int current_crl_score;  /* score of current CRL */ 
In line 272  	unsigned int current_reasons;  /* Reason mask */ 
In line 274  	X509_STORE_CTX *parent; /* For CRL path validation: parent context */ 
In line 277  	} /* X509_STORE_CTX */; 
In line 296  /* illegal error (for uninitialized values, to avoid X509_V_OK): 1 */ 
In line 325  /* These are 'informational' when looking for issuer cert */ 
In line 356  /* The application is not happy */ 
In line 359  /* Certificate verify flags */ 
In line 361  /* Send issuer+subject checks to verify_cb */ 
In line 363  /* Use check time instead of current time */ 
In line 365  /* Lookup CRLs */ 
In line 367  /* Lookup CRLs for whole chain */ 
In line 369  /* Ignore unhandled critical extensions */ 
In line 371  /* Disable workarounds for broken certificates */ 
In line 373  /* Enable proxy certificate validation */ 
In line 375  /* Enable policy checking */ 
In line 377  /* Policy variable require-explicit-policy */ 
In line 379  /* Policy variable inhibit-any-policy */ 
In line 381  /* Policy variable inhibit-policy-mapping */ 
In line 383  /* Notify callback that policy is OK */ 
In line 385  /* Extended CRL features such as indirect CRLs, alternate CRL signing keys */ 
In line 387  /* Delta CRL support */ 
In line 389  /* Check selfsigned CA signature */ 
In line 399  /* Internal use: mask of policy related options */ 
In line 507  /* X509_VERIFY_PARAM functions */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\test\src\common.h  for analysis => 
In file common.h not detected Сomment
==================================================================================================================
Search 69 file with extension *.c
==================================================================================================================
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\bind.c  for analysis => 
In line 0  /*------- 
In line 1   * Module:			bind.c 
In line 2   * 
In line 3   * Description:		This module contains routines related to binding 
In line 4   *					columns and parameters. 
In line 5   * 
In line 6   * Classes:			BindInfoClass, ParameterInfoClass 
In line 7   * 
In line 8   * API functions:	SQLBindParameter, SQLBindCol, SQLDescribeParam, SQLNumParams, 
In line 9   *					SQLParamOptions 
In line 10   * 
In line 11   * Comments:		See "readme.txt" for copyright and license information. 
In line 12   *------- 
In line 13   */ 
In line 15  /* #include <stdlib.h> */ 
In line 31  /*		Bind parameters on a statement handle */ 
In line 70  	/* use zero based column numbers for the below part */ 
In line 73  	/* store the given info */ 
In line 107  #endif /* ODBCVER */ 
In line 109  	/* 
In line 110  	 * If rebinding a parameter that had data-at-exec stuff in it, then 
In line 111  	 * free that stuff 
In line 112  	 */ 
In line 127  #ifdef	NOT_USED /* evaluation of pcbValue here is dangerous */ 
In line 128  	/* Data at exec macro only valid for C char/binary data */ 
In line 134  #endif /* NOT_USED */ 
In line 136  	/* Clear premature result */ 
In line 147  /*	Associate a user-supplied buffer with a database column. */ 
In line 184  	/* If the bookmark column is being bound, then just save it */ 
In line 199  			/* Make sure it is the bookmark data type */ 
In line 205  #endif /* ODBCVER */ 
In line 224  	/* 
In line 225  	 * Allocate enough bindings if not already done. Most likely, 
In line 226  	 * execution of a statement would have setup the necessary bindings. 
In line 227  	 * But some apps call BindCol before any statement is executed. 
In line 228  	 */ 
In line 235  	/* check to see if the bindings were allocated */ 
In line 243  	/* use zero based col numbers from here out */ 
In line 246  	/* Reset for SQLGetData */ 
In line 251  		/* we have to unbind the column */ 
In line 267  		/* ok, bind that column */ 
In line 288  #endif /* ODBCVER */ 
In line 302  /* 
In line 303   *	Returns the description of a parameter marker. 
In line 304   *	This function is listed as not being supported by SQLGetFunctions() because it is 
In line 305   *	used to describe "parameter markers" (not bound parameters), in which case, 
In line 306   *	the dbms should return info on the markers.  Since Postgres doesn't support that, 
In line 307   *	it is best to say this function is not supported and let the application assume a 
In line 308   *	data type (most likely varchar). 
In line 309   */ 
In line 336  	/*if ((ipar < 1) || (ipar > ipdopts->allocated))*/ 
In line 354  	/* StartRollbackState(stmt); */ 
In line 371  	/* 
In line 372  	 * This implementation is not very good, since it is supposed to 
In line 373  	 * describe 
In line 374  	 */ 
In line 375  	/* parameter markers, not bound parameters.  */ 
In line 420  /*	Sets multiple values (arrays) for the set of parameter markers. */ 
In line 440  #endif /* ODBCVER */ 
In line 443  /* 
In line 444   *	This function should really talk to the dbms to determine the number of 
In line 445   *	"parameter markers" (not bound parameters) in the statement.  But, since 
In line 446   *	Postgres doesn't support that, the driver should just count the number of markers 
In line 447   *	and return that.  The reason the driver just can't say this function is unsupported 
In line 448   *	like it does for SQLDescribeParam is that some applications don't care and try 
In line 449   *	to call it anyway. 
In line 450   *	If the statement does not have parameters, it should just return 0. 
In line 451   */ 
In line 480  		/* no statement has been allocated */ 
In line 501  /* 
In line 502   *	 Bindings Implementation 
In line 503   */ 
In line 533  	/* 
In line 534  	 * if we have too few, allocate room for more, and copy the old 
In line 535  	 * entries into the new structure 
In line 536  	 */ 
In line 565  	/* 
In line 566  	 * if we have too few, allocate room for more, and copy the old 
In line 567  	 * entries into the new structure 
In line 568  	 */ 
In line 675  /* 
In line 676   *	Free parameters and free the memory. 
In line 677   */ 
In line 732  /* 
In line 733   *	Free parameters and free the memory. 
In line 734   */ 
In line 763  	/* 
In line 764  	 * if we have too few, allocate room for more, and copy the old 
In line 765  	 * entries into the new structure 
In line 766  	 */ 
In line 795  	/* 
In line 796  	 * There is no reason to zero out extra bindings if there are more 
In line 797  	 * than needed.  If an app has allocated extra bindings, let it worry 
In line 798  	 * about it by unbinding those columns. 
In line 799  	 */ 
In line 801  	/* SQLBindCol(1..) ... SQLBindCol(10...)   # got 10 bindings */ 
In line 802  	/* SQLExecDirect(...)  # returns 5 cols */ 
In line 803  	/* SQLExecDirect(...)  # returns 10 cols  (now OK) */ 
In line 819  	/* use zero based col numbers from here out */ 
In line 833  		/* we have to unbind the column */ 
In line 916  	/* 
In line 917  	 * if we have too few, allocate room for more, and copy the old 
In line 918  	 * entries into the new structure 
In line 919  	 */ 
In line 960  	/* 
In line 961  	 * There is no reason to zero out extra gdata if there are more 
In line 962  	 * than needed.  If an app has allocated extra gdata, let it worry 
In line 963  	 * about it by unbinding those columns. 
In line 964  	 */ 
In line 996  	/* 
In line 997  	 * if we have too few, allocate room for more, and copy the old 
In line 998  	 * entries into the new structure 
In line 999  	 */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\columninfo.c  for analysis => 
In line 0  /*------- 
In line 1   * Module:			columninfo.c 
In line 2   * 
In line 3   * Description:		This module contains routines related to 
In line 4   *					reading and storing the field information from a query. 
In line 5   * 
In line 6   * Classes:			ColumnInfoClass (Functions prefix: "CI_") 
In line 7   * 
In line 8   * API functions:	none 
In line 9   * 
In line 10   * Comments:		See "readme.txt" for copyright and license information. 
In line 11   *------- 
In line 12   */ 
In line 50  /* 
In line 51   *	Read in field descriptions. 
In line 52   *	If self is not null, then also store the information. 
In line 53   *	If self is null, then just read, don't store. 
In line 54   */ 
In line 65  	/* COLUMN_NAME_STORAGE_LEN may be sufficient but for safety */ 
In line 73  	/* at first read in the number of fields that are in the query */ 
In line 80  		/* according to that allocate memory */ 
In line 86  	/* now read in the descriptions */ 
In line 90  		if (PROTOCOL_74(ci))	/* tableid & columnid */ 
In line 98  		/* If 6.4 protocol, then read the atttypmod field */ 
In line 104  			/* Subtract the header length */ 
In line 117  			if (PROTOCOL_74(ci))	/* format */ 
In line 138  	/* Safe to call even if null */ 
In line 159  	CI_free_memory(self);		/* always safe to call */ 
In line 172  	/* check bounds */ 
In line 176  	/* store the info */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\connection.c  for analysis => 
In line 0  // __________________________________________ 
In line 1  // Задача       : PostgreSQL ODBC Driver 
In line 2  // Назначение	: Функции подключения к СУБД PostgreSQL 
In line 3  // Язык         : C (Microsoft Visual Studio 2010) 
In line 4  // Программист	: The PostgreSQL Global Development Group 
In line 5  // Дата	        : 02.2014 
In line 6  // Изменения	: 04.2018 Романов Д.Г.  
In line 7  //              : В функции CC_connect добавлена проверка мандатных меток сессии  
In line 8  //              : СУБД PostgreSQL и СЗИ "СТРАЖ" 
In line 9  // __________________________________________ 
In line 11  /*------ 
In line 12   * Module:			connection.c 
In line 13   * 
In line 14   * Description:		This module contains routines related to 
In line 15   *					connecting to and disconnecting from the Postgres DBMS. 
In line 16   * 
In line 17   * Classes:			ConnectionClass (Functions prefix: "CC_") 
In line 18   * 
In line 19   * API functions:	SQLAllocConnect, SQLConnect, SQLDisconnect, SQLFreeConnect, 
In line 20   *					SQLBrowseConnect(NI) 
In line 21   * 
In line 22   * Comments:		See "readme.txt" for copyright and license information. 
In line 23   *------- 
In line 24   */ 
In line 25  /* Multibyte support	Eiji Tokuya 2001-03-15 */ 
In line 27  /*	TryEnterCritiaclSection needs the following #define */ 
In line 30  #endif /* _WIN32_WINNT */ 
In line 35  #endif /* NOT_USE_LIBPQ */ 
In line 44  #endif /* USE_SSPI */ 
In line 47  #endif /* WIN32 */ 
In line 50  #endif /* USE_KRB5 */ 
In line 53  #endif /* USE_GSS */ 
In line 72  #define STMT_INCREMENT 16		/* how many statement holders to allocate 
In line 73  								 * at a time */ 
In line 154  	/* get the values for the DSN from the registry */ 
In line 157  	/* initialize pg_version from connInfo.protocol    */ 
In line 160  	/* 
In line 161  	 * override values from DSN info with UID and authStr(pwd) This only 
In line 162  	 * occurs if the values are actually there. 
In line 163  	 */ 
In line 164  	fchar = ci->username[0]; /* save the first byte */  
In line 166  	if ('\0' == ci->username[0]) /* an empty string is specified */ 
In line 167  		ci->username[0] = fchar; /* restore the original username */ 
In line 171  		if (tmpstr[0]) /* non-empty string is specified */ 
In line 176  	/* fill in any defaults */ 
In line 183  		/* Error messages are filled in */ 
In line 215  /* Drop any hstmts open on hdbc and disconnect from database */ 
In line 243  	/* Close the connection and free statements */ 
In line 270  	/* Remove the connection from the environment */ 
In line 322  #endif /* _HANDLE_ENLIST_IN_DTC_ */ 
In line 377  	copy_globals(&(ci->drivers), &(sci->drivers));	/* moved from driver's option */ 
In line 384  #endif /* WIN32 */ 
In line 386  /* 
In line 387   *		IMPLEMENTATION CONNECTION CLASS 
In line 388   */ 
In line 422  #endif /* WIN_MULTITHREAD_SUPPORT */ 
In line 426  	rv->transact_status = CONN_IN_AUTOCOMMIT;		/* autocommit by default */ 
In line 442  #endif /* ODBCVER */ 
In line 449  #endif /* WIN32 */ 
In line 457  	/* Initialize statement options to defaults */ 
In line 458  	/* Statements under this conn will inherit these options */ 
In line 466  #endif /* _HANDLE_ENLIST_IN_DTC_ */ 
In line 494  	CC_cleanup(self, FALSE);			/* cleanup socket and statements */ 
In line 498  	/* Free up statement holders */ 
In line 510  #endif /* ODBCVER */ 
In line 528  /*	Return how many cursors are opened on this connection */ 
In line 577  #endif /* _HANDLE_ENLIST_IN_DTC_ */ 
In line 593  #endif /* USE_SSPI */ 
In line 596  #endif /* USE_GSS */ 
In line 603  /* 
In line 604   *	Used to begin a transaction. 
In line 605   */ 
In line 622  /* 
In line 623   *	Used to commit a transaction. 
In line 624   *	We are almost always in the middle of a transaction. 
In line 625   */ 
In line 646  /* 
In line 647   *	Used to cancel a transaction. 
In line 648   *	We are almost always in the middle of a transaction. 
In line 649   */ 
In line 665  /* This is called by SQLSetConnectOption etc also */ 
In line 686  /* Clear cached table info */ 
In line 719  /* This is called by SQLDisconnect also */ 
In line 733  	/* Cancel an ongoing transaction */ 
In line 734  	/* We are always in the middle of a transaction, */ 
In line 735  	/* even if we are in auto commit. */ 
In line 744  			/* This actually closes the connection to the dbase */ 
In line 752  	/* Free all the stmts on this connection */ 
In line 758  			stmt->hdbc = NULL;	/* prevent any more dbase interactions */ 
In line 766  	/* Free all the descs on this connection */ 
In line 772  			DC_get_conn(desc) = NULL;	/* prevent any more dbase interactions */ 
In line 778  #endif /* ODBCVER */ 
In line 780  	/* Check for translation dll */ 
In line 815  	/* Free cached table info */ 
In line 967  		if (!SOCK_get_next_byte(sock, TRUE)) /* peek the next byte */ 
In line 1018  		/* Remove a newline */ 
In line 1042  #endif /* _LEGACY_NODE_ */ 
In line 1109  		/* Remove a newline */ 
In line 1122  		QR_set_notice(res, msgbuf);  /* will dup this string */ 
In line 1133  	/* ERROR_MSG_LENGTH is suffcient */ 
In line 1225  #endif /* WIN32 */ 
In line 1233  #endif /* WIN32 */ 
In line 1277  		/* DateStyle */ 
In line 1279  		/* extra_float_digits */ 
In line 1281  		/* geqo */ 
In line 1287  		/* client_encoding */ 
In line 1332  	/* Send length of Authentication Block */ 
In line 1373  		slen += (strlen(opts[i]) + 2 + 2); /* add 2 bytes for safety (literal quotes) */ 
In line 1425  #endif /* NOT_USE_LIBPQ */ 
In line 1440  #endif /* _DLL */ 
In line 1444  #endif /* _MT */ 
In line 1447  #endif /* DEBUG */ 
In line 1449  #endif /* WIN32 */ 
In line 1453  #endif /* _MSC_VER */ 
In line 1508  #endif /* WIN32 */ 
In line 1529  	if (password_req == AUTH_REQ_OK) /* not yet connected */ 
In line 1541  #endif /* NOT_USE_LIBPQ */ 
In line 1544  /* 
In line 1545   *	Callee should free hte returned pointer. 
In line 1546   */ 
In line 1573  #endif /* USE_SSPI */ 
In line 1593  #endif /* USE_SSPI */ 
In line 1597  	/* lock the connetion during authentication */ 
In line 1603  		sock = self->sock;		/* already connected, just authenticate */ 
In line 1632  #endif /* USE_SSPI */ 
In line 1649  #endif /* USE_SSPI */ 
In line 1650  				/* retry older version */ 
In line 1665  #endif /* USE_SSPI */ 
In line 1675  		/* 
In line 1676  		 * If the socket was closed for some reason (like a SQLDisconnect, 
In line 1677  		 * but no SQLFreeConnect then create a socket now. 
In line 1678  		 */ 
In line 1753  #endif /* USE_SSPI */ 
In line 1756  			sock->reverse = TRUE;		/* make put_int and get_int work 
In line 1757  										 * for 6.2 */ 
In line 1783  			/* Send length of Authentication Block */ 
In line 1807  	/* 
In line 1808  	 * Now get the authentication request from backend 
In line 1809  	 */ 
In line 1866  #endif /* USE_SSPI */ 
In line 1908  							// pglock_thread(); 
In line 1910  							// pgunlock_thread(); 
In line 1913  								/* Error message already filled in */ 
In line 1917  #endif /* USE_KRB5 */ 
In line 1927  								ret = -areq; /* need password */ 
In line 1952  								ret = -areq; /* need password */ 
In line 1980  #endif	/* USE_SSPI */ 
In line 1984  #endif /* USE_SSPI */ 
In line 1986                                  				// pglock_thread(); 
In line 1988                                  				// pgunlock_thread(); 
In line 1996  #endif /* USE_GSS */ 
In line 2013  #endif /* USE_SSPI */ 
In line 2015                                  			// pglock_thread(); 
In line 2017                                  			// pgunlock_thread(); 
In line 2049  				case 'S': /* parameter status */ 
In line 2052  				case 'K':		/* Secret key (6.4 protocol) */ 
In line 2053  					self->be_pid = SOCK_get_int(sock, 4);		/* pid */ 
In line 2054  					self->be_key = SOCK_get_int(sock, 4);		/* key */ 
In line 2057  				case 'Z':		/* Backend is ready for new query (6.4) */ 
In line 2061  				case 'N':	/* Notices may come */ 
In line 2075  			/* 
In line 2076  			 * There were no ReadyForQuery responce before 6.4. 
In line 2077  			 */ 
In line 2103  	CC_clear_error(self);		/* clear any password error */ 
In line 2105  	/* 
In line 2106  	 * send an empty query in order to find out whether the specified 
In line 2107  	 * database really exists on the server machine 
In line 2108  	 */ 
In line 2126  		/*  
In line 2127  		 * Get the version number first so we can check it before 
In line 2128  		 * sending options that are now obsolete. DJP 21/06/2002 
In line 2129  		 */ 
In line 2131  		CC_lookup_pg_version(self);	/* Get PostgreSQL version for 
In line 2132  						   SQLGetInfo use */ 
In line 2147  #endif /* NOT_USE_LIBPQ */ 
In line 2157  #endif /* USE_SSPI */ 
In line 2166  		/* 
In line 2167  		 *	If libpq is unavailable, try SSPI instead. 
In line 2168  		 */ 
In line 2174  #endif /* USE_SSPI */ 
In line 2177  #endif /* NOT_USE_LIBPQ */ 
In line 2187  #endif /* NOT_USE_LIBPQ */ 
In line 2194  	/* 
In line 2195  	 * Send any initial settings 
In line 2196  	 */ 
In line 2198  	/* 
In line 2199  	 * Since these functions allocate statements, and since the connection 
In line 2200  	 * is not established yet, it would violate odbc state transition 
In line 2201  	 * rules.  Therefore, these functions call the corresponding local 
In line 2202  	 * function instead. 
In line 2203  	 */ 
In line 2209  	CC_clear_error(self);			/* clear any error */ 
In line 2210  	CC_lookup_lo(self);			/* a hack to get the oid of 
In line 2211  						   our large object oid type */ 
In line 2213  	/* 
In line 2214  	 *	Multibyte handling is available ? 
In line 2215  	 */ 
In line 2251  #endif /* UNICODE_SUPPORT */ 
In line 2259  #endif /* UNICODE_SUPPORT */ 
In line 2262  		PG_VERSION_GE(self, 7.0)) /* Tid scan since 7.0 */ 
In line 2268  			if (PG_VERSION_GE(self, 7.4)) /* HOLDABLE CURSORS since 7.4 */ 
In line 2274  		CC_clear_error(self);		/* clear any initial command errors */ 
In line 2322  	if (i >= self->num_stmts) /* no more room -- allocate more memory */ 
In line 2333  			newstmts = NULL; /* num_stmts overflowed */ 
In line 2405  /* 
In line 2406   *	Create a more informative error message by concatenating the connection 
In line 2407   *	error message with its socket error message. 
In line 2408   */ 
In line 2473  	/* Create a very informative errormsg if it hasn't been done yet. */ 
In line 2490  	self->__error_number = 0;		/* clear the error */ 
In line 2547  			/* 
In line 2548  			 * non-holdable cursors are automatically closed 
In line 2549  			 * at commit time. 
In line 2550  			 * all non-permanent cursors are automatically closed 
In line 2551  			 * at rollback time. 
In line 2552  			 */	 
In line 2628  	if (0 != (opt & CONN_DEAD)) /* CONN_DEAD implies NO_TRANS also */ 
In line 2738  /* 
In line 2739   *	The "result_in" is only used by QR_next_tuple() to fetch another group of rows into 
In line 2740   *	the same existing QResultClass (this occurs when the tuple cache is depleted and 
In line 2741   *	needs to be re-filled). 
In line 2742   * 
In line 2743   *	The "cursor" is used by SQLExecute to associate a statement handle as the cursor name 
In line 2744   *	(i.e., C3326857) for SQL select statements.  This cursor is then used in future 
In line 2745   *	'declare cursor C3326857 for ...' and 'fetch 100 in C3326857' statements. 
In line 2746   */ 
In line 2785  	/* ERROR_MSG_LENGTH is suffcient */ 
In line 2788  	/* QR_set_command() dups this string so doesn't need static */ 
In line 2811  	/* Finish the pending extended query first */ 
In line 2821  	/* Indicate that we are sending a query to the backend */ 
In line 2845  	/* 
In line 2846  	 *	In case the round trip time can be ignored, the query 
In line 2847  	 *	and the appeneded query would be issued separately. 
In line 2848  	 *	Otherwise a multiple command query would be issued. 
In line 2849  	 */  
In line 2982  		/* what type of message is coming now ? */ 
In line 3001  			case 'A':			/* Asynchronous Messages are ignored */ 
In line 3002  				(void) SOCK_get_int(sock, 4);	/* id of notification */ 
In line 3004  				/* name of the relation the message comes from */ 
In line 3006  			case 'C':			/* portal query command, no tuples 
In line 3007  								 * returned */ 
In line 3008  				/* read in the return message from the backend */ 
In line 3020  					if (query_completed)	/* allow for "show" style notices */ 
In line 3028  					my_trim(cmdbuffer); /* get rid of trailing space */  
In line 3032  						if (discard_next_begin) /* discard the automatically issued BEGIN */ 
In line 3035  							continue; /* discard the result */ 
In line 3044  							continue; /* discard the result */ 
In line 3051  							CC_set_in_error_trans(self); /* mark the transaction error in case of manual rollback */ 
In line 3055  					/* 
In line 3056  					 *	DROP TABLE or ALTER TABLE may change 
In line 3057  					 *	the table definition. So clear the 
In line 3058  					 *	col_info cache though it may be too simple. 
In line 3059  					 */ 
In line 3098  					/* 
In line 3099  					 * (Quotation from the original comments) since 
In line 3100  					 * backend may produce more than one result for some 
In line 3101  					 * commands we need to poll until clear so we send an 
In line 3102  					 * empty query, and keep reading out of the pipe until 
In line 3103  					 * an 'I' is received 
In line 3104  					 */ 
In line 3114  			case 'Z':			/* Backend is ready for new query (6.4) */ 
In line 3125  			case 'N':			/* NOTICE: */ 
In line 3127  				break;		/* dont return a result -- continue 
In line 3128  								 * reading */ 
In line 3130  			case 'I':			/* The server sends an empty query */ 
In line 3131  				/* There is a closing '\0' following the 'I', so we eat it */ 
In line 3147  					/* We return the empty query */ 
In line 3161  				/* We should report that an error occured. Zoltan */ 
In line 3167  			case 'P':			/* get the Portal name */ 
In line 3170  			case 'T':			/* Tuple results start here */ 
In line 3215  				{				/* next fetch, so reuse an existing result */ 
In line 3217  					/* 
In line 3218  					 * called from QR_next_tuple and must return 
In line 3219  					 * immediately. 
In line 3220  					 */ 
In line 3230  			case 'G':			/* Copy in command began successfully */ 
In line 3264  					SOCK_put_char(sock, 'd'); /* CopyData */ 
In line 3272  					SOCK_put_char(sock, 'f'); /* CopyFail */ 
In line 3279  					SOCK_put_char(sock, 'c'); /* CopyDone */ 
In line 3286  			case 'H':			/* Copy out command began successfully */ 
In line 3288  			case 'c':			/* Copy out command donesuccessfully */ 
In line 3291  			case 'd':			/* CopyData comes */ 
In line 3294  			case 'f':			/* CopyFail */ 
In line 3297  			case 'D':			/* Copy in command began successfully */ 
In line 3307  			case 'B':			/* Copy out command began successfully */ 
In line 3317  			case 'S':		/* parameter status */ 
In line 3320  			case 's':		/* portal suspended 
In line 3321  						 * may not occur */ 
In line 3326  				/* skip the unexpected response if possible */ 
In line 3342  		/* 
In line 3343  		 * There was no ReadyForQuery response before 6.4. 
In line 3344  		 */ 
In line 3386  	/* 
In line 3387  	 * Break before being ready to return. 
In line 3388  	 */ 
In line 3392  	/* 
In line 3393  	 * Cleanup garbage results before returning. 
In line 3394  	 */ 
In line 3397  	/* 
In line 3398  	 * Cleanup the aborted result if specified 
In line 3399  	 */ 
In line 3404  			/** if (ignore_abort_on_conn) 
In line 3405  			{ 
In line 3406  	   			if (!used_passed_result_object) 
In line 3407  				{ 
In line 3408  					QR_Destructor(retres); 
In line 3409  					retres = NULL; 
In line 3410  				} 
In line 3411  			} **/ 
In line 3414  				/* 
In line 3415  				 *	discard results other than errors. 
In line 3416  				 */ 
In line 3426  				/* 
In line 3427  				 *	If error message isn't set 
In line 3428  				 */ 
In line 3454  	/* ERROR_MSG_LENGTH is sufficient */ 
In line 3480  	/* Finish the pending extended query first */ 
In line 3528  		SOCK_put_int(sock, 1, 2); /* # of formats */ 
In line 3529  		SOCK_put_int(sock, 1, 2); /* the format is binary */ 
In line 3550  		SOCK_put_int(sock, 1, 2); /* result format is binary */ 
In line 3557  	resultResponse = FALSE; /* for before V3 only */ 
In line 3573  				} /* fall through */ 
In line 3577  					if (beforeV3) /* FunctionResultResponse */ 
In line 3595  					SOCK_get_char(sock); /* get the last '0' */ 
In line 3601  				break;			/* ok */ 
In line 3605  				/* continue reading */ 
In line 3613  #endif /* _LEGACY_MODE_ */ 
In line 3627  			case '0':	/* empty result */ 
In line 3634  				} /* fall through */ 
In line 3637  				/* skip the unexpected response if possible */ 
In line 3671  /* 
In line 3672   *	This function must use the local odbc API functions since the odbc state 
In line 3673   *	has not transitioned to "connected" yet. 
In line 3674   */ 
In line 3681  	stmt->internal = TRUE;		/* ensure no BEGIN/COMMIT/ABORT stuff */ 
In line 3683  	/* Set the Datestyle to the format the driver expects it to be in */ 
In line 3689  	/* Disable genetic optimizer based on global flag */ 
In line 3700  	/* KSQO (not applicable to 7.1+ - DJP 21/06/2002) */ 
In line 3711  	/* extra_float_digits (applicable since 7.4) */ 
In line 3730  	/* char ini_query[MAX_MESSAGE_LEN]; */ 
In line 3733  /* QResultClass *res; */ 
In line 3742  #endif /* HAVE_STRTOK_R */ 
In line 3748  /* 
In line 3749   *	This function must use the local odbc API functions since the odbc state 
In line 3750   *	has not transitioned to "connected" yet. 
In line 3751   */ 
In line 3758  	stmt->internal = TRUE;		/* ensure no BEGIN/COMMIT/ABORT stuff */ 
In line 3760  	/* Global settings */ 
In line 3770  #endif /* HAVE_STRTOK_R */ 
In line 3783  #endif /* HAVE_STRTOK_R */ 
In line 3791  	/* Per Datasource settings */ 
In line 3801  #endif /* HAVE_STRTOK_R */ 
In line 3814  #endif /* HAVE_STRTOK_R */ 
In line 3828  /* 
In line 3829   *	This function is just a hack to get the oid of our Large Object oid type. 
In line 3830   *	If a real Large Object oid type is made part of Postgres, this function 
In line 3831   *	will go away and the define 'PG_TYPE_LO' will be updated. 
In line 3832   */ 
In line 3865  /* 
In line 3866   *	This function initializes the version of PostgreSQL from 
In line 3867   *	connInfo.protocol that we're connected to. 
In line 3868   *	h-inoue 01-2-2001 
In line 3869   */ 
In line 3901  /* 
In line 3902   *	This function gets the version of PostgreSQL that we're connected to. 
In line 3903   *	This is used to return the correct info in SQLGetInfo 
In line 3904   *	DJP - 25-1-2001 
In line 3905   */ 
In line 3918  /* 
In line 3919   *	This function must use the local odbc API functions since the odbc state 
In line 3920   *	has not transitioned to "connected" yet. 
In line 3921   */ 
In line 3926  	/* get the server's version if possible	 */ 
In line 3948  	/* 
In line 3949  	 * Extract the Major and Minor numbers from the string. This assumes 
In line 3950  	 * the string starts 'Postgresql X.X' 
In line 3951  	 */ 
In line 4010  	/* Long Queries in 7.0+ */ 
In line 4012  		value = 0 /* MAX_STATEMENT_LEN */ ; 
In line 4013  	/* Prior to 7.0 we used 2*BLCKSZ */ 
In line 4017  		/* Prior to 6.5 we used BLCKSZ */ 
In line 4022  /* 
In line 4023   *	This doesn't really return the CURRENT SCHEMA 
In line 4024   *	but there's no alternative. 
In line 4025   */ 
In line 4058  	/* Check we have an open connection */ 
In line 4068  #endif /* NOT_USE_LIBPQ */ 
In line 4069  	/* 
In line 4070  	 * We need to open a temporary connection to the postmaster. Use the 
In line 4071  	 * information saved by connectDB to do this with only kernel calls. 
In line 4072  	*/ 
In line 4084  	/* 
In line 4085  	 * We needn't set nonblocking I/O or NODELAY options here. 
In line 4086  	 */ 
In line 4110  	/* Sent it, done */ 
In line 4126  	pname[0] = (char) type;	/* 's':prepared statement 'p':cursor */ 
In line 4248  #endif /* USE_SSL */ 
In line 4282  		/* blocking mode */ 
In line 4283  		/* ioctlsocket(sock, FIONBIO , 0); 
In line 4284  		setsockopt(sock, IPPROTO_TCP, TCP_NODELAY, (char *) &on, sizeof(on)); */ 
In line 4289  		/* flags = fcntl(sock, F_GETFL); 
In line 4290  		fcntl(sock, F_SETFL, flags & (~O_NONBLOCKING));*/ 
In line 4292  #endif /* USE_SSL */ 
In line 4335  #endif /* NOT_USE_LIBPQ */ 
In line 4339  	/* 
In line 4340  	 * Returning the database name causes problems in MS Query. It 
In line 4341  	 * generates query like: "SELECT DISTINCT a FROM byronnbad3 
In line 4342  	 * bad3" 
In line 4343  	 */ 
In line 4344  	if (isMsQuery())	/* MS Query */ 
In line 4362  	/* 
In line 4363  	 *	Export the following functions so that the pgenlist dll 
In line 4364  	 *	can handle ConnectionClass objects as opaque ones. 
In line 4365  	 */ 
In line 4481  		/* Error messages are filled in */ 
In line 4584  #endif /* CLEANUP_CONN_BEFORE_ISOLATION */ 
In line 4590  #endif /* CLEANUP_CONN_BEFORE_ISOLATION */ 
In line 4596  #endif /* CLEANUP_CONN_BEFORE_ISOLATION */ 
In line 4604  #endif /* CLEANUP_CONN_BEFORE_ISOLATION */ 
In line 4622  #endif /* ODBCVER */ 
In line 4623  #endif /* CLEANUP_CONN_BEFORE_ISOLATION */ 
In line 4652  	// newconn->ardOptions = sconn->ardOptions; 
In line 4653  	// newconn->apdOptions = sconn->apdOptions; 
In line 4656  	/* Cursors are no longer available */  
In line 4703  #endif /* USE_SSPI */ 
In line 4704  #endif /* CLEANUP_CONN_BEFORE_ISOLATION */ 
In line 4709  #endif /* _HANDLE_ENLIST_IN_DTC_ */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\convert.c  for analysis => 
In line 0  /*------- 
In line 1   * Module:				 convert.c 
In line 2   * 
In line 3   * Description:    This module contains routines related to 
In line 4   *				   converting parameters and columns into requested data types. 
In line 5   *				   Parameters are converted from their SQL_C data types into 
In line 6   *				   the appropriate postgres type.  Columns are converted from 
In line 7   *				   their postgres type (SQL type) into the appropriate SQL_C 
In line 8   *				   data type. 
In line 9   * 
In line 10   * Classes:		   n/a 
In line 11   * 
In line 12   * API functions:  none 
In line 13   * 
In line 14   * Comments:	   See "readme.txt" for copyright and license information. 
In line 15   *------- 
In line 16   */ 
In line 17  /* Multibyte support  Eiji Tokuya	2001-03-15	*/ 
In line 24  #endif /* WIN32 */ 
In line 61  /* 
In line 62   *	How to map ODBC scalar functions {fn func(args)} to Postgres. 
In line 63   *	This is just a simple substitution.  List augmented from: 
In line 64   *	http://www.merant.com/datadirect/download/docs/odbc16/Odbcref/rappc.htm 
In line 65   *	- thomas 2000-04-03 
In line 66   */ 
In line 64   *	http://www.merant.com/datadirect/download/docs/odbc16/Odbcref/rappc.htm 
In line 68  /*	{ "ASCII",		 "ascii"	  }, built_in */ 
In line 71  /*	{ "DIFFERENCE", "difference" }, how to ? */ 
In line 75  	{"%2LOCATE", "strpos($2,  $1)" },	/* 2 parameters */ 
In line 76  	{"%3LOCATE", "strpos(substring($2 from $3), $1) + $3 - 1" },	/* 3 parameters */ 
In line 78  /*	{ "LTRIM",		 "ltrim"	  }, built_in */ 
In line 81  /*	{ "REPEAT",		 "repeat"	  }, built_in */ 
In line 82  /*	{ "REPLACE", "replace" }, ??? */ 
In line 83  /*	{ "RTRIM",		 "rtrim"	  }, built_in */ 
In line 84  /*	{ "SOUNDEX", "soundex" }, how to ? */ 
In line 88  /*	{ "ABS",		 "abs"		  }, built_in */ 
In line 89  /*	{ "ACOS",		 "acos"		  }, built_in */ 
In line 90  /*	{ "ASIN",		 "asin"		  }, built_in */ 
In line 91  /*	{ "ATAN",		 "atan"		  }, built_in */ 
In line 92  /*	{ "ATAN2",		 "atan2"	  }, bui;t_in */ 
In line 94  /*	{ "COS",		 "cos" 		  }, built_in */ 
In line 95  /*	{ "COT",		 "cot" 		  }, built_in */ 
In line 96  /*	{ "DEGREES",		 "degrees" 	  }, built_in */ 
In line 97  /*	{ "EXP",		 "exp" 		  }, built_in */ 
In line 98  /*	{ "FLOOR",		 "floor" 	  }, built_in */ 
In line 101  /*	{ "MOD",		 "mod" 		  }, built_in */ 
In line 102  /*	{ "PI",			 "pi" 		  }, built_in */ 
In line 104  /*	{ "RADIANS",		 "radians"	  }, built_in */ 
In line 105  	{"%0RAND", "random()" },	/* 0 parameters */ 
In line 106  	{"%1RAND", "(setseed($1) * .0 + random())" },	/* 1 parameters */ 
In line 107  /*	{ "ROUND",		 "round"	  }, built_in */ 
In line 108  /*	{ "SIGN",		 "sign"		  }, built_in */ 
In line 109  /*	{ "SIN",		 "sin"		  }, built_in */ 
In line 110  /*	{ "SQRT",		 "sqrt"		  }, built_in */ 
In line 111  /*	{ "TAN",		 "tan"		  }, built_in */ 
In line 131  /*	{ "NOW",		 "now"		  }, built_in */ 
In line 137  /*	{ "DATABASE",	 "database"   }, */ 
In line 148  #endif /* UNICODE_SUPPORT */ 
In line 150  /*--------- 
In line 151   *			A Guide for date/time/timestamp conversions 
In line 152   * 
In line 153   *			field_type		fCType				Output 
In line 154   *			----------		------				---------- 
In line 155   *			PG_TYPE_DATE	SQL_C_DEFAULT		SQL_C_DATE 
In line 156   *			PG_TYPE_DATE	SQL_C_DATE			SQL_C_DATE 
In line 157   *			PG_TYPE_DATE	SQL_C_TIMESTAMP		SQL_C_TIMESTAMP		(time = 0 (midnight)) 
In line 158   *			PG_TYPE_TIME	SQL_C_DEFAULT		SQL_C_TIME 
In line 159   *			PG_TYPE_TIME	SQL_C_TIME			SQL_C_TIME 
In line 160   *			PG_TYPE_TIME	SQL_C_TIMESTAMP		SQL_C_TIMESTAMP		(date = current date) 
In line 161   *			PG_TYPE_ABSTIME SQL_C_DEFAULT		SQL_C_TIMESTAMP 
In line 162   *			PG_TYPE_ABSTIME SQL_C_DATE			SQL_C_DATE			(time is truncated) 
In line 163   *			PG_TYPE_ABSTIME SQL_C_TIME			SQL_C_TIME			(date is truncated) 
In line 164   *			PG_TYPE_ABSTIME SQL_C_TIMESTAMP		SQL_C_TIMESTAMP 
In line 165   *--------- 
In line 166   */ 
In line 169  /* 
In line 170   *	Macros for unsigned long handling. 
In line 171   */ 
In line 176  #else /* HAVE_STRTOUL */ 
In line 178  #endif /* WIN32 */ 
In line 180  /* 
In line 181   *	Macros for BIGINT handling. 
In line 182   */ 
In line 213  #endif /* HAVE_STRTOLL */ 
In line 214  #endif /* WIN32 */ 
In line 215  #endif /* ODBCINT64 */ 
In line 217  /* 
In line 218   *	TIMESTAMP <-----> SIMPLE_TIME 
In line 219   *		precision support since 7.2. 
In line 220   *		time zone support is unavailable(the stuff is unreliable) 
In line 221   */ 
In line 297  	if (!daylight && timediff == 0)		/* the same timezone */ 
In line 318  		if (timediff == 0)		/* the same time zone */ 
In line 325  #endif /* HAVE_LOCALTIME_R */ 
In line 336  #endif /* TIMEZONE_GLOBAL */ 
In line 399  #endif /* TIMEZONE_GLOBAL */ 
In line 458  /* 
In line 459   *	Interval data <-----> SQL_INTERVAL_STRUCT 
In line 460   */ 
In line 469  		precision = 6; /* default */ 
In line 566  		/* these formats should've been handled above already */ 
In line 605  #endif /* ODBCVER */ 
In line 663  #endif /* HAVE_LOCALE_H */ 
In line 665  /*	This is called by SQLFetch() */ 
In line 693  #endif /* NAN */ 
In line 699  #endif /* INFINITY */ 
In line 705  #endif /* INFINITY */ 
In line 712  	/* 
In line 713  	 * SQLGUID.Data1 is an "unsigned long" on some platforms, and 
In line 714  	 * "unsigned int" on others. For format "%08X", it should be an 
In line 715  	 * "unsigned int", so use a temporary variable for it. 
In line 716  	 */ 
In line 728  #endif /* ODBCVER */ 
In line 730  /*	This is called by SQLGetData() */ 
In line 750  #endif /* HAVE_LOCALTIME_R */ 
In line 768  #endif /* UNICODE_SUPPORT */ 
In line 772  #endif /* WIN_UNICODE_SUPPORT */ 
In line 787  			pgdc->data_left = (cbValueMax > 0) ? 0 : -1; /* This seems to be * 
In line 788  						 * needed by ADO ? */ 
In line 797  			pgdc->data_left = -2;		/* needed by ADO ? */ 
In line 801  	/*--------- 
In line 802  	 *	rgbValueOffset is *ONLY* for character and binary data. 
In line 803  	 *	pcbValueOffset is for computing any pcbValue location 
In line 804  	 *--------- 
In line 805  	 */ 
In line 814  	/* 
In line 815  	 *	The following is applicable in case bind_size > 0 
In line 816  	 *	or the fCType is of variable length.  
In line 817  	 */ 
In line 830  	/* Initialize current date */ 
In line 835  #endif /* HAVE_LOCALTIME_R */ 
In line 845  		/* a speicial handling for FOXPRO NULL -> NULL_STRING */ 
In line 853  #endif	/* UNICODE_SUPPORT */ 
In line 857  #endif /* ODBCVER */ 
In line 873  #endif /* ODBCVER */ 
In line 891  #endif /* UNICODE_SUPPORT */ 
In line 895  		/* 
In line 896  		 * handle a null just by returning SQL_NULL_DATA in pcbValue, and 
In line 897  		 * doing nothing to the buffer. 
In line 898  		 */ 
In line 921  	/* 
In line 922  	 * First convert any specific postgres types into more useable data. 
In line 923  	 * 
In line 924  	 * NOTE: Conversions from PG char/varchar of a date/time/timestamp value 
In line 925  	 * to SQL_C_DATE,SQL_C_TIME, SQL_C_TIMESTAMP not supported 
In line 926  	 */ 
In line 929  			/* 
In line 930  			 * $$$ need to add parsing for date/time/timestamp strings in 
In line 931  			 * PG_TYPE_CHAR,VARCHAR $$$ 
In line 932  			 */ 
In line 962  				// std_time.y = -4713; 
In line 973  				/* 
In line 974  				 * sscanf(value, "%4d-%2d-%2d %2d:%2d:%2d", &std_time.y, &std_time.m, 
In line 975  				 * &std_time.d, &std_time.hh, &std_time.mm, &std_time.ss); 
In line 976  				 */ 
In line 977  				bZone = FALSE;	/* time zone stuff is unreliable */ 
In line 983  				/* 
In line 984  				 * The timestamp is invalid so set something conspicuous, 
In line 985  				 * like the epoch 
In line 986  				 */ 
In line 992  #endif /* HAVE_LOCALTIME_R */ 
In line 1003  			{					/* change T/F to 1/0 */ 
In line 1028  			/* This is for internal use by SQLStatistics() */ 
In line 1034  				/* this is an array of eight integers */ 
In line 1054  					/* skip the current token */ 
In line 1057  					/* and skip the space to the next token */ 
In line 1067  				/* There is no corresponding fCType for this. */ 
In line 1073  					return COPY_OK; /* dont go any further or the data will be 
In line 1074  								 * trashed */ 
In line 1080  			/* 
In line 1081  			 * This is a large object OID, which is used to store 
In line 1082  			 * LONGVARBINARY objects. 
In line 1083  			 */ 
In line 1093  			if (field_type == stmt->hdbc->lobj_type	/* hack until permanent type available */ 
In line 1099  	/* Change default into something useable */ 
In line 1116  #endif /* UNICODE_SUPPORT */ 
In line 1143  #endif /* WIN_UNICODE_SUPPORT */ 
In line 1148  		/* Special character formatting as required */ 
In line 1151  		/* 
In line 1152  		 * These really should return error if cbValueMax is not big 
In line 1153  		 * enough. 
In line 1154  		 */ 
In line 1176  					/* sprintf(rgbValueBindRow, "%.4d-%.2d-%.2d %.2d:%.2d:%.2d", 
In line 1177  						std_time.y, std_time.m, std_time.d, std_time.hh, std_time.mm, std_time.ss); */ 
In line 1206  				/* 
In line 1207  				 * Currently, data is SILENTLY TRUNCATED for BYTEA and 
In line 1208  				 * character data types if there is not enough room in 
In line 1209  				 * cbValueMax because the driver can't handle multiple 
In line 1210  				 * calls to SQLGetData for these, yet.	Most likely, the 
In line 1211  				 * buffer passed in will be big enough to handle the 
In line 1212  				 * maximum limit of postgres, anyway. 
In line 1213  				 * 
In line 1214  				 * LongVarBinary types are handled correctly above, observing 
In line 1215  				 * truncation and all that stuff since there is 
In line 1216  				 * essentially no limit on the large object used to store 
In line 1217  				 * those. 
In line 1218  				 */ 
In line 1219  			case PG_TYPE_BYTEA:/* convert binary data to hex strings 
In line 1220  								 * (i.e, 255 = "FF") */ 
In line 1249  #endif /* UNICODE_SUPPORT */ 
In line 1266  #endif /* UNICODE_SUPPORT */ 
In line 1277  #endif /* UNICODE_SUPPORT */ 
In line 1288  #endif /* WIN_UNICODE_SUPPORT */ 
In line 1289  						/* convert linefeeds to carriage-return/linefeed */ 
In line 1291  					if (cbValueMax == 0)		/* just returns length 
In line 1292  												 * info */ 
In line 1298  #endif /* WIN_UNICODE_SUPPORT */ 
In line 1310  #endif /* UNICODE_SUPPORT */ 
In line 1335  #endif /* UNICODE_SUPPORT */ 
In line 1358  #endif /* WIN_UNICODE_SUPPORT */ 
In line 1407  #endif /* UNICODE_SUPPORT */ 
In line 1410  						/* Copy the data */ 
In line 1412  						/* Add null terminator */ 
In line 1420  #endif /* UNICODE_SUPPORT */ 
In line 1424  					/* Adjust data_left for next time */ 
In line 1429  				/* 
In line 1430  				 * Finally, check for truncation so that proper status can 
In line 1431  				 * be returned 
In line 1432  				 */ 
In line 1463  #endif /* UNICODE_SUPPORT */ 
In line 1468  		/* 
In line 1469  		 * for SQL_C_CHAR, it's probably ok to leave currency symbols in. 
In line 1470  		 * But to convert to numeric types, it is necessary to get rid of 
In line 1471  		 * those. 
In line 1472  		 */ 
In line 1491  			case SQL_C_TYPE_DATE:		/* 91 */ 
In line 1509  			case SQL_C_TYPE_TIME:		/* 92 */ 
In line 1527  			case SQL_C_TYPE_TIMESTAMP:	/* 93 */ 
In line 1554  				/* 
In line 1555  				 * mylog("SQL_C_BIT: bind_row = %d val = %d, cb = %d, 
In line 1556  				 * rgb=%d\n", bind_row, atoi(neut_str), cbValueMax, 
In line 1557  				 * *((UCHAR *)rgbValue)); 
In line 1558  				 */ 
In line 1671  #endif /* ODBCVER */ 
In line 1724  #endif /* ODBCINT64 */ 
In line 1751  				/* The following is for SQL_C_VARBOOKMARK */ 
In line 1784  #endif /* ODBCVER */ 
In line 1791  				/* truncate if necessary */ 
In line 1792  				/* convert octal escapes to bytes */ 
In line 1825  					/* 
In line 1826  					 * Second (or more) call to SQLGetData so move the 
In line 1827  					 * pointer 
In line 1828  					 */ 
In line 1835  					/* First call to SQLGetData so initialize data_left */ 
In line 1845  					/* Copy the data */ 
In line 1848  					/* Adjust data_left for next time */ 
In line 1853  				/* 
In line 1854  				 * Finally, check for truncation so that proper status can 
In line 1855  				 * be returned 
In line 1856  				 */ 
In line 1881  #endif /* ODBCVER */ 
In line 1897  #endif /* ODBCVER */ 
In line 1905  	/* store the length of what was copied, if there's a place for it */ 
In line 1916  /*-------------------------------------------------------------------- 
In line 1917   *	Functions/Macros to get rid of query size limit. 
In line 1918   * 
In line 1919   *	I always used the follwoing macros to convert from 
In line 1920   *	old_statement to new_statement.  Please improve it 
In line 1921   *	if you have a better way.	Hiroshi 2001/05/22 
In line 1922   *-------------------------------------------------------------------- 
In line 1923   */ 
In line 1936  	Int4		from_pos;	/* PG comm length restriction */ 
In line 1937  	Int4		where_pos;	/* PG comm length restriction */ 
In line 2008  	ConnectionClass	*conn; /* mainly needed for LO handling */ 
In line 2009  	StatementClass	*stmt; /* needed to set error info in ENLARGE_.. */  
In line 2142  /* 
In line 2143   * New macros (Aceto) 
In line 2144   *-------------------- 
In line 2145   */ 
In line 2244  /*---------- 
In line 2245   *	Enlarge stmt_with_params if necessary. 
In line 2246   *---------- 
In line 2247   */ 
In line 2255  /*---------- 
In line 2256   *	Terminate the stmt_with_params string with NULL. 
In line 2257   *---------- 
In line 2258   */ 
In line 2265  /*---------- 
In line 2266   *	Append a data. 
In line 2267   *---------- 
In line 2268   */ 
In line 2278  /*---------- 
In line 2279   *	Append a string. 
In line 2280   *---------- 
In line 2281   */ 
In line 2288  /*---------- 
In line 2289   *	Append a char. 
In line 2290   *---------- 
In line 2291   */ 
In line 2298  /*---------- 
In line 2299   *	Append a binary data. 
In line 2300   *	Newly required size may be overestimated currently. 
In line 2301   *---------- 
In line 2302   */ 
In line 2310  /*---------- 
In line 2311   * 
In line 2312   *---------- 
In line 2313   */ 
In line 2340  #endif /* NOT_USED */ 
In line 2418  /*---------- 
In line 2419   *	Check if the statement is 
In line 2420   *	SELECT ... INTO table FROM ..... 
In line 2421   *	This isn't really a strict check but ... 
In line 2422   *---------- 
In line 2423   */ 
In line 2439  		case IDENTIFIER_QUOTE:	/* double quoted table name ? */ 
In line 2462  /*---------- 
In line 2463   *	Check if the statement is 
In line 2464   *	SELECT ... FOR UPDATE ..... 
In line 2465   *	This isn't really a strict check but ... 
In line 2466   *---------- 
In line 2467   */ 
In line 2506  /*---------- 
In line 2507   *	Check if the statement has OUTER JOIN 
In line 2508   *	This isn't really a strict check but ... 
In line 2509   *---------- 
In line 2510   */ 
In line 2563  /*---------- 
In line 2564   *	Check if the statement is 
In line 2565   *	INSERT INTO ... () VALUES () 
In line 2566   *	This isn't really a strict check but ... 
In line 2567   *---------- 
In line 2568   */ 
In line 2619  	if (NOT_YET_PREPARED == stmt->prepared) /*  not yet prepared */ 
In line 2633  #endif /* NOT_USED */ 
In line 2676  		/* build the execute statement */ 
In line 2706  	/* make sure new_statement is always null-terminated */ 
In line 2870  /* 
In line 2871   *	This function inserts parameters into an SQL statements. 
In line 2872   *	It will also modify a SELECT statement for use with declare/fetch cursors. 
In line 2873   *	This function does a dynamic memory allocation to get rid of query size limit! 
In line 2874   */ 
In line 2956  	/* If the application hasn't set a cursor name, then generate one */ 
In line 3001  	/* For selects, prepend a declare cursor to the statement */ 
In line 3018  			 /** && SQL_CONCUR_READ_ONLY == stmt->options.scroll_concurrency **/ 
In line 3056  	/* make sure new_statement is always null-terminated */ 
In line 3064  #ifdef NOT_USED	/* this seems problematic */ 
In line 3086  #endif /* NOT_USED */   
In line 3125  				/* ---------- 
In line 3126  				 * 1st query is for field information 
In line 3127  				 * 2nd query is keyset gathering 
In line 3128  				 */ 
In line 3212  		if (sptr == str) /* the first character */ 
In line 3333  	/* 
In line 3334  	 * From here we are guaranteed to handle a 1-byte character. 
In line 3335  	 */ 
In line 3336  	if (qp->in_escape)			/* escape check */ 
In line 3342  	else if (qp->in_dollar_quote) /* dollar quote check */ 
In line 3360  	else if (qp->in_literal) /* quote check */ 
In line 3369  	else if (qp->in_identifier) /* double quote check */ 
In line 3376  	else if (qp->comment_level > 0) /* comment_level check */ 
In line 3397  	else if (qp->in_line_comment) /* line comment check */ 
In line 3405  	/* 
In line 3406  	 * From here we are guranteed to be in neither a literal_escape, 
In line 3407  	 * a literal_quote nor an idetifier_quote. 
In line 3408  	 */ 
In line 3409  	/* Squeeze carriage-return/linefeed pairs to linefeed only */ 
In line 3416  	/* 
In line 3417  	 * Handle literals (date, time, timestamp) and ODBC scalar 
In line 3418  	 * functions 
In line 3419  	 */ 
In line 3434  	/* End of an escape sequence */ 
In line 3446  #ifdef	NOT_USED  /* lastval() isn't always appropriate */  
In line 3453  #endif /* NOT_USED */ 
In line 3487  	/* 
In line 3488  	 * Can you have parameter markers inside of quotes?  I dont think 
In line 3489  	 * so. All the queries I've seen expect the driver to put quotes 
In line 3490  	 * if needed. 
In line 3491  	 */ 
In line 3537  			/* 
In line 3538  			 * can't parse multiple statement using protocol V3. 
In line 3539  			 * reset the dollar number here in case it is divided 
In line 3540  			 * to parse. 
In line 3541  			 */ 
In line 3549  				if (*vp)	/* multiple statement */ 
In line 3637  	/* 
In line 3638  	 * Its a '?' parameter alright 
In line 3639  	 */ 
In line 3643  	if (SQL_SUCCESS_WITH_INFO == retval) /* means discarding output parameter */ 
In line 3679  	/* 
In line 3680  	 * Calculate minimum length of the packet. This doesn't take any of 
In line 3681  	 * the actual parameter values into account, but it's enough to make 
In line 3682  	 * sure there's enough space for all the fields before the parameter 
In line 3683  	 * values, without enlarging. 
In line 3684  	 */ 
In line 3686  	netleng = sizeof(netleng)	/* length fields */ 
In line 3687  		  + 2 * (plen + 1)	/* portal and plan name */ 
In line 3688  		  + sizeof(Int2)	/* number of param format codes */ 
In line 3689  		  + sizeof(Int2) * num_params /* parameter types (max) */ 
In line 3690  		  + sizeof(Int2)	/* result format */ 
In line 3700          memcpy(bindreq + leng, plan_name, plen + 1); /* portal name */ 
In line 3702          memcpy(bindreq + leng, plan_name, plen + 1); /* prepared plan name */ 
In line 3708          netnum_p = htons(num_p);	/* Network byte order */ 
In line 3715  		/* number of parameter formats */ 
In line 3719  		/* initialize to text format */ 
In line 3730  				/* use binary format for this param */ 
In line 3740          	memset(bindreq + leng, 0, sizeof(Int2));  /* text format */ 
In line 3744  	/* number of params */ 
In line 3748  	/* 
In line 3749  	 * Now add the parameter values. 
In line 3750  	 * 
In line 3751  	 * Note: when you append more data to the packet after this, you must 
In line 3752  	 * check that there's enough space left! 
In line 3753  	 */ 
In line 3767  	/* result format is text */ 
In line 3779          /* now that we know the final length of the packet, fill that in */ 
In line 3781          netleng = htonl((UInt4) leng);	/* Network byte order */ 
In line 3794          SOCK_put_char(conn->sock, 'B'); /* Bind Message */ 
In line 3836  			ival += (val[i] << (8 * i)); /* ns->val is little endian */ 
In line 3946  #endif /* ODBCVER */ 
In line 3948  /* 
In line 3949   * 
In line 3950   */ 
In line 3963  			cbuf[PG_NUMERIC_MAX_PRECISION * 2]; /* seems big enough to handle the data in this function */ 
In line 3971  #endif /* HAVE_LOCALTIME_R */ 
In line 3988  #endif /* ODBCVER */ 
In line 3996  	/* 
In line 3997  	 * Its a '?' parameter alright 
In line 3998  	 */ 
In line 4013  		CVT_TERMINATE(qb);	/* just in case */ 
In line 4039  			CVT_TERMINATE(qb);	/* just in case */ 
In line 4051  			CVT_TERMINATE(qb);	/* just in case */ 
In line 4091  #ifdef	NOT_USED /* !! named parameter is unavailable !! */ 
In line 4099  #endif /* NOT_USED */ 
In line 4106  	/* Assign correct buffers based on data at exec param or not */ 
In line 4157  	/* Handle DEFAULT_PARAM parameter data. Should be NULL ? 
In line 4158  	if (used == SQL_DEFAULT_PARAM) 
In line 4159  	{ 
In line 4160  		return SQL_SUCCESS; 
In line 4161  	} */ 
In line 4168  	/* Handle NULL parameter data */ 
In line 4183  	/* 
In line 4184  	 * If no buffer, and it's not null, then what the hell is it? Just 
In line 4185  	 * leave it alone then. 
In line 4186  	 */ 
In line 4209  	/* replace DEFAULT with something we can use */ 
In line 4227  #endif /* HAVE_LOCALTIME_R */ 
In line 4234  #endif /* ODBCVER */ 
In line 4235  	/* Convert input C type to a neutral format */ 
In line 4252  #endif /* WIN_UNICODE_SUPPORT */ 
In line 4259  			/* used *= WCLEN; */ 
In line 4261  #endif /* UNICODE_SUPPORT */ 
In line 4267  #endif /* WIN32 */ 
In line 4279  #endif /* WIN32 */ 
In line 4286  #endif /* WIN32 */ 
In line 4298  #endif /* WIN32 */ 
In line 4309  		case SQL_BIGINT: /* Is this needed ? */ 
In line 4319  #endif /* ODBCINT64 */ 
In line 4357  		case SQL_C_TYPE_DATE:		/* 91 */ 
In line 4371  		case SQL_C_TYPE_TIME:		/* 92 */ 
In line 4385  		case SQL_C_TYPE_TIMESTAMP:	/* 93 */ 
In line 4469  			/* error */ 
In line 4472  			CVT_TERMINATE(qb);	/* just in case */ 
In line 4477  	/* 
In line 4478  	 * Now that the input data is in a neutral format, convert it to 
In line 4479  	 * the desired output format (sqltype) 
In line 4480  	 */ 
In line 4482  	/* Special handling NULL string For FOXPRO */ 
In line 4493  #endif /* UNICODE_SUPPORT */ 
In line 4523  #endif /* UNICODE_SUPPORT */ 
In line 4544  #endif /* UNICODE_SUPPORT */ 
In line 4549  					/* consider True is -1 case */ 
In line 4569  			/* it was a SQL_C_CHAR */ 
In line 4572  			/* it was a numeric type */ 
In line 4576  			/* it was date,time,timestamp -- use m,d,y,hh,mm,ss */ 
In line 4588  		case SQL_TYPE_DATE:	/* 91 */ 
In line 4591  			{				/* copy char data to time */ 
In line 4606  		case SQL_TYPE_TIME:	/* 92 */ 
In line 4609  			{				/* copy char data to time */ 
In line 4621  		case SQL_TYPE_TIMESTAMP:	/* 93 */ 
In line 4630  			/* 
In line 4631  			 * sprintf(tmp, "%.4d-%.2d-%.2d %.2d:%.2d:%.2d", st.y, 
In line 4632  			 * st.m, st.d, st.hh, st.mm, st.ss); 
In line 4633  			 */ 
In line 4634  			/* Time zone stuff is unreliable */ 
In line 4651  #endif /* UNICODE_SUPPORT */ 
In line 4681  					/* non-ascii characters should be 
In line 4682  				 	 * converted to octal 
In line 4683  				 	 */ 
In line 4706  				/* begin transaction if needed */ 
In line 4718  				/* store the oid */ 
In line 4728  				/* store the fd */ 
In line 4742  				/* commit transaction if needed */ 
In line 4755  			/* 
In line 4756  			 * the oid of the large object -- just put that in for the 
In line 4757  			 * parameter marker -- the data has already been sent to 
In line 4758  			 * the large object 
In line 4759  			 */ 
In line 4766  			/* 
In line 4767  			 * because of no conversion operator for bool and int4, 
In line 4768  			 * SQL_BIT 
In line 4769  			 */ 
In line 4770  			/* must be quoted (0 or 1 is ok to use inside the quotes) */ 
In line 4796  		default:			/* a numeric type or SQL_BIT */ 
In line 4856  /* 
In line 4857   * processParameters() 
In line 4858   * Process function parameters and work with embedded escapes sequences. 
In line 4859   */ 
In line 4868  	/* begin with outer '(' */ 
In line 4922  		if (stop) /* returns with the last } position */ 
In line 4932  	else if (1 == param_count) /* the 1 parameter is really valid ? */ 
In line 4954  /* 
In line 4955   * convert_escape() 
In line 4956   * This function doesn't return a pointer to static memory any longer ! 
In line 4957   */ 
In line 4971  	if (F_OldChar(qp) == ODBC_ESCAPE_START) /* skip the first { */ 
In line 4973  	/* Separate off the key, skipping leading and trailing whitespace */ 
In line 4976  	/* 
In line 4977  	 * procedure calls 
In line 4978  	 */ 
In line 4979  	/* '?=' to accept return values exists ? */ 
In line 4994  	/** 
In line 4995  	if (qp->statement_type == STMT_TYPE_PROCCALL) 
In line 4996  	{ 
In line 4997  		int	lit_call_len = 4; 
In line 4998   
In line 4999  		// '?=' to accept return values exists ? 
In line 5000  		if (F_OldChar(qp) == '?') 
In line 5001  		{ 
In line 5002  			qb->param_number++; 
In line 5003  			qb->proc_return = 1; 
In line 5004  			if (qb->stmt) 
In line 5005  				qb->stmt->proc_return = 1; 
In line 5006  			while (isspace((UCHAR) qp->statement[++qp->opos])); 
In line 5007  			if (F_OldChar(qp) != '=') 
In line 5008  			{ 
In line 5009  				F_OldPrior(qp); 
In line 5010  				return SQL_SUCCESS; 
In line 5011  			} 
In line 5012  			while (isspace((UCHAR) qp->statement[++qp->opos])); 
In line 5013  		} 
In line 5014  		if (strnicmp(F_OldPtr(qp), "call", lit_call_len) || 
In line 5015  			!isspace((UCHAR) F_OldPtr(qp)[lit_call_len])) 
In line 5016  		{ 
In line 5017  			F_OldPrior(qp); 
In line 5018  			return SQL_SUCCESS; 
In line 5019  		} 
In line 5020  		qp->opos += lit_call_len; 
In line 5021  		if (qb->num_io_params > 1 || 
In line 5022  		    (0 == qb->proc_return && 
In line 5023  		     PG_VERSION_GE(conn, 7.3))) 
In line 5024  			CVT_APPEND_STR(qb, "SELECT * FROM"); 
In line 5025  		else 
In line 5026  			CVT_APPEND_STR(qb, "SELECT"); 
In line 5027  		if (my_strchr(conn, F_OldPtr(qp), '(')) 
In line 5028  			qp->proc_no_param = FALSE; 
In line 5029  		return SQL_SUCCESS; 
In line 5030  	} 
In line 5031  	**/ 
In line 4999  		// '?=' to accept return values exists ? 
In line 5039  	/* Avoid the concatenation of the function name with the previous word. Aceto */ 
In line 5068  			/* positioned at } */ 
In line 5073  			/* Continue at inner_process_tokens loop */ 
In line 5080  		/* Literal; return the escape part adding type cast */ 
In line 5091  		/* Literal; return the escape part adding type cast */ 
In line 5099  		/* Literal; return the escape part adding type cast */ 
In line 5108  	else if (stricmp(key, "oj") == 0) /* {oj syntax support for 7.1 * servers */ 
In line 5113  		/* Continue at inner_process_tokens loop */ 
In line 5117  	else if (stricmp(key, "escape") == 0) /* like escape syntax support for 7.1+ servers */ 
In line 5119  		/* Literal; return the escape part adding type cast */ 
In line 5134  		/* Separate off the func name, skipping leading and trailing whitespace */ 
In line 5147  		/* 
In line 5148   		 * We expect left parenthesis here, else return fn body as-is 
In line 5149  		 * since it is one of those "function constants". 
In line 5150  		 */ 
In line 5157  		/* 
In line 5158  		 * Process parameter list and inner escape 
In line 5159  		 * sequences 
In line 5160  		 * Aceto 2002-01-29 
In line 5161  		 */ 
In line 5314  		/* Bogus key, leave untranslated */ 
In line 5333  			;					/* skip these characters */ 
In line 5337  				return FALSE;	/* sout is too short */ 
In line 5349  /* 
In line 5350   *	This function parses a character string for date/time info and fills in SIMPLE_TIME 
In line 5351   *	It does not zero out SIMPLE_TIME in case it is desired to initialize it with a value 
In line 5352   */ 
In line 5368  	/* escape sequence ? */ 
In line 5376  	if (buf[4] == '-')			/* year first */ 
In line 5393  	if (buf[4] == '-')			/* year first */ 
In line 5421  /*	Change linefeed to carriage-return/linefeed */ 
In line 5435  			/* Only add the carriage-return if needed */ 
In line 5468  /* 
In line 5469   *	Change carriage-return/linefeed to just linefeed 
In line 5470   *	Plus, escape any special characters. 
In line 5471   */ 
In line 5504  		if (convlf &&	/* CR/LF -> LF */ 
In line 5508  		else if (double_special && /* double special chars ? */ 
In line 5571  		if (convlf &&	/* CR/LF -> LF */ 
In line 5578  		else if (double_literal_quote && /* double literal quote ? */ 
In line 5586  		else if (double_escape_in_literal && /* double escape ? */ 
In line 5602  #endif /* NOT_USED */ 
In line 5605  /*	!!! Need to implement this function !!!  */ 
In line 5629  /*	convert octal escapes to bytes */ 
In line 5675  		/** if (rgbValue) 
In line 5676  			mylog("convert_from_pgbinary: i=%d, rgbValue[%d] = %d, %c\n", i, o, rgbValue[o], rgbValue[o]); ***/ 
In line 5680  		rgbValue[o] = '\0';		/* extra protection */ 
In line 5727  /*	convert non-ascii bytes to octal escape sequences */ 
In line 5737  	/* use hex format for 9.0 or later servers */ 
In line 5816  #endif /* UNICODE_SUPPORT */ 
In line 5855  /*------- 
In line 5856   *	1. get oid (from 'value') 
In line 5857   *	2. open the large object 
In line 5858   *	3. read from the large object (handle multiple GetData) 
In line 5859   *	4. close when read less than requested?  -OR- 
In line 5860   *		lseek/read each time 
In line 5861   *		handle case where application receives truncated and 
In line 5862   *		decides not to continue reading. 
In line 5863   * 
In line 5864   *	CURRENTLY, ONLY LONGVARBINARY is handled, since that is the only 
In line 5865   *	data type currently mapped to a PG_TYPE_LO.  But, if any other types 
In line 5866   *	are desired to map to a large object (PG_TYPE_LO), then that would 
In line 5867   *	need to be handled here.  For example, LONGVARCHAR could possibly be 
In line 5868   *	mapped to PG_TYPE_LO someday, instead of PG_TYPE_TEXT as it is now. 
In line 5869   *------- 
In line 5870   */ 
In line 5905  	/* If using SQLGetData, then current_col will be set */ 
In line 5912  	/* 
In line 5913  	 * if this is the first call for this column, open the large object 
In line 5914  	 * for reading 
In line 5915  	 */ 
In line 5919  		/* begin transaction if needed */ 
In line 5936  		/* Get the size */ 
In line 5944  			/* return to beginning */ 
In line 5966  		/* commit transaction if needed */ 
In line 5999  		/* commit transaction if needed */ 
In line 6009  		stmt->lobj_fd = -1;		/* prevent further reading */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\descriptor.c  for analysis => 
In line 0  /*------- 
In line 1   * Module:			descriptor.c 
In line 2   * 
In line 3   * Description:		This module contains functions related to creating 
In line 4   *					and manipulating a statement. 
In line 5   * 
In line 6   * Classes:			DescriptorClass (Functions prefix: "DC_") 
In line 7   * 
In line 8   * 
In line 9   * Comments:		See "readme.txt" for copyright and license information. 
In line 10   *------- 
In line 11   */ 
In line 57  					if (coli->refcnt <= 0 && 0 == coli->acc_time) /* acc_time == 0 means the table is dropped */ 
In line 123  	/* 
In line 124  	 * the memory pointed to by the bindings is not deallocated by the 
In line 125  	 * driver but by the application that uses that driver, so we don't 
In line 126  	 * have to care 
In line 127  	 */ 
In line 138  	/* param bindings */ 
In line 144  	/* Free the parsed field information */ 
In line 156  	/* param bindings */ 
In line 221  /* 
In line 222   * ARDFields initialize 
In line 223   */ 
In line 230  #endif /* ODBCVER */ 
In line 231  	opt->bind_size = 0;		/* default is to bind by column */ 
In line 234  /* 
In line 235   * APDFields initialize 
In line 236   */ 
In line 242  	opt->param_bind_type = 0;	/* default is to bind by column */ 
In line 243  	opt->paramset_size_dummy = 1;	/* dummy setting */ 
In line 276          /* no more room -- allocate more memory */ 
In line 292  /* 
In line 293   *	This API allocates a Application descriptor. 
In line 294   */ 
In line 551  /*	Map sql commands to statement types */ 
In line 562  	{ DESC_OK,  "00000", "00000" }, /* OK */ 
In line 563  	{ DESC_EXEC_ERROR, "HY000", "S1000" }, /* also a general error */ 
In line 565  	{ DESC_SEQUENCE_ERROR, "HY010", "S1010" }, /* Function sequence error */ 
In line 566  	{ DESC_NO_MEMORY_ERROR, "HY001", "S1001" }, /* memory allocation failure */ 
In line 567  	{ DESC_COLNUM_ERROR, "07009", "S1002" }, /* invalid column number */ 
In line 568  	{ DESC_NO_STMTSTRING, "HY001", "S1001" }, /* having no stmtstring is also a malloc problem */ 
In line 569  	{ DESC_ERROR_TAKEN_FROM_BACKEND, "HY000", "S1000" }, /* general error */ 
In line 570  	{ DESC_INTERNAL_ERROR, "HY000", "S1000" }, /* general error */ 
In line 572  	{ DESC_NOT_IMPLEMENTED_ERROR, "HYC00", "S1C00" }, /* == 'driver not  
In line 573  							  * capable' */ 
In line 579  	{ DESC_CREATE_TABLE_ERROR, "42S01", "S0001" }, /* table already exists */ 
In line 582  	{ DESC_INVALID_ARGUMENT_NO, "HY024", "S1009" }, /* invalid argument value */ 
In line 589  	{ DESC_BAD_ERROR, "08S01", "08S01" }, /* communication link failure */ 
In line 633  /*		Returns the next SQL error information. */ 
In line 645  	/* CC: return an error of a hdesc  */ 
In line 655  #endif /* ODBCVER */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\dlg_specific.c  for analysis => 
In line 0  /*------- 
In line 1   * Module:			dlg_specific.c 
In line 2   * 
In line 3   * Description:		This module contains any specific code for handling 
In line 4   *					dialog boxes such as driver/datasource options.  Both the 
In line 5   *					ConfigDSN() and the SQLDriverConnect() functions use 
In line 6   *					functions in this module.  If you were to add a new option 
In line 7   *					to any dialog box, you would most likely only have to change 
In line 8   *					things in here rather than in 2 separate places as before. 
In line 9   * 
In line 10   * Classes:			none 
In line 11   * 
In line 12   * API functions:	none 
In line 13   * 
In line 14   * Comments:		See "readme.txt" for copyright and license information. 
In line 15   *------- 
In line 16   */ 
In line 17  /* Multibyte support	Eiji Tokuya 2001-03-15 */ 
In line 203  	/*BOOL		abbrev = (len <= 400);*/ 
In line 209  	/* fundamental info */ 
In line 227  	/* extra info */ 
In line 274  #endif /* WIN32 */ 
In line 276  			INI_XAOPT "=%d"	/* XAOPT */ 
In line 277  #endif /* _HANDLE_ENLIST_IN_DTC_ */ 
In line 312  #endif /* WIN32 */ 
In line 315  #endif /* _HANDLE_ENLIST_IN_DTC_ */ 
In line 318  	/* Abbreviation is needed ? */ 
In line 416  			/* 
In line 417  			 * The PROTOCOL setting must be placed after CX flag 
In line 418  			 * so that this option can override the CX setting. 
In line 419  			 */ 
In line 442  	if (olen < 0 || olen >= nlen) /* failed */ 
In line 575  		/* We can use the conn_settings directly when they are enclosed with braces */ 
In line 643  #endif /* _HANDLE_ENLIST_IN_DTC_ */ 
In line 691  	/* 
In line 692  	 * else if (stricmp(attribute, INI_UNIQUEINDEX) == 0 || 
In line 693  	 * stricmp(attribute, "UIX") == 0) ci->drivers.unique_index = 
In line 694  	 * atoi(value); 
In line 695  	 */ 
In line 806  #endif /* _HANDLE_ENLIST_IN_DTC_ */ 
In line 835  /* 
In line 836   *	If a driver keyword was present, then dont use a DSN and return. 
In line 837   *	If DSN is null and no driver, then use the default datasource. 
In line 838   */ 
In line 848  	/* brute-force chop off trailing blanks... */ 
In line 859  	/* Proceed with getting info for the given DSN. */ 
In line 997  #endif /* _HANDLE_ENLIST_IN_DTC_ */ 
In line 999  	/* Force abbrev connstr or bde */ 
In line 1011  	/* Allow override of odbcinst.ini parameters here */ 
In line 1041  /* 
In line 1042   *	This function writes any global parameters (that can be manipulated) 
In line 1043   *	to the ODBCINST.INI portion of the registry 
In line 1044   */ 
In line 1085  	/* 
In line 1086  	 * Never update the onlyread from this module. 
In line 1087  	 */ 
In line 1134  	/* 
In line 1135  	 * Never update the conn_setting from this module 
In line 1136  	 * SQLWritePrivateProfileString(sectionName, INI_CONNSETTINGS, 
In line 1137  	 * comval->conn_settings, fileName); 
In line 1138  	 */ 
In line 1143  /*	This is for datasource based options only */ 
In line 1281  #endif /* _HANDLE_ENLIST_IN_DTC_ */ 
In line 1285  /* 
In line 1286   *	This function reads the ODBCINST.INI portion of 
In line 1287   *	the registry and gets any driver defaults. 
In line 1288   */ 
In line 1303  	/* Fetch Count is stored in driver section */ 
In line 1309  		/* sanity check if using cursors */ 
In line 1316  	/* Socket Buffersize is stored in driver section */ 
In line 1324  	/* Debug is stored in the driver section */ 
In line 1332  	/* CommLog is stored in the driver section */ 
In line 1342  	/* Optimizer is stored in the driver section only */ 
In line 1350  	/* KSQO is stored in the driver section only */ 
In line 1358  	/* Recognize Unique Index is stored in the driver section only */ 
In line 1367  	/* Unknown Sizes is stored in the driver section only */ 
In line 1376  	/* Lie about supported functions? */ 
In line 1384  	/* Parse statements */ 
In line 1392  	/* SQLCancel calls SQLFreeStmt in Driver Manager */ 
In line 1400  	/* UseDeclareFetch is stored in the driver section only */ 
In line 1408  	/* Max Varchar Size */ 
In line 1416  	/* Max TextField Size */ 
In line 1424  	/* Text As LongVarchar	*/ 
In line 1432  	/* Unknowns As LongVarchar	*/ 
In line 1440  	/* Bools As Char */ 
In line 1448  	/* Extra Systable prefixes */ 
In line 1450  	/* 
In line 1451  	 * Use @@@ to distinguish between blank extra prefixes and no key 
In line 1452  	 * entry 
In line 1453  	 */ 
In line 1464  	/* Dont allow override of an override! */ 
In line 1469  		/* 
In line 1470  		 * ConnSettings is stored in the driver section and per datasource 
In line 1471  		 * for override 
In line 1472  		 */ 
In line 1478  		/* Default state for future DSN's Readonly attribute */ 
In line 1486  		/* 
In line 1487  		 * Default state for future DSN's protocol attribute This isn't a 
In line 1488  		 * real driver option YET.	This is more intended for 
In line 1489  		 * customization from the install. 
In line 1490  		 */ 
In line 1593  /* 
In line 1594   *	Remove braces if the input value is enclosed by braces({}). 
In line 1595   *	Othewise decode the input value.  
In line 1596   */ 
In line 1603  		if ('}' == in[inlen - 1]) /* enclosed by braces */ 
In line 1738  /* 
In line 1739   *	extract the specified attribute from the comment part. 
In line 1740   *		attribute=[']value['] 
In line 1741   */ 
In line 1795  		/* now in comment */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\dlg_wingui.c  for analysis => 
In line 1  /*------- 
In line 2   * Module:			dlg_wingui.c 
In line 3   * 
In line 4   * Description:		This module contains any specific code for handling 
In line 5   *					dialog boxes such as driver/datasource options.  Both the 
In line 6   *					ConfigDSN() and the SQLDriverConnect() functions use 
In line 7   *					functions in this module.  If you were to add a new option 
In line 8   *					to any dialog box, you would most likely only have to change 
In line 9   *					things in here rather than in 2 separate places as before. 
In line 10   * 
In line 11   * Classes:			none 
In line 12   * 
In line 13   * API functions:	none 
In line 14   * 
In line 15   * Comments:		See "readme.txt" for copyright and license information. 
In line 16   *------- 
In line 17   */ 
In line 18  /* Multibyte support	Eiji Tokuya 2001-03-15 */ 
In line 21  #include "misc.h" // strncpy_null 
In line 56  	/* 
In line 57  	 * If driver attribute NOT present, then set the datasource name and 
In line 58  	 * description 
In line 59  	 */ 
In line 79  #endif /* NOT_USE_LIBPQ */ 
In line 86  #endif /* USE_SSPI */ 
In line 144  		case 0:			/* driver common */ 
In line 147  		case 1:			/* dsn specific */ 
In line 150  		case 2:			/* default */ 
In line 164  				/* Unknown Sizes */ 
In line 179  #endif /* Q_LOG */ 
In line 183  	/* EnableWindow(GetDlgItem(hdlg, DRV_UNIQUEINDEX), enable); */ 
In line 188  	/* Unknown Sizes clear */ 
In line 192  	/* Unknown (Default) Data Type sizes */ 
In line 215  #endif /* MY_LOG */ 
In line 221  	/* Driver Connection Settings */ 
In line 248  	/* Unknown (Default) Data Type sizes */ 
In line 269  	comval->max_longvarchar_size = GetDlgItemInt(hdlg, DRV_LONGVARCHAR_SIZE, NULL, TRUE);		/* allows for 
In line 270  																								 * SQL_NO_TOTAL */ 
In line 274  	/* Driver Connection Settings */ 
In line 291  	/* fall through */ 
In line 307  			SetWindowLongPtr(hdlg, DWLP_USER, lParam);		/* save for OK etc */ 
In line 353  #endif /* _HANDLE_ENLIST_IN_DTC_ */ 
In line 364  #endif /* _HANDLE_ENLIST_IN_DTC_ */ 
In line 373  #endif /* Q_LOG */ 
In line 377  #endif /* MY_LOG */ 
In line 393  #endif /* _HANDLE_ENLIST_IN_DTC_ */ 
In line 412  #endif /* _HANDLE_ENLIST_IN_DTC_ */ 
In line 435  			SetWindowLongPtr(hdlg, DWLP_USER, lParam);		/* save for OK etc */ 
In line 511  			SetWindowLongPtr(hdlg, DWLP_USER, lParam);		/* save for OK */ 
In line 513  			/* Change window caption */ 
In line 533  			/* Readonly */ 
In line 536  			/* Protocol */ 
In line 549  				/* latest */ 
In line 552  			/* How to issue Rollback */ 
In line 566  			/* Int8 As */ 
In line 600  			/*CheckDlgButton(hdlg, DS_LOWERCASEIDENTIFIER, ci->lower_case_identifier);*/ 
In line 608  			/* Datasource Connection Settings */ 
In line 626  					/* Readonly */ 
In line 629  					/* Protocol */ 
In line 637  						/* latest */ 
In line 640  					/* Issue rollback command on error */ 
In line 648  						/* legacy */ 
In line 651  					/* Int8 As */ 
In line 676  					/*ci->lower_case_identifier = IsDlgButtonChecked(hdlg, DS_LOWERCASEIDENTIFIER);*/ 
In line 679  					/* OID Options */ 
In line 683  					/* Datasource Connection Settings */ 
In line 803  #endif /* WIN32 */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\drvconn.c  for analysis => 
In line 0  /*------- 
In line 1    Module:			drvconn.c 
In line 2   * 
In line 3   * Description:		This module contains only routines related to 
In line 4   *					implementing SQLDriverConnect. 
In line 5   * 
In line 6   * Classes:			n/a 
In line 7   * 
In line 8   * API functions:	SQLDriverConnect 
In line 9   * 
In line 10   * Comments:		See "readme.txt" for copyright and license information. 
In line 11   *------- 
In line 12   */ 
In line 63  /* prototypes */ 
In line 71  extern HINSTANCE NEAR s_hModule;	/* Saved module handle. */ 
In line 127  #endif	/* FORCE_PASSWORD_DISPLAY */ 
In line 131  	/* Parse the connect string and fill in conninfo for this hdbc. */ 
In line 134  	/* 
In line 135  	 * If the ConnInfo in the hdbc is missing anything, this function will 
In line 136  	 * fill them in from the registry (assuming of course there is a DSN 
In line 137  	 * given -- if not, it does nothing!) 
In line 138  	 */ 
In line 148  	/* Fill in any default parameters if they are not there. */ 
In line 150  	/* initialize pg_version */ 
In line 172  			/* Fall through */ 
In line 177  			/* Password is not a required parameter. */ 
In line 185  #endif /* WIN32 */ 
In line 203  	/* 
In line 204  	 * Password is not a required parameter unless authentication asks for 
In line 205  	 * it. For now, I think it's better to just let the application ask 
In line 206  	 * over and over until a password is entered (the user can always hit 
In line 207  	 * Cancel to get out) 
In line 208  	 */ 
In line 217  #endif /* WIN32 */ 
In line 227  	/* do the actual connect */ 
In line 230  	{							/* need a password */ 
In line 234  			return SQL_ERROR;	/* need a password but not allowed to 
In line 235  								 * prompt so error */ 
In line 243  			return SQL_ERROR;	/* until a better solution is found. */ 
In line 249  		/* error msg filled in above */ 
In line 254  	/* 
In line 255  	 * Create the Output Connection String 
In line 256  	 */ 
In line 267  		/* 
In line 268  		 * Return the completed string to the caller. The correct method 
In line 269  		 * is to only construct the connect string if a dialog was put up, 
In line 270  		 * otherwise, it should just copy the connection input string to 
In line 271  		 * the output. However, it seems ok to just always construct an 
In line 272  		 * output string.  There are possible bad side effects on working 
In line 273  		 * applications (Access) by implementing the correct behavior, 
In line 274  		 * anyway. 
In line 275  		 */ 
In line 276  		/*strncpy_null(szConnStrOut, connStrOut, cbConnStrOutMax);*/ 
In line 311  #endif /* FORCE_PASSWORD_DISPLAY */ 
In line 357  			/* Change the caption for the setup dialog */ 
In line 363  			/* Hide the DSN and description fields */ 
In line 375  			SetWindowLongPtr(hdlg, DWLP_USER, lParam);		/* Save the ConnInfo for 
In line 376  														 * the "OK" */ 
In line 380  				;				/* default focus */ 
In line 419  #endif   /* WIN32 */ 
In line 439  #endif /* HAVE_STRTOK_R */ 
In line 455  #endif /* FORCE_PASSWORD_DISPLAY */ 
In line 465  #endif /* HAVE_STRTOK_R */ 
In line 476  		attribute = pair;		/* ex. DSN */ 
In line 477  		value = equals + 1;		/* ex. 'CEO co1' */ 
In line 478  		/* 
In line 479  		 * Values enclosed with braces({}) can contain ; etc 
In line 480  		 * We don't remove the braces here because  
In line 481  		 * decode_or_remove_braces() in dlg_specifi.c 
In line 482  		 * would remove them later. 
In line 483  		 * Just correct the misdetected delimter(;).   
In line 484  		 */ 
In line 488  			if (NULL == delp) continue; /* shouldn't occur */ 
In line 491  				/* there's a corresponding closing bracket? */ 
In line 499  				/* Where's a corresponding closing bracket? */ 
In line 504  					if (NULL != closep) /* the delimiter is misdetected */ 
In line 525  #endif /* FORCE_PASSWORD_DISPLAY */ 
In line 531  		/* Copy the appropriate value to the conninfo  */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\environ.c  for analysis => 
In line 0  /*------- 
In line 1   * Module:			environ.c 
In line 2   * 
In line 3   * Description:		This module contains routines related to 
In line 4   *					the environment, such as storing connection handles, 
In line 5   *					and returning errors. 
In line 6   * 
In line 7   * Classes:			EnvironmentClass (Functions prefix: "EN_") 
In line 8   * 
In line 9   * API functions:	SQLAllocEnv, SQLFreeEnv, SQLError 
In line 10   * 
In line 11   * Comments:		See "readme.txt" for copyright and license information. 
In line 12   *------- 
In line 13   */ 
In line 26  #endif /* WIN32 */ 
In line 31  /* The one instance of the handles */ 
In line 37  CRITICAL_SECTION	common_cs; /* commonly used for short term blocking */ 
In line 38  CRITICAL_SECTION	common_lcs; /* commonly used for not necessarily short term blocking */ 
In line 43  #endif /* WIN_MULTITHREAD_SUPPORT */ 
In line 71  	/* 
In line 72  	 * Hack for systems on which none of the constructor-making techniques 
In line 73  	 * in psqlodbc.c work: if globals appears not to have been 
In line 74  	 * initialized, then cause it to be initialized.  Since this should be 
In line 75  	 * the first function called in this shared library, doing it here 
In line 76  	 * should work. 
In line 77  	 */ 
In line 180  /*		Returns the next SQL error information. */ 
In line 192  	/* CC: return an error of a hstmt  */ 
In line 205  	/* 
In line 206  	 *	Even though an application specifies a larger error message 
In line 207  	 *	buffer, the driver manager changes it silently. 
In line 208  	 *	Therefore we divide the error message into ...  
In line 209  	 */ 
In line 213  			error->recsize = cbErrorMsgMax - 1; /* apply the first request */ 
In line 337  				/* data truncated */ 
In line 341  				/* data source not found */ 
In line 346  				/* unable to connect to data source */ 
In line 354  				/* memory allocation failure */ 
In line 358  				/* general error */ 
In line 362  				/* driver does not support this function */ 
In line 366  				/* invalid argument value */ 
In line 371  				/* 
In line 372  				 * when the user tries to switch commit mode in a 
In line 373  				 * transaction 
In line 374  				 */ 
In line 375  				/* -> function sequence error */ 
In line 394  				/* general error */ 
In line 455  				/* memory allocation failure */ 
In line 460  				/* general error */ 
In line 469  /*		Returns the next SQL error information. */ 
In line 512  /* 
In line 513   * EnvironmentClass implementation 
In line 514   */ 
In line 524  	/* Load the WinSock Library */ 
In line 532  	/* Verify that this is the minimum version of WinSock */ 
In line 543  #endif /* WIN32 */ 
In line 561  #endif /* WIN32 */ 
In line 577  	/* 
In line 578  	 * the error messages are static strings distributed throughout the 
In line 579  	 * source--they should not be freed 
In line 580  	 */ 
In line 582  	/* Free any connections belonging to this environment */ 
In line 614  #endif   /* _MEMORY_DEBUG_ */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\execute.c  for analysis => 
In line 0  /*------- 
In line 1   * Module:			execute.c 
In line 2   * 
In line 3   * Description:		This module contains routines related to 
In line 4   *					preparing and executing an SQL statement. 
In line 5   * 
In line 6   * Classes:			n/a 
In line 7   * 
In line 8   * API functions:	SQLPrepare, SQLExecute, SQLExecDirect, SQLTransact, 
In line 9   *					SQLCancel, SQLNativeSql, SQLParamData, SQLPutData 
In line 10   * 
In line 11   * Comments:		See "readme.txt" for copyright and license information. 
In line 12   *------- 
In line 13   */ 
In line 23  #endif /* WIN32 */ 
In line 35  /*extern GLOBAL_VALUES globals;*/ 
In line 38  /*		Perform a Prepare on the SQL statement */ 
In line 52  	/* StartRollbackState(self); */ 
In line 60  	/* 
In line 61  	 * According to the ODBC specs it is valid to call SQLPrepare multiple 
In line 62  	 * times. In that case, the bound SQL statement is replaced by the new 
In line 63  	 * one 
In line 64  	 */ 
In line 72  			SC_recycle_statement(self); /* recycle the statement, but do 
In line 73  										 * not remove parameter bindings */ 
In line 78  			SC_recycle_statement(self); /* recycle the statement, but do 
In line 79  										 * not remove parameter bindings */ 
In line 90  				SC_recycle_statement(self); /* recycle the statement */ 
In line 129  	/* Check if connection is onlyread (only selects are allowed) */ 
In line 146  /*		Performs the equivalent of SQLPrepare, followed by SQLExecute. */ 
In line 164  	/* 
In line 165  	 * keep a copy of the un-parametrized statement, in case they try to 
In line 166  	 * execute this statement again 
In line 167  	 */ 
In line 181  	/* 
In line 182  	 * If an SQLPrepare was performed prior to this, but was left in the 
In line 183  	 * premature state because an error occurred prior to SQLExecute then 
In line 184  	 * set the statement to finished so it can be recycled. 
In line 185  	 */ 
In line 191  	/* Check if connection is onlyread (only selects are allowed) */ 
In line 219  		/* Do prepare operations by the driver itself */ 
In line 233  		if (stmt->multi_statement > 0) /* would divide the query into multiple commands and apply V3 parse requests for each of them */ 
In line 272  	if (0 != method) /* a method was already determined */ 
In line 278  		case NON_PREPARE_STATEMENT: /* not a prepare statement */ 
In line 290  /* dont/should/can send Parse request ? */ 
In line 420  /* 
In line 421   *	The execution after all parameters were resolved. 
In line 422   */ 
In line 443  	/* save the cursor's info before the execution */ 
In line 446  	/* Prepare the statement if possible at backend side */ 
In line 453  	/* Create the statement with parameters substituted. */ 
In line 460  		RETURN(retval) /* error msg is passed from the above */ 
In line 465  	/* 
In line 466  	 *	Dummy exection to get the column info. 
In line 467  	 */  
In line 480  			/* do nothing */ 
In line 490  		/* we are now in a transaction */ 
In line 497  #endif /* LEGACY_MODE_ */ 
In line 514  	/* 
In line 515  	 *	The real execution. 
In line 516  	 */ 
In line 526  	/* special handling of result for keyset driven cursors */ 
In line 564  #endif /* NOT_USED */ 
In line 582  #endif /* ODBCVER */ 
In line 622  #endif /* ODBCVER */ 
In line 625  	/* 
In line 626  	 *	The cursor's info was changed ? 
In line 627  	 */ 
In line 656  	if (!ci || ci->rollback_on_error < 0) /* default */ 
In line 659  			ret = 2; /* statement rollback */ 
In line 661  			ret = 1; /* transaction rollback */ 
In line 681  /* 
In line 682   *	Must be in a transaction or the subsequent execution 
In line 683   *	invokes a transaction. 
In line 684   */ 
In line 818  		SC_forget_unnamed(stmt); /* unnamed plan is no longer reliable */ 
In line 845  #ifdef	NOT_USED /* give up the use of lastval() */	 
In line 846  	if (PG_VERSION_GE(conn, 8.1)) /* lastval() is available */ 
In line 848  #endif /* NOT_USED */ 
In line 849  	/*if (!CC_fake_mss(conn)) 
In line 850  		return;*/ 
In line 914  /*	Execute a prepared SQL statement */ 
In line 939  	/* 
In line 940  	 * If the statement is premature, it means we already executed it from 
In line 941  	 * an SQLPrepare/SQLDescribeCol type of scenario.  So just return 
In line 942  	 * success. 
In line 943  	 */ 
In line 983  		/* 
In line 984  		 * executing an array of parameters. 
In line 985  		 * Don't recycle the statement. 
In line 986  		 */ 
In line 994  		/* 
In line 995  		 * re-executing an prepared statement. 
In line 996  		 * Don't recycle the statement but 
In line 997  		 * discard the old result. 
In line 998  		 */ 
In line 1003  	/* 
In line 1004  	 * If SQLExecute is being called again, recycle the statement. Note 
In line 1005  	 * this should have been done by the application in a call to 
In line 1006  	 * SQLFreeStmt(SQL_CLOSE) or SQLCancel. 
In line 1007  	 */ 
In line 1011  /******** Is this really NEEDED ? ******/ 
In line 1015  	/* Check if the statement is in the correct state */ 
In line 1037  		/* 
In line 1038  		   We sometimes need to know about the PG type of binding 
In line 1039  		   parameters even in case of non-prepared statements. 
In line 1040  		 */ 
In line 1058  		/* 
In line 1059  	 	 *	Initialize the param_status_ptr  
In line 1060  	 	 */ 
In line 1066  #endif /* ODBCVER */ 
In line 1092  	/* 
In line 1093  	 *	Initialize the current row status  
In line 1094  	 */ 
In line 1097  #endif /* ODBCVER */ 
In line 1098  	/* 
In line 1099  	 * Check if statement has any data-at-execute parameters when it is 
In line 1100  	 * not in SC_pre_execute. 
In line 1101  	 */ 
In line 1104  		/* 
In line 1105  		 * The bound parameters could have possibly changed since the last 
In line 1106  		 * execute of this statement?  Therefore check for params and 
In line 1107  		 * re-copy. 
In line 1108  		 */ 
In line 1114  		/* 
In line 1115  		 *	Increment the  number of currently processed rows  
In line 1116  		 */ 
In line 1134  			/* Check for data at execution parameters */ 
In line 1145  		/* 
In line 1146  		 * If there are some data at execution parameters, return need 
In line 1147  		 * data 
In line 1148  		 */ 
In line 1150  		/* 
In line 1151  		 * SQLParamData and SQLPutData will be used to send params and 
In line 1152  		 * execute the statement. 
In line 1153  		 */ 
In line 1198  	/* 
In line 1199  	 * If hdbc is null and henv is valid, it means transact all 
In line 1200  	 * connections on that henv. 
In line 1201  	 */ 
In line 1226  	/* If manual commit and in transaction, then proceed. */ 
In line 1234  			/* error msg will be in the connection */ 
In line 1246  			 HSTMT hstmt)		/* Statement to cancel. */ 
In line 1256  	/* Check if this can handle canceling in the middle of a SQLPutData? */ 
In line 1265  	/* StartRollbackState(stmt); */ 
In line 1271  	/* 
In line 1272  	 * Not in the middle of SQLParamData/SQLPutData so cancel like a 
In line 1273  	 * close. 
In line 1274  	 */ 
In line 1277  		/* 
In line 1278  		 * Tell the Backend that we're cancelling this request 
In line 1279  		 */ 
In line 1288  		/* 
In line 1289  		 * MAJOR HACK for Windows to reset the driver manager's cursor 
In line 1290  		 * state: Because of what seems like a bug in the Odbc driver 
In line 1291  		 * manager, SQLCancel does not act like a SQLFreeStmt(CLOSE), as 
In line 1292  		 * many applications depend on this behavior.  So, this brute 
In line 1293  		 * force method calls the driver manager's function on behalf of 
In line 1294  		 * the application. 
In line 1295  		 */ 
In line 1313  #endif /* WIN32 */ 
In line 1326  	/* In the middle of SQLParamData/SQLPutData, so cancel that. */ 
In line 1327  	/* 
In line 1328  	 * Note, any previous data-at-exec buffers will be freed in the 
In line 1329  	 * recycle 
In line 1330  	 */ 
In line 1331  	/* if they call SQLExecDirect or SQLExecute again. */ 
In line 1353  /* 
In line 1354   *	Returns the SQL string as modified by the driver. 
In line 1355   *	Currently, just copy the input string without modification 
In line 1356   *	observing buffer limits and truncation. 
In line 1357   */ 
In line 1406  /* 
In line 1407   *	Supplies parameter data at execution time. 
In line 1408   *	Used in conjuction with SQLPutData. 
In line 1409   */ 
In line 1459  	/* close the large object */ 
In line 1464  		/* commit transaction if needed */ 
In line 1477  	/* Done, now copy the params and then execute the statement */ 
In line 1488  			/**SC_reset_delegate(retval, stmt);**/ 
In line 1503  	/* 
In line 1504  	 * Set beginning param;  if first time SQLParamData is called , start 
In line 1505  	 * at 0. Otherwise, start at the last parameter + 1. 
In line 1506  	 */ 
In line 1515  	/* At least 1 data at execution parameter, so Fill in the token value */ 
In line 1527  				/* returns token here */ 
In line 1556  /* 
In line 1557   *	Supplies parameter data at execution time. 
In line 1558   *	Used in conjunction with SQLParamData. 
In line 1559   */ 
In line 1631  #endif /* UNICODE_SUPPORT */ 
In line 1647  #endif /* UNICODE_SUPPORT */ 
In line 1666  	{							/* first call */ 
In line 1687  		/* Handle Long Var Binary with Large Objects */ 
In line 1688  		/* if (current_iparam->SQLType == SQL_LONGVARBINARY) */ 
In line 1691  			/* begin transaction if needed */ 
In line 1702  			/* store the oid */ 
In line 1711  			/* 
In line 1712  			 * major hack -- to allow convert to see somethings there have 
In line 1713  			 * to modify convert to handle this better 
In line 1714  			 */ 
In line 1715  			/***current_param->EXEC_buffer = (char *) &current_param->lobj_oid;***/ 
In line 1717  			/* store the fd */ 
In line 1744  		/* calling SQLPutData more than once */ 
In line 1747  		/* if (current_iparam->SQLType == SQL_LONGVARBINARY) */ 
In line 1750  			/* the large object fd is in EXEC_buffer */ 
In line 1766  				/* dont lose the old pointer in case out of memory */ 
In line 1778  				/* reassign buffer incase realloc moved it */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\gsssvcs.c  for analysis => 
In line 2  #endif /* WIN32 */ 
In line 10  #endif /* _WIN64 */ 
In line 11  #endif /* WIN32 */ 
In line 18  #endif /* _WIN64 */ 
In line 32  /* 
In line 33   * GSSAPI authentication system. 
In line 34   */ 
In line 37  /* 
In line 38   * MIT Kerberos GSSAPI DLL doesn't properly export the symbols for MingW 
In line 39   * that contain the OIDs required. Redefine here, values copied 
In line 40   * from src/athena/auth/krb5/src/lib/gssapi/generic/gssapi_generic.c 
In line 41   */ 
In line 47  /* 
In line 48   * Fetch all errors of a specific type and append to "str". 
In line 49   */ 
In line 77  /* 
In line 78   * GSSAPI errors contain two parts; put both into conn->errorMessage. 
In line 79   */ 
In line 86  	/* Fetch major error codes */ 
In line 89  	/* Add the minor codes as well */ 
In line 93  /* 
In line 94   * Continue GSS authentication with next token as needed. 
In line 95   */ 
In line 157  		/* 
In line 158  		 * GSS generated data to send to the server. We don't care if it's the 
In line 159  		 * first or subsequent packet, just send the same kind of password 
In line 160  		 * packet. 
In line 161  		 */ 
In line 199  /* 
In line 200   *	This is needed to make /Delayload:gssapi32(64).dll possible 
In line 201   *	under Windows. 
In line 202   */ 
In line 225  /* 
In line 226   * Send initial GSS authentication token 
In line 227   */ 
In line 249  	/* 
In line 250  	 * Import service principal name so the proper ticket can be acquired by 
In line 251  	 * the GSSAPI system. 
In line 252  	 */ 
In line 258  				   // GSS_C_NT_HOSTBASED_SERVICE, 
In line 273  	/* 
In line 274  	 * Initial packet is the same as a continuation packet with no initial 
In line 275  	 * context. 
In line 276  	 */ 
In line 295  #endif   /* USE_GSS */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\guard_check.c  for analysis => 
In line 0  //------------------------------------------------------- 
In line 1  // Подсистема    : Общесистемное ПО 
In line 2  // Задача        : ODBC драйвер СУБД PostgreSQL 
In line 3  // Модуль        : guard_check.c 
In line 4  // Назначение    : Проверка равенства мандатных меток сессии  
In line 5  //               : СУБД PostgreSQL и СЗИ "Страж NT 4.0" 
In line 6  // Язык          : C (Microsoft Visual Studio 2010) 
In line 7  // Программист   : Романов Д.Г. 
In line 8  // Дата          : июль 2018 
In line 9  // Изменение     :  
In line 10  //------------------------------------------------------- 
In line 40       //   snprintf(msg, sizeof(msg), "Guard version='%i'",MajorVersion); 
In line 41       //   CC_set_error(self, CONN_NOT_IMPLEMENTED_ERROR, msg, func); 
In line 55          /* get the server's ac_session_maclabel */ 
In line 83             //snprintf(msg, sizeof(msg), "ac_session_maclabel ='%s'  guard_grif = %i  (%i,%i)", maclabelstr, CurrentGrif, pg_mac, pg_vec); 
In line 86                 //snprintf(msg, sizeof(msg), "Guard and PostgreSQL session MacLabel are not equal (Guard MacLabel = %i, PostgreSQL MacLabel = '%s')", CurrentGrif, maclabelstr); 
In line 94                 //snprintf(msg, sizeof(msg), "Guard and PostgreSQL session MacLabel are not equal (Guard MacLabel = %i, PostgreSQL MacLabel = '%s')", CurrentGrif, maclabelstr); 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\info.c  for analysis => 
In line 0  /*-------- 
In line 1   * Module:			info.c 
In line 2   * 
In line 3   * Description:		This module contains routines related to 
In line 4   *					ODBC informational functions. 
In line 5   * 
In line 6   * Classes:			n/a 
In line 7   * 
In line 8   * API functions:	SQLGetInfo, SQLGetTypeInfo, SQLGetFunctions, 
In line 9   *					SQLTables, SQLColumns, SQLStatistics, SQLSpecialColumns, 
In line 10   *					SQLPrimaryKeys, SQLForeignKeys, 
In line 11   *					SQLProcedureColumns, SQLProcedures, 
In line 12   *					SQLTablePrivileges, SQLColumnPrivileges(NI) 
In line 13   * 
In line 14   * Comments:		See "readme.txt" for copyright and license information. 
In line 15   *-------- 
In line 16   */ 
In line 42  /*	Trigger related stuff for SQLForeign Keys */ 
In line 50  /* extern GLOBAL_VALUES globals; */ 
In line 87  		case SQL_ACCESSIBLE_PROCEDURES: /* ODBC 1.0 */ 
In line 91  		case SQL_ACCESSIBLE_TABLES:		/* ODBC 1.0 */ 
In line 95  		case SQL_ACTIVE_CONNECTIONS:	/* ODBC 1.0 */ 
In line 100  		case SQL_ACTIVE_STATEMENTS:		/* ODBC 1.0 */ 
In line 105  		case SQL_ALTER_TABLE:	/* ODBC 2.0 */ 
In line 123  #endif /* ODBCVER */ 
In line 126  		case SQL_BOOKMARK_PERSISTENCE:	/* ODBC 2.0 */ 
In line 127  			/* very simple bookmark support */ 
In line 132  		case SQL_COLUMN_ALIAS:	/* ODBC 2.0 */ 
In line 136  		case SQL_CONCAT_NULL_BEHAVIOR:	/* ODBC 1.0 */ 
In line 145  		case SQL_CONVERT_VARCHAR:		/* ODBC 1.0 */ 
In line 161  		case SQL_CONVERT_VARBINARY:		/* ODBC 1.0 */ 
In line 168  #endif /* UNICODE_SUPPORT */ 
In line 170  			value = 0;	/* CONVERT is unavailable */ 
In line 173  		case SQL_CONVERT_FUNCTIONS:		/* ODBC 1.0 */ 
In line 179  		case SQL_CORRELATION_NAME:		/* ODBC 1.0 */ 
In line 181  			/* 
In line 182  			 * Saying no correlation name makes Query not work right. 
In line 183  			 * value = SQL_CN_NONE; 
In line 184  			 */ 
In line 189  		case SQL_CURSOR_COMMIT_BEHAVIOR:		/* ODBC 1.0 */ 
In line 196  		case SQL_CURSOR_ROLLBACK_BEHAVIOR:		/* ODBC 1.0 */ 
In line 203  		case SQL_DATA_SOURCE_NAME:		/* ODBC 1.0 */ 
In line 207  		case SQL_DATA_SOURCE_READ_ONLY: /* ODBC 1.0 */ 
In line 211  		case SQL_DATABASE_NAME:	/* Support for old ODBC 1.0 Apps */ 
In line 213  			/* 
In line 214  			 * Returning the database name causes problems in MS Query. It 
In line 215  			 * generates query like: "SELECT DISTINCT a FROM byronnbad3 
In line 216  			 * bad3" 
In line 217  			 * 
In line 218  			 * p = CC_get_database(conn); 
In line 219  			 */ 
In line 223  		case SQL_DBMS_NAME:		/* ODBC 1.0 */ 
In line 230  		case SQL_DBMS_VER:		/* ODBC 1.0 */ 
In line 232  			/* 
In line 233  			 * The ODBC spec wants ##.##.#### ...whatever... so prepend 
In line 234  			 * the driver 
In line 235  			 */ 
In line 236  			/* version number to the dbms version string */ 
In line 237  			/* 
In line 238  			snprintf(tmp, sizeof(tmp) - 1, "%s %s", POSTGRESDRIVERVERSION, conn->pg_version); 
In line 239                          tmp[sizeof(tmp) - 1] = '\0'; */ 
In line 249  		case SQL_DEFAULT_TXN_ISOLATION: /* ODBC 1.0 */ 
In line 257  		case SQL_DRIVER_NAME:	/* ODBC 1.0 */ 
In line 264  			/* p = DRIVER_ODBC_VER; */ 
In line 268  		case SQL_DRIVER_VER:	/* ODBC 1.0 */ 
In line 272  		case SQL_EXPRESSIONS_IN_ORDERBY:		/* ODBC 1.0 */ 
In line 276  		case SQL_FETCH_DIRECTION:		/* ODBC 1.0 */ 
In line 288  		case SQL_FILE_USAGE:	/* ODBC 2.0 */ 
In line 293  		case SQL_GETDATA_EXTENSIONS:	/* ODBC 2.0 */ 
In line 298  		case SQL_GROUP_BY:		/* ODBC 2.0 */ 
In line 303  		case SQL_IDENTIFIER_CASE:		/* ODBC 1.0 */ 
In line 305  			/* 
In line 306  			 * are identifiers case-sensitive (yes, but only when quoted. 
In line 307  			 * If not quoted, they default to lowercase) 
In line 308  			 */ 
In line 313  		case SQL_IDENTIFIER_QUOTE_CHAR: /* ODBC 1.0 */ 
In line 314  			/* the character used to quote "identifiers" */ 
In line 318  		case SQL_KEYWORDS:		/* ODBC 2.0 */ 
In line 322  		case SQL_LIKE_ESCAPE_CLAUSE:	/* ODBC 2.0 */ 
In line 324  			/* 
In line 325  			 * is there a character that escapes '%' and '_' in a LIKE 
In line 326  			 * clause? not as far as I can tell 
In line 327  			 */ 
In line 331  		case SQL_LOCK_TYPES:	/* ODBC 2.0 */ 
In line 336  		case SQL_MAX_BINARY_LITERAL_LEN:		/* ODBC 2.0 */ 
In line 341  		case SQL_MAX_CHAR_LITERAL_LEN:	/* ODBC 2.0 */ 
In line 346  		case SQL_MAX_COLUMN_NAME_LEN:	/* ODBC 1.0 */ 
In line 353  #endif /* MAX_COLUMN_LEN */ 
In line 363  		case SQL_MAX_COLUMNS_IN_GROUP_BY:		/* ODBC 2.0 */ 
In line 368  		case SQL_MAX_COLUMNS_IN_INDEX:	/* ODBC 2.0 */ 
In line 373  		case SQL_MAX_COLUMNS_IN_ORDER_BY:		/* ODBC 2.0 */ 
In line 378  		case SQL_MAX_COLUMNS_IN_SELECT: /* ODBC 2.0 */ 
In line 383  		case SQL_MAX_COLUMNS_IN_TABLE:	/* ODBC 2.0 */ 
In line 388  		case SQL_MAX_CURSOR_NAME_LEN:	/* ODBC 1.0 */ 
In line 393  		case SQL_MAX_INDEX_SIZE:		/* ODBC 2.0 */ 
In line 398  		case SQL_MAX_OWNER_NAME_LEN:	/* ODBC 1.0 */ 
In line 406  #endif /* MAX_SCHEMA_LEN */ 
In line 414  		case SQL_MAX_PROCEDURE_NAME_LEN:		/* ODBC 1.0 */ 
In line 419  		case SQL_MAX_QUALIFIER_NAME_LEN:		/* ODBC 1.0 */ 
In line 424  		case SQL_MAX_ROW_SIZE:	/* ODBC 2.0 */ 
In line 428  				/* Large Rowa in 7.1+ */ 
In line 433  				/* Without the Toaster we're limited to the blocksize */ 
In line 438  		case SQL_MAX_ROW_SIZE_INCLUDES_LONG:	/* ODBC 2.0 */ 
In line 440  			/* 
In line 441  			 * does the preceding value include LONGVARCHAR and 
In line 442  			 * LONGVARBINARY fields?   Well, it does include longvarchar, 
In line 443  			 * but not longvarbinary. 
In line 444  			 */ 
In line 448  		case SQL_MAX_STATEMENT_LEN:		/* ODBC 2.0 */ 
In line 449  			/* maybe this should be 0? */ 
In line 454  		case SQL_MAX_TABLE_NAME_LEN:	/* ODBC 1.0 */ 
In line 461  #endif /* MAX_TABLE_LEN */ 
In line 471  		case SQL_MAX_TABLES_IN_SELECT:	/* ODBC 2.0 */ 
In line 481  		case SQL_MULT_RESULT_SETS:		/* ODBC 1.0 */ 
In line 482  			/* Don't support multiple result sets but say yes anyway? */ 
In line 486  		case SQL_MULTIPLE_ACTIVE_TXN:	/* ODBC 1.0 */ 
In line 490  		case SQL_NEED_LONG_DATA_LEN:	/* ODBC 2.0 */ 
In line 492  			/* 
In line 493  			 * Don't need the length, SQLPutData can handle any size and 
In line 494  			 * multiple calls 
In line 495  			 */ 
In line 499  		case SQL_NON_NULLABLE_COLUMNS:	/* ODBC 1.0 */ 
In line 504  		case SQL_NULL_COLLATION:		/* ODBC 2.0 */ 
In line 505  			/* where are nulls sorted? */ 
In line 513  		case SQL_NUMERIC_FUNCTIONS:		/* ODBC 1.0 */ 
In line 518  		case SQL_ODBC_API_CONFORMANCE:	/* ODBC 1.0 */ 
In line 523  		case SQL_ODBC_SAG_CLI_CONFORMANCE:		/* ODBC 1.0 */ 
In line 528  		case SQL_ODBC_SQL_CONFORMANCE:	/* ODBC 1.0 */ 
In line 533  		case SQL_ODBC_SQL_OPT_IEF:		/* ODBC 1.0 */ 
In line 537  		case SQL_OJ_CAPABILITIES:		/* ODBC 2.01 */ 
In line 541  				/* OJs in 7.1+ */ 
In line 551  				/* OJs not in <7.1 */ 
In line 555  		case SQL_ORDER_BY_COLUMNS_IN_SELECT:	/* ODBC 2.0 */ 
In line 559  		case SQL_OUTER_JOINS:	/* ODBC 1.0 */ 
In line 561  				/* OJs in 7.1+ */ 
In line 564  				/* OJs not in <7.1 */ 
In line 568  		case SQL_OWNER_TERM:	/* ODBC 1.0 */ 
In line 575  		case SQL_OWNER_USAGE:	/* ODBC 2.0 */ 
In line 586  		case SQL_POS_OPERATIONS:		/* ODBC 2.0 */ 
In line 593  		case SQL_POSITIONED_STATEMENTS: /* ODBC 2.0 */ 
In line 600  		case SQL_PROCEDURE_TERM:		/* ODBC 1.0 */ 
In line 604  		case SQL_PROCEDURES:	/* ODBC 1.0 */ 
In line 608  		case SQL_QUALIFIER_LOCATION:	/* ODBC 2.0 */ 
In line 616  		case SQL_QUALIFIER_NAME_SEPARATOR:		/* ODBC 1.0 */ 
In line 623  		case SQL_QUALIFIER_TERM:		/* ODBC 1.0 */ 
In line 630  		case SQL_QUALIFIER_USAGE:		/* ODBC 2.0 */ 
In line 636  #endif /* ODBCVER */ 
In line 640  		case SQL_QUOTED_IDENTIFIER_CASE:		/* ODBC 2.0 */ 
In line 641  			/* are "quoted" identifiers case-sensitive?  YES! */ 
In line 646  		case SQL_ROW_UPDATES:	/* ODBC 1.0 */ 
In line 648  			/* 
In line 649  			 * Driver doesn't support keyset-driven or mixed cursors, so 
In line 650  			 * not much point in saying row updates are supported 
In line 651  			 */ 
In line 655  		case SQL_SCROLL_CONCURRENCY:	/* ODBC 1.0 */ 
In line 664  		case SQL_SCROLL_OPTIONS:		/* ODBC 1.0 */ 
In line 673  		case SQL_SEARCH_PATTERN_ESCAPE: /* ODBC 1.0 */ 
In line 680  		case SQL_SERVER_NAME:	/* ODBC 1.0 */ 
In line 684  		case SQL_SPECIAL_CHARACTERS:	/* ODBC 2.0 */ 
In line 688  		case SQL_STATIC_SENSITIVITY:	/* ODBC 2.0 */ 
In line 695  		case SQL_STRING_FUNCTIONS:		/* ODBC 1.0 */ 
In line 707  		case SQL_SUBQUERIES:	/* ODBC 2.0 */ 
In line 708  			/* postgres 6.3 supports subqueries */ 
In line 716  		case SQL_SYSTEM_FUNCTIONS:		/* ODBC 1.0 */ 
In line 721  		case SQL_TABLE_TERM:	/* ODBC 1.0 */ 
In line 725  		case SQL_TIMEDATE_ADD_INTERVALS:		/* ODBC 2.0 */ 
In line 730  		case SQL_TIMEDATE_DIFF_INTERVALS:		/* ODBC 2.0 */ 
In line 735  		case SQL_TIMEDATE_FUNCTIONS:	/* ODBC 1.0 */ 
In line 740  		case SQL_TXN_CAPABLE:	/* ODBC 1.0 */ 
In line 742  			/* 
In line 743  			 * Postgres can deal with create or drop table statements in a 
In line 744  			 * transaction 
In line 745  			 */ 
In line 750  		case SQL_TXN_ISOLATION_OPTION:	/* ODBC 1.0 */ 
In line 760  		case SQL_UNION: /* ODBC 2.0 */ 
In line 761  			/* unions with all supported in postgres 6.3 */ 
In line 766  		case SQL_USER_NAME:		/* ODBC 1.0 */ 
In line 771  			/* unrecognized key */ 
In line 780  	/* 
In line 781  	 * NOTE, that if rgbInfoValue is NULL, then no warnings or errors 
In line 782  	 * should result and just pcbInfoValue is returned, which indicates 
In line 783  	 * what length would be required if a real buffer had been passed in. 
In line 784  	 */ 
In line 787  		/* char/binary data */ 
In line 799  #endif /* UNICODE_SUPPORT */ 
In line 811  #endif /* UNICODE_SUPPORT */ 
In line 815  		/* numeric data */ 
In line 845  	/* Int4 type; */ 
In line 868  #endif /* ODBCVER */ 
In line 893  #endif /* ODBCVER */ 
In line 909  			/*if (SQL_INTEGER == sqlType || SQL_TINYINT == sqlType)*/ 
In line 929  				/* These values can't be NULL */ 
In line 946  			/* 
In line 947  			 * Localized data-source dependent data type name (always 
In line 948  			 * NULL) 
In line 949  			 */ 
In line 952  				/* These values can be NULL */ 
In line 972  #endif /* ODBCVER */ 
In line 979  	/* 
In line 980  	 * also, things need to think that this statement is finished so the 
In line 981  	 * results can be retrieved. 
In line 982  	 */ 
In line 1030  			/* ODBC core functions */ 
In line 1038  			pfExists[SQL_API_SQLDESCRIBECOL] = TRUE;	/* partial */ 
In line 1049  			pfExists[SQL_API_SQLPREPARE] = TRUE;		/* complete? */ 
In line 1052  			pfExists[SQL_API_SQLSETPARAM] = FALSE;		/* odbc 1.0 */ 
In line 1055  			/* ODBC level 1 functions */ 
In line 1059  			pfExists[SQL_API_SQLGETCONNECTOPTION] = TRUE;		/* partial */ 
In line 1063  			pfExists[SQL_API_SQLGETSTMTOPTION] = TRUE;	/* partial */ 
In line 1067  			pfExists[SQL_API_SQLSETCONNECTOPTION] = TRUE;		/* partial */ 
In line 1073  			/* ODBC level 2 functions */ 
In line 1079  			pfExists[SQL_API_SQLDATASOURCES] = FALSE;	/* only implemented by 
In line 1080  														 * DM */ 
In line 1084  				pfExists[SQL_API_SQLDESCRIBEPARAM] = FALSE; /* not properly 
In line 1085  														 * implemented */ 
In line 1086  			pfExists[SQL_API_SQLDRIVERS] = FALSE;		/* only implemented by 
In line 1087  														 * DM */ 
In line 1104  			pfExists[SQL_API_SQLSETSCROLLOPTIONS] = TRUE;		/* odbc 1.0 */ 
In line 1111  #endif /* ODBCVER */ 
In line 1132  #endif /* ODBCVER */ 
In line 1143  #endif /* ODBCVER */ 
In line 1151  					break;		/* partial */ 
In line 1159  #endif /* ODBCVER */ 
In line 1176  #endif /* ODBCVER */ 
In line 1198  					break;		/* odbc 1.0 */ 
In line 1202  #endif /* ODBCVER */ 
In line 1204  					/* ODBC level 1 functions */ 
In line 1217  					break;		/* partial */ 
In line 1218  #endif /* ODBCVER */ 
In line 1231  					break;		/* partial */ 
In line 1232  #endif /* ODBCVER */ 
In line 1245  					break;		/* partial */ 
In line 1249  #endif /* ODBCVER */ 
In line 1260  					/* ODBC level 2 functions */ 
In line 1269  					break;		/* only implemented by DM */ 
In line 1275  					break;		/* not properly implemented */ 
In line 1278  					break;		/* only implemented by DM */ 
In line 1298  #endif /* ODBCVER */ 
In line 1320  					break;		/* odbc 1.0 */ 
In line 1321  #endif /* ODBCVER */ 
In line 1326  				case SQL_API_SQLBULKOPERATIONS:	/* 24 */ 
In line 1327  				case SQL_API_SQLALLOCHANDLE:	/* 1001 */ 
In line 1328  				case SQL_API_SQLBINDPARAM:	/* 1002 */ 
In line 1329  				case SQL_API_SQLCLOSECURSOR:	/* 1003 */ 
In line 1330  				case SQL_API_SQLENDTRAN:	/* 1005 */ 
In line 1331  				case SQL_API_SQLFETCHSCROLL:	/* 1021 */ 
In line 1332  				case SQL_API_SQLFREEHANDLE:	/* 1006 */ 
In line 1333  				case SQL_API_SQLGETCONNECTATTR:	/* 1007 */ 
In line 1334  				case SQL_API_SQLGETDESCFIELD:	/* 1008 */ 
In line 1335  				case SQL_API_SQLGETDIAGFIELD:	/* 1010 */ 
In line 1336  				case SQL_API_SQLGETDIAGREC:	/* 1011 */ 
In line 1337  				case SQL_API_SQLGETENVATTR:	/* 1012 */ 
In line 1338  				case SQL_API_SQLGETSTMTATTR:	/* 1014 */ 
In line 1339  				case SQL_API_SQLSETCONNECTATTR:	/* 1016 */ 
In line 1340  				case SQL_API_SQLSETDESCFIELD:	/* 1017 */ 
In line 1341  				case SQL_API_SQLSETENVATTR:	/* 1019 */ 
In line 1342  				case SQL_API_SQLSETSTMTATTR:	/* 1020 */ 
In line 1345  				case SQL_API_SQLGETDESCREC:	/* 1009 */ 
In line 1346  				case SQL_API_SQLSETDESCREC:	/* 1018 */ 
In line 1347  				case SQL_API_SQLCOPYDESC:	/* 1004 */ 
In line 1350  #endif /* ODBCVER */ 
In line 1400  /* 
In line 1401   *	PostgreSQL needs 2 '\\' to escape '_' and '%'.  
In line 1402   */ 
In line 1418  	/* if (srclen <= 0) */ 
In line 1450  				dest[outlen++] = escape_in_literal; /* insert 1 more LEXER escape */ 
In line 1493  /* 
In line 1494   *	If specified schema name == user_name and the current schema is 
In line 1495   *	'public', allowed to use the 'public' schema. 
In line 1496   */ 
In line 1517  			 const SQLCHAR FAR * szTableQualifier, /* PV X*/ 
In line 1519  			 const SQLCHAR FAR * szTableOwner, /* PV E*/ 
In line 1521  			 const SQLCHAR FAR * szTableName, /* PV E*/ 
In line 1542  #endif /* HAVE_STRTOK_R */ 
In line 1546  	/* Support up to 32 system table prefixes. Should be more than enough. */ 
In line 1604  	/* 
In line 1605  	 * Create the query to find out the tables 
In line 1606  	 */ 
In line 1607  	/* make_string mallocs memory */ 
In line 1626  #endif /* ODBCVER */ 
In line 1644  		/* view is represented by its relkind since 7.1 */ 
In line 1651  		/* view is represented by its relkind since 7.1 */ 
In line 1668  			/* strcat(tables_query, " and pg_catalog.pg_table_is_visible(c.oid)"); */ 
In line 1681  	/* 
In line 1682  	 * Parse the extra systable prefix configuration variable into an array 
In line 1683  	 * of prefixes. 
In line 1684  	 */ 
In line 1694  #endif /* HAVE_STRTOK_R */ 
In line 1701  	/* Parse the desired table types to return */ 
In line 1706  	/* TABLE_TYPE */ 
In line 1718  #endif /* ODBCVER */ 
In line 1721  		/* Check for desired table types to return */ 
In line 1731  #endif /* HAVE_STRTOK_R */ 
In line 1749  	/* 
In line 1750  	 * If not interested in SYSTEM TABLES then filter them out to save 
In line 1751  	 * some time on the query.	If treating system tables as regular 
In line 1752  	 * tables, then dont filter either. 
In line 1753  	 */ 
In line 1762  			/* Also filter out user-defined system table types */ 
In line 1785  		/* match users */ 
In line 1787  			/* filter out large objects in older versions */ 
In line 1799  	/* If not found */ 
In line 1814  #endif /* UNICODE_SUPPORT */ 
In line 1845  	/* the binding structure for a statement is not set up until */ 
In line 1847  	/* 
In line 1848  	 * a statement is actually executed, so we'll have to do this 
In line 1849  	 * ourselves. 
In line 1850  	 */ 
In line 1855  	/* set the field names */ 
In line 1863  	/* add the tuples */ 
In line 1869  		/* 
In line 1870  		 * Determine if this table name is a system table. If treating 
In line 1871  		 * system tables as regular tables, then no need to do this test. 
In line 1872  		 */ 
In line 1889  				/* Check extra system table prefixes */ 
In line 1902  		/* Determine if the table name is a view */ 
In line 1904  			/* view is represented by its relkind since 7.1 */ 
In line 1909  		/* It must be a regular table */ 
In line 1913  		/* Include the row in the result set if meets all criteria */ 
In line 1915  		/* 
In line 1916  		 * NOTE: Unsupported table types (i.e., LOCAL TEMPORARY, ALIAS, 
In line 1917  		 * etc) will return nothing 
In line 1918  		 */ 
In line 1930  			/* 
In line 1931  			 * I have to hide the table owner from Access, otherwise it 
In line 1932  			 * insists on referring to the table as 'owner.table'. (this 
In line 1933  			 * is valid according to the ODBC SQL grammar, but Postgres 
In line 1934  			 * won't support it.) 
In line 1935  			 * 
In line 1936  			 * set_tuplefield_string(&tuple[TABLES_SCHEMA_NAME], table_owner); 
In line 1937  			 */ 
In line 1954  			/*** set_tuplefield_string(&tuple[TABLES_REMARKS], "TABLE"); ***/ 
In line 1967  	/* 
In line 1968  	 * also, things need to think that this statement is finished so the 
In line 1969  	 * results can be retrieved. 
In line 1970  	 */ 
In line 1981  	/* set up the current tuple pointer for SQLFetch */ 
In line 1998  			  const SQLCHAR FAR * szTableQualifier, /* OA X*/ 
In line 2000  			  const SQLCHAR FAR * szTableOwner, /* PV E*/ 
In line 2002  			  const SQLCHAR FAR * szTableName, /* PV E*/ 
In line 2004  			  const SQLCHAR FAR * szColumnName, /* PV E*/ 
In line 2032  #endif /* USE_OLD_IMPL */ 
In line 2054  #endif /* UNICODE_SUPPORT */ 
In line 2069  		/* 
In line 2070  	 	 *	TableName or ColumnName is ordinarily an pattern value, 
In line 2071  	 	 */ 
In line 2096  	/* 
In line 2097  	 * Create the query to find out the columns (Note: pre 6.3 did not 
In line 2098  	 * have the atttypmod field) 
In line 2099  	 */ 
In line 2182  	/* If not found */ 
In line 2255  #endif /* NOT_USED */ 
In line 2328  	/* the binding structure for a statement is not set up until */ 
In line 2330  	/* 
In line 2331  	 * a statement is actually executed, so we'll have to do this 
In line 2332  	 * ourselves. 
In line 2333  	 */ 
In line 2337  	/* 
In line 2338  	 * Setting catalog_result here affects the behavior of 
In line 2339  	 * pgtype_xxx() functions. So set it later. 
In line 2340  	 * stmt->catalog_result = TRUE; 
In line 2341  	 */ 
In line 2342  	/* set the field names */ 
In line 2350  	QR_set_field_info_v(res, COLUMNS_PRECISION, "PRECISION", PG_TYPE_INT4, 4); /* COLUMN_SIZE */ 
In line 2351  	QR_set_field_info_v(res, COLUMNS_LENGTH, "LENGTH", PG_TYPE_INT4, 4); /* BUFFER_LENGTH */ 
In line 2352  	QR_set_field_info_v(res, COLUMNS_SCALE, "SCALE", PG_TYPE_INT2, 2); /* DECIMAL_DIGITS ***/ 
In line 2364  #endif /* ODBCVER */ 
In line 2365  	/* User defined fields */ 
In line 2377  	/* 
In line 2378  	 * Only show oid if option AND there are other columns AND it's not 
In line 2379  	 * being called by SQLStatistics . Always show OID if it's a system 
In line 2380  	 * table 
In line 2381  	 */ 
In line 2396  			/* For OID fields */ 
In line 2400  			/* see note in SQLTables() */ 
In line 2431  #endif /* ODBCVER */ 
In line 2461  		sqltype = SQL_TYPE_NULL;	/* unspecified */ 
In line 2463  		/* see note in SQLTables() */ 
In line 2503  		/*---------- 
In line 2504  		 * Some Notes about Postgres Data Types: 
In line 2505  		 * 
In line 2506  		 * VARCHAR - the length is stored in the pg_attribute.atttypmod field 
In line 2507  		 * BPCHAR  - the length is also stored as varchar is 
In line 2508  		 * 
In line 2509  		 * NUMERIC - the decimal_digits is stored in atttypmod as follows: 
In line 2510  		 * 
In line 2511  		 *	column_size =((atttypmod - VARHDRSZ) >> 16) & 0xffff 
In line 2512  		 *	decimal_digits	 = (atttypmod - VARHDRSZ) & 0xffff 
In line 2513  		 * 
In line 2514  		 *---------- 
In line 2515  		 */ 
In line 2526  				mod_length -= 4;	/* the length is in atttypmod - 4 */ 
In line 2539  				set_tuplefield_int4(&tuple[COLUMNS_LENGTH], column_size + 2);		/* sign+dec.point */ 
In line 2543  #endif /* ODBCVER */ 
In line 2544  				set_tuplefield_int4(&tuple[COLUMNS_DISPLAY_SIZE], column_size + 2);	/* sign+dec.point */ 
In line 2564  				mod_length -= 4;	/* the length is in atttypmod - 4 */ 
In line 2566  			/* if (mod_length > ci->drivers.max_varchar_size || mod_length <= 0) */ 
In line 2579  #endif /* __MS_LOVES_REPORTS_CHAR__ */ 
In line 2588  #endif /* UNICODE_SUPPORT */ 
In line 2592  #endif /* ODBCVER */ 
In line 2604  #endif /* ODBCVER */ 
In line 2619  #else /* USE_OLD_IMPL */ 
In line 2620  		/* Subtract the header length */ 
In line 2640  #endif /* USE_OLD_IMPL */ 
In line 2657  #endif /* ODBCVER */ 
In line 2676  	/* 
In line 2677  	 * Put the row version column at the end so it might not be mistaken 
In line 2678  	 * for a key field. 
In line 2679  	 */ 
In line 2682  		/* For Row Versioning fields */ 
In line 2710  #endif /* ODBCVER */ 
In line 2724  	/* 
In line 2725  	 * also, things need to think that this statement is finished so the 
In line 2726  	 * results can be retrieved. 
In line 2727  	 */ 
In line 2731  	/* set up the current tuple pointer for SQLFetch */ 
In line 2757  				const SQLCHAR FAR * szTableOwner, /* OA E*/ 
In line 2759  				const SQLCHAR FAR * szTableName, /* OA(R) E*/ 
In line 2787  #endif /* UNICODE_SUPPORT */ 
In line 2805  	/* 
In line 2806  	 * Create the query to find out if this is a view or not... 
In line 2807  	 */ 
In line 2819  	/* TableName cannot contain a string search pattern */ 
In line 2820  	/* my_strcat(columns_query, " and c.relname = '%.*s'", szTableName, cbTableName); */ 
In line 2824  	/* SchemaName cannot contain a string search pattern */ 
In line 2854  	/* If not found */ 
In line 2924  		/* there's no oid for views */ 
In line 2948  		/* use the oid value for the rowid */ 
In line 3004  #define INDOPTION_DESC		0x0001	/* values are in reverse order */ 
In line 3008  			const SQLCHAR FAR * szTableQualifier, /* OA X*/ 
In line 3010  			const SQLCHAR FAR * szTableOwner, /* OA E*/ 
In line 3012  			const SQLCHAR FAR * szTableName, /* OA(R) E*/ 
In line 3043  	/* char	  **column_names = NULL; */ 
In line 3069  #endif /* UNICODE_SUPPORT */ 
In line 3078  	/* the binding structure for a statement is not set up until */ 
In line 3080  	/* 
In line 3081  	 * a statement is actually executed, so we'll have to do this 
In line 3082  	 * ourselves. 
In line 3083  	 */ 
In line 3087  	/* set the field names */ 
In line 3111  	/* 
In line 3112  	 * we need to get a list of the field names first, so we can return 
In line 3113  	 * them later. 
In line 3114  	 */ 
In line 3124  	/* 
In line 3125  	 * "internal" prevents SQLColumns from returning the oid if it is 
In line 3126  	 * being shown. This would throw everything off. 
In line 3127  	 */ 
In line 3129  	/*  
In line 3130  	 * table_name parameter cannot contain a string search pattern.  
In line 3131  	 */ 
In line 3193  		/* Couldn't get column names in SQLStatistics.; */ 
In line 3198  	/* get a list of indexes on this table */ 
In line 3208  	/* TableName cannot contain a string search pattern */ 
In line 3250  		/* 
In line 3251  		 * "Couldn't execute index query (w/SQLExecDirect) in 
In line 3252  		 * SQLStatistics."; 
In line 3253  		 */ 
In line 3258  	/* bind the index name column */ 
In line 3263  		SC_error_copy(stmt, indx_stmt, TRUE);	/* "Couldn't bind column  
In line 3264  						* in SQLStatistics."; */ 
In line 3268  	/* bind the vector column */ 
In line 3273  		SC_error_copy(stmt, indx_stmt, TRUE); /* "Couldn't bind column  
In line 3274  						 * in SQLStatistics."; */ 
In line 3278  	/* bind the "is unique" column */ 
In line 3283  		SC_error_copy(stmt, indx_stmt, TRUE);	/* "Couldn't bind column  
In line 3284  						 * in SQLStatistics."; */ 
In line 3288  	/* bind the "is clustered" column */ 
In line 3293  		SC_error_copy(stmt, indx_stmt, TRUE);	/* "Couldn't bind column * 
In line 3294  						 * in SQLStatistics."; */ 
In line 3299  	/* bind the "is hash" column */ 
In line 3304  		SC_error_copy(stmt, indx_stmt, TRUE);	/* "Couldn't bind column *  
In line 3305  						 * in SQLStatistics."; */ 
In line 3334  	/* bind the vector column */ 
In line 3339  		SC_error_copy(stmt, indx_stmt, TRUE); /* "Couldn't bind column  
In line 3340  						 * in SQLStatistics."; */ 
In line 3347  	/* fake index of OID */ 
In line 3352  		/* no table qualifier */ 
In line 3354  		/* don't set the table owner, else Access tries to use it */ 
In line 3358  		/* non-unique index? */ 
In line 3361  		/* no index qualifier */ 
In line 3367  		/* 
In line 3368  		 * Clustered/HASH index? 
In line 3369  		 */ 
In line 3382  		/* If only requesting unique indexs, then just return those. */ 
In line 3388  			/* add a row in this table for each field in the index */ 
In line 3394  				/* no table qualifier */ 
In line 3396  				/* don't set the table owner, else Access tries to use it */ 
In line 3400  				/* non-unique index? */ 
In line 3406  				/* no index qualifier */ 
In line 3410  				/* 
In line 3411  				 * Clustered/HASH index? 
In line 3412  				 */ 
In line 3480  		/* "SQLFetch failed in SQLStatistics."; */ 
In line 3488  	/* 
In line 3489  	 * also, things need to think that this statement is finished so the 
In line 3490  	 * results can be retrieved. 
In line 3491  	 */ 
In line 3498  	/* These things should be freed on any error ALSO! */ 
In line 3512  	/* set up the current tuple pointer for SQLFetch */ 
In line 3528  			const SQLCHAR FAR * szTableQualifier, /* OA X*/ 
In line 3530  			const SQLCHAR FAR * szTableOwner, /* OA E*/ 
In line 3532  			const SQLCHAR FAR * szTableName, /* OA(R) E*/ 
In line 3534  			const SQLCHAR FAR * szColumnName, /* PV E*/ 
In line 3552  	/* Neither Access or Borland care about this. */ 
In line 3609  	/* 
In line 3610  	 * also, things need to think that this statement is finished so the 
In line 3611  	 * results can be retrieved. 
In line 3612  	 */ 
In line 3614  	/* set up the current tuple pointer for SQLFetch */ 
In line 3619  	/* set up the current tuple pointer for SQLFetch */ 
In line 3633  /* 
In line 3634   *	SQLPrimaryKeys() 
In line 3635   * 
In line 3636   *	Retrieve the primary key columns for the specified table. 
In line 3637   */ 
In line 3641  			const SQLCHAR FAR * szTableQualifier, /* OA X*/ 
In line 3643  			const SQLCHAR FAR * szTableOwner, /* OA E*/ 
In line 3645  			const SQLCHAR FAR * szTableName, /* OA(R) E*/ 
In line 3687  	/* the binding structure for a statement is not set up until  
In line 3688  	 * 
In line 3689  	 * a statement is actually executed, so we'll have to do this 
In line 3690  	 * ourselves. 
In line 3691  	 */ 
In line 3696  	/* set the field names */ 
In line 3718  #endif /* UNICODE_SUPPORT */ 
In line 3802  				/* 
In line 3803  				 * Simplified query to remove assumptions about number of 
In line 3804  				 * possible index columns. Courtesy of Tom Lane - thomas 
In line 3805  				 * 2000-03-21 
In line 3806  				 */ 
In line 3872  				/* 
In line 3873  				 * Simplified query to search old fashoned primary key 
In line 3874  				 */ 
In line 3916  	/* If not found */ 
In line 3935  		/* 
In line 3936  		 * I have to hide the table owner from Access, otherwise it 
In line 3937  		 * insists on referring to the table as 'owner.table'. (this is 
In line 3938  		 * valid according to the ODBC SQL grammar, but Postgres won't 
In line 3939  		 * support it.) 
In line 3940  		 */ 
In line 3967  	/* 
In line 3968  	 * also, things need to think that this statement is finished so the 
In line 3969  	 * results can be retrieved. 
In line 3970  	 */ 
In line 3982  	/* set up the current tuple pointer for SQLFetch */ 
In line 3994  /* 
In line 3995   *	Multibyte support stuff for SQLForeignKeys(). 
In line 3996   *	There may be much more effective way in the 
In line 3997   *	future version. The way is very forcible currently. 
In line 3998   */ 
In line 4058  	/* restore the cleint encoding */ 
In line 4080                  const SQLCHAR FAR * szPkTableQualifier, /* OA X*/ 
In line 4082                  const SQLCHAR FAR * szPkTableOwner, /* OA E*/ 
In line 4084                  const SQLCHAR FAR * szPkTableName, /* OA(R) E*/ 
In line 4086                  const SQLCHAR FAR * szFkTableQualifier, /* OA X*/ 
In line 4088                  const SQLCHAR FAR * szFkTableOwner, /* OA E*/ 
In line 4090                  const SQLCHAR FAR * szFkTableName, /* OA(R) E*/ 
In line 4096  			const SQLCHAR FAR * szPkTableQualifier, /* OA X*/ 
In line 4098  			const SQLCHAR FAR * szPkTableOwner, /* OA E*/ 
In line 4100  			const SQLCHAR FAR * szPkTableName, /* OA(R) E*/ 
In line 4102  			const SQLCHAR FAR * szFkTableQualifier, /* OA X*/ 
In line 4104  			const SQLCHAR FAR * szFkTableOwner, /* OA E*/ 
In line 4106  			const SQLCHAR FAR * szFkTableName, /* OA(R) E*/ 
In line 4166  	/* the binding structure for a statement is not set up until */ 
In line 4168  	/* 
In line 4169  	 * a statement is actually executed, so we'll have to do this 
In line 4170  	 * ourselves. 
In line 4171  	 */ 
In line 4176  	/* set the field names */ 
In line 4193  #endif   /* ODBCVER >= 0x0300 */ 
In line 4196  	/* 
In line 4197  	 * also, things need to think that this statement is finished so the 
In line 4198  	 * results can be retrieved. 
In line 4199  	 */ 
In line 4202  	/* set up the current tuple pointer for SQLFetch */ 
In line 4227  #endif /* UNICODE_SUPPORT */ 
In line 4231  	/* 
In line 4232  	 * Case #2 -- Get the foreign keys in the specified table (fktab) that 
In line 4233  	 * refer to the primary keys of other table(s). 
In line 4234  	 */ 
In line 4451  			/* Compute the number of keyparts. */ 
In line 4456  			/* If there is a pk table specified, then check it. */ 
In line 4459  				/* If it doesn't match, then continue */ 
In line 4475  			/* Get to first primary key */ 
In line 4482  				/* Check that the key listed is the primary key */ 
In line 4504  				/* Get to next primary key */ 
In line 4511  			/* Set to first fk column */ 
In line 4516  			/* Set update and delete actions for foreign keys */ 
In line 4540  			/* Set deferrability type */ 
In line 4547  #endif   /* ODBCVER >= 0x0300 */ 
In line 4549  			/* Get to first primary key */ 
In line 4581  #endif   /* ODBCVER >= 0x0300 */ 
In line 4590  				/* next primary/foreign key */ 
In line 4602  	/* 
In line 4603  	 * Case #1 -- Get the foreign keys in other tables that refer to the 
In line 4604  	 * primary key in the specified table (pktab).	i.e., Who points to 
In line 4605  	 * me? 
In line 4606  	 */ 
In line 4804  		/* 
In line 4805  		 *	get pk_name here 
In line 4806  		 */ 
In line 4831  			/* Calculate the number of key parts */ 
In line 4834  			/* Handle action (i.e., 'cascade', 'restrict', 'setnull') */ 
In line 4858  			/* Set deferrability type */ 
In line 4865  #endif   /* ODBCVER >= 0x0300 */ 
In line 4869  			/* Get to first primary key */ 
In line 4874  			/* Get to first foreign key */ 
In line 4914  #endif   /* ODBCVER >= 0x0300 */ 
In line 4923  				/* next primary/foreign key */ 
In line 4942  	/* 
In line 4943  	 * also, things need to think that this statement is finished so the 
In line 4944  	 * results can be retrieved. 
In line 4945  	 */ 
In line 4966  	/* set up the current tuple pointer for SQLFetch */ 
In line 4980  			const SQLCHAR FAR * szPkTableQualifier, /* OA X*/ 
In line 4982  			const SQLCHAR FAR * szPkTableOwner, /* OA E*/ 
In line 4984  			const SQLCHAR FAR * szPkTableName, /* OA(R) E*/ 
In line 4986  			const SQLCHAR FAR * szFkTableQualifier, /* OA X*/ 
In line 4988  			const SQLCHAR FAR * szFkTableOwner, /* OA E*/ 
In line 4990  			const SQLCHAR FAR * szFkTableName, /* OA(R) E*/ 
In line 5018  				const SQLCHAR FAR * szProcQualifier, /* OA X*/ 
In line 5020  				const SQLCHAR FAR * szProcOwner, /* PV E*/ 
In line 5022  				const SQLCHAR FAR * szProcName, /* PV E*/ 
In line 5024  				const SQLCHAR FAR * szColumnName, /* PV X*/ 
In line 5083  #endif /* PRORET_COUNT */ 
In line 5105  #endif /* PRORET_COUNT */ 
In line 5143  	/* 
In line 5144  	 * the binding structure for a statement is not set up until 
In line 5145  	 * a statement is actually executed, so we'll have to do this 
In line 5146  	 * ourselves. 
In line 5147  	 */ 
In line 5152  	/* set the field names */ 
In line 5174  #endif   /* ODBCVER >= 0x0300 */ 
In line 5177  	if (column_name) /* column_name is unavailable now */ 
In line 5211  #ifdef	DISPLAY_ARGNAME /* !! named parameter is unavailable !! */ 
In line 5214  #endif /* DISPLAY_ARGNAME */ 
In line 5218  			/* RETURN_VALUE info */  
In line 5243  #endif   /* ODBCVER >= 0x0300 */ 
In line 5272  			/* PARAMETERS info */ 
In line 5275  				/* PG type of parameters */ 
In line 5290  				/* input/output type of parameters */ 
In line 5298  				/* name of parameters */ 
In line 5316  					if (proargnames && '\0' == *delim) /* discard the incomplete name */ 
In line 5369  #endif   /* ODBCVER >= 0x0300 */ 
In line 5372  		/* RESULT Columns info */ 
In line 5409  #endif   /* ODBCVER >= 0x0300 */ 
In line 5413  	/* 
In line 5414  	 * also, things need to think that this statement is finished so the 
In line 5415  	 * results can be retrieved. 
In line 5416  	 */ 
In line 5422  	/* set up the current tuple pointer for SQLFetch */ 
In line 5434  				 const SQLCHAR FAR * szProcQualifier, /* OA X*/ 
In line 5436  				 const SQLCHAR FAR * szProcOwner, /* PV E*/ 
In line 5438  				 const SQLCHAR FAR * szProcName, /* PV E*/ 
In line 5475  	/* 
In line 5476  	 * The following seems the simplest implementation 
In line 5477  	 */ 
In line 5516  	/* 
In line 5517  	 * also, things need to think that this statement is finished so the 
In line 5518  	 * results can be retrieved. 
In line 5519  	 */ 
In line 5526  	/* set up the current tuple pointer for SQLFetch */ 
In line 5584  				const SQLCHAR FAR * szTableQualifier, /* OA X*/ 
In line 5586  				const SQLCHAR FAR * szTableOwner, /* PV E*/ 
In line 5588  				const SQLCHAR FAR * szTableName, /* PV E*/ 
In line 5614  	/* 
In line 5615  	 * a statement is actually executed, so we'll have to do this 
In line 5616  	 * ourselves. 
In line 5617  	 */ 
In line 5622  	/* set the field names */ 
In line 5634  	/* 
In line 5635  	 * also, things need to think that this statement is finished so the 
In line 5636  	 * results can be retrieved. 
In line 5637  	 */ 
In line 5639  	/* set up the current tuple pointer for SQLFetch */ 
In line 5696  	/* If not found */ 
In line 5752  			if (grpauth) /* handle group privilege */ 
In line 5792  		/* The owner has all privileges */ 
In line 5799  			/* Super user has all privileges */ 
In line 5808  					case 'R': /* rule */ 
In line 5809  					case 't': /* trigger */ 
In line 5846  				/* The owner and the super user are grantable */ 
In line 5875  		const SQLCHAR FAR * szPkTableQualifier, /* OA X*/ 
In line 5877  		const SQLCHAR FAR * szPkTableOwner, /* OA E*/ 
In line 5879  		const SQLCHAR FAR * szPkTableName, /* OA(R) E*/ 
In line 5881  		const SQLCHAR FAR * szFkTableQualifier, /* OA X*/ 
In line 5883  		const SQLCHAR FAR * szFkTableOwner, /* OA E*/ 
In line 5885  		const SQLCHAR FAR * szFkTableName, /* OA(R) E*/ 
In line 5917  	/* 
In line 5918  	 * Case #2 -- Get the foreign keys in the specified table (fktab) that 
In line 5919  	 * refer to the primary keys of other table(s). 
In line 5920  	 */ 
In line 5928  	/* 
In line 5929  	 * Case #1 -- Get the foreign keys in other tables that refer to the 
In line 5930  	 * primary key in the specified table (pktab).	i.e., Who points to 
In line 5931  	 * me? 
In line 5932  	 */ 
In line 5993  #endif /* ODBCVER */ 
In line 6043  #endif /* ODBCVER */ 
In line 6101  #endif /* ODBCVER */ 
In line 6141  #endif /* ODBCVER */ 
In line 6157  	/* 
In line 6158  	 * also, things need to think that this statement is finished so the 
In line 6159  	 * results can be retrieved. 
In line 6160  	 */ 
In line 6172  	/* set up the current tuple pointer for SQLFetch */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\info30.c  for analysis => 
In line 0  /*------- 
In line 1   * Module:			info30.c 
In line 2   * 
In line 3   * Description:		This module contains routines related to ODBC 3.0 
In line 4   *			SQLGetInfo(). 
In line 5   * 
In line 6   */ 
In line 40  			value = SQL_CA1_NEXT; /* others aren't allowed in ODBC spec */ 
In line 74  				/*| SQL_CA2_CRC_APPROXIMATE*/ 
In line 249  			if (PG_VERSION_GT(conn, 7.2)) /* hopefully */ 
In line 259  			if (PG_VERSION_GT(conn, 7.2)) /* hopefully */ 
In line 360  		/* The followings aren't implemented yet */ 
In line 374  			/* unrecognized key */ 
In line 382  		/* char/binary data */ 
In line 394  #endif /* UNICODE_SUPPORT */ 
In line 406  #endif /* UNICODE_SUPPORT */ 
In line 410  		/* numeric data */ 
In line 424  #endif /* ODBCVER >= 0x0300 */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\inouealc.c  for analysis => 
In line 5  /* #include	<stdlib.h> */ 
In line 10  #endif /* _DEBUG */ 
In line 11  #endif /* WIN32 */ 
In line 94  	else /* if (alloced != ptr) */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\loadlib.c  for analysis => 
In line 0  /*------ 
In line 1   * Module:			loadlib.c 
In line 2   * 
In line 3   * Description:		This module contains routines related to 
In line 4   *			delay load import libraries. 
In line 5   *			 
In line 6   * Comments:		See "readme.txt" for copyright and license information. 
In line 7   *------- 
In line 8   */ 
In line 15  #endif /* WIN32 */ 
In line 21  #endif /* RESET_CRYPTO_CALLBACKS */ 
In line 23  #endif /* NOT_USE_LIBPQ */ 
In line 34  #endif /* RESET_CRYPTO_CALLBACKS */ 
In line 35  #endif /* NOT_USE_LIBPQ */ 
In line 41  #endif /* UNICODE_SUPPORT */ 
In line 42  #endif /* _HANDLE_ENLIST_IN_DTC_ */ 
In line 43  // The followings works under VC++6.0 but doesn't work under VC++7.0. 
In line 44  // Please add the equivalent linker options using command line etc. 
In line 45  #if (_MSC_VER == 1200) && defined(DYNAMIC_LOAD) // VC6.0 
In line 51  #endif /* RESET_CRYPTO_CALLBACKS */ 
In line 52  #endif /* NOT_USE_LIBPQ */ 
In line 57  #endif /* UNICODE_SUPPORT */ 
In line 59  #endif /* _MSC_VER */ 
In line 60  #endif /* _MSC_VER */ 
In line 69  #endif /* _WIN64 */ 
In line 76  #endif /* UNICODE_SUPPORT */ 
In line 79  #endif /* MSC_VER */ 
In line 80  #endif /* DYNAMIC_LOAD */ 
In line 81  #endif /* WIN32 */ 
In line 88  #endif /* _WIN64 */ 
In line 94  #endif /* NOT_USE_LIBPQ */ 
In line 99  /* 
In line 100   *	Load psqlodbc path based libpq dll. 
In line 101   */ 
In line 124  /* 
In line 125   *	Error hook function for delay load import. 
In line 126   *	Try to load psqlodbc path based libpq. 
In line 127   *	Load alternative ssl library SSLEAY32 or LIBSSL32.  
In line 128   */ 
In line 135  #endif /* _MSC_VER */ 
In line 154  #endif /* _MSC_VER */ 
In line 177  #endif /* NOT_USE_LIBPQ */ 
In line 200  #endif /* USE_GSS */ 
In line 216  /* 
In line 217   *	unload delay loaded libraries. 
In line 218   * 
In line 219   *	Openssl Library nmake defined 
In line 220   *	ssleay32.dll is vc make, libssl32.dll is mingw make. 
In line 221   */ 
In line 224  #endif /* SSL_DLL */ 
In line 230  #if (_MSC_VER < 1300) /* VC6 DELAYLOAD IMPORT */ 
In line 235  	/* The dll names are case sensitive for the unload helper */ 
In line 239  		/* 
In line 240  		 *	May be needed to avoid crash on exit 
In line 241  		 *	when libpq doesn't reset the callbacks. 
In line 242  		 */ 
In line 248  #endif /* RESET_CRYPTO_CALLBACKS */ 
In line 274  #endif	/* _MSC_DELAY_LOAD_IMPORT */ 
In line 288  #endif /* _MSC_DELAY_LOAD_IMPORT */ 
In line 302  #endif /* _MSC_VER */ 
In line 320  #endif /* HAVE_LIBLTDL */ 
In line 321  #endif /* _MSC_DELAY_LOAD_IMPORT */ 
In line 339  #endif /* _MSC_VER */ 
In line 360  #endif /* HAVE_LIBLTDL */ 
In line 361  #endif /* _MSC_DELAY_LOAD_IMPORT */ 
In line 379  #endif /* _MSC_VER */ 
In line 390  #endif /* _MSC_VER */ 
In line 394  		/* ssllibs are already loaded by libpq 
In line 395  		if (PQgetssl(pqconn)) 
In line 396  			loaded_ssllib = TRUE; 
In line 397  		*/ 
In line 401  #endif /* _MSC_DELAY_LOAD_IMPORT */ 
In line 417  #endif /* _MSC_VER */ 
In line 428  #endif /* _MSC_VER */ 
In line 432  		/* ssllibs are already loaded by libpq 
In line 433  		if (PQgetssl(pqconn)) 
In line 434  			loaded_ssllib = TRUE; 
In line 435  		*/ 
In line 439  #endif /* _MSC_DELAY_LOAD_IMPORT */ 
In line 451  #endif /* NOT_USE_LIBPQ */ 
In line 467  #endif /* _MSC_VER */ 
In line 479  #endif /* _MSC_VER */ 
In line 483  #endif /* _MSC_DELAY_LOAD_IMPORT */ 
In line 498  #endif /* _HANDLE_ENLIST_IN_DTC_ */ 
In line 507  	/* First search the driver's folder */ 
In line 510  		/* Second try the PATH ordinarily */ 
In line 513  #endif /* NOT_USE_LIBPQ */ 
In line 520  #endif /* USE_SSPI */ 
In line 530  #endif	/* WIN_DYN_LOAD */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\lobj.c  for analysis => 
In line 0  /*-------- 
In line 1   * Module:			lobj.c 
In line 2   * 
In line 3   * Description:		This module contains routines related to manipulating 
In line 4   *					large objects. 
In line 5   * 
In line 6   * Classes:			none 
In line 7   * 
In line 8   * API functions:	none 
In line 9   * 
In line 10   * Comments:		See "readme.txt" for copyright and license information. 
In line 11   *-------- 
In line 12   */ 
In line 30  		return 0;				/* invalid oid */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\md5.c  for analysis => 
In line 0  /* 
In line 1   *	md5.c 
In line 2   * 
In line 3   *	Implements	the  MD5 Message-Digest Algorithm as specified in 
In line 4   *	RFC  1321.	This  implementation  is a simple one, in that it 
In line 5   *	needs  every  input  byte  to  be  buffered  before doing any 
In line 6   *	calculations.  I  do  not  expect  this  file  to be used for 
In line 7   *	general  purpose  MD5'ing  of large amounts of data, only for 
In line 8   *	generating hashed passwords from limited input. 
In line 9   * 
In line 10   *	Sverre H. Huseby <sverrehu@online.no> 
In line 11   * 
In line 12   *	Portions Copyright (c) 1996-2002, PostgreSQL Global Development Group 
In line 13   *	Portions Copyright (c) 1994, Regents of the University of California 
In line 14   */ 
In line 17  /* 
In line 18   *	NOTE: 
In line 19   * 
In line 20   *	This file was copied from backend/libpq once. 
In line 21   */ 
In line 27  /* 
In line 28   *	PRIVATE FUNCTIONS 
In line 29   */ 
In line 32  /* 
In line 33   *	The returned array is allocated using malloc.  the caller should free it 
In line 34   *	when it is no longer needed. 
In line 35   */ 
In line 44  				len_low;		/* 64-bit value split into 32-bit sections */ 
In line 58  	/* pad */ 
In line 63  	/* append length as a 64 bit bitcount */ 
In line 65  	/* split into two 32-bit values */ 
In line 66  	/* we only look at the bottom 32-bits */ 
In line 107  	/* round 1 */ 
In line 108  	a = b + ROT_LEFT((a + F(b, c, d) + X[0] + 0xd76aa478), 7);	/* 1 */ 
In line 109  	d = a + ROT_LEFT((d + F(a, b, c) + X[1] + 0xe8c7b756), 12); /* 2 */ 
In line 110  	c = d + ROT_LEFT((c + F(d, a, b) + X[2] + 0x242070db), 17); /* 3 */ 
In line 111  	b = c + ROT_LEFT((b + F(c, d, a) + X[3] + 0xc1bdceee), 22); /* 4 */ 
In line 112  	a = b + ROT_LEFT((a + F(b, c, d) + X[4] + 0xf57c0faf), 7);	/* 5 */ 
In line 113  	d = a + ROT_LEFT((d + F(a, b, c) + X[5] + 0x4787c62a), 12); /* 6 */ 
In line 114  	c = d + ROT_LEFT((c + F(d, a, b) + X[6] + 0xa8304613), 17); /* 7 */ 
In line 115  	b = c + ROT_LEFT((b + F(c, d, a) + X[7] + 0xfd469501), 22); /* 8 */ 
In line 116  	a = b + ROT_LEFT((a + F(b, c, d) + X[8] + 0x698098d8), 7);	/* 9 */ 
In line 117  	d = a + ROT_LEFT((d + F(a, b, c) + X[9] + 0x8b44f7af), 12); /* 10 */ 
In line 118  	c = d + ROT_LEFT((c + F(d, a, b) + X[10] + 0xffff5bb1), 17);		/* 11 */ 
In line 119  	b = c + ROT_LEFT((b + F(c, d, a) + X[11] + 0x895cd7be), 22);		/* 12 */ 
In line 120  	a = b + ROT_LEFT((a + F(b, c, d) + X[12] + 0x6b901122), 7); /* 13 */ 
In line 121  	d = a + ROT_LEFT((d + F(a, b, c) + X[13] + 0xfd987193), 12);		/* 14 */ 
In line 122  	c = d + ROT_LEFT((c + F(d, a, b) + X[14] + 0xa679438e), 17);		/* 15 */ 
In line 123  	b = c + ROT_LEFT((b + F(c, d, a) + X[15] + 0x49b40821), 22);		/* 16 */ 
In line 125  	/* round 2 */ 
In line 126  	a = b + ROT_LEFT((a + G(b, c, d) + X[1] + 0xf61e2562), 5);	/* 17 */ 
In line 127  	d = a + ROT_LEFT((d + G(a, b, c) + X[6] + 0xc040b340), 9);	/* 18 */ 
In line 128  	c = d + ROT_LEFT((c + G(d, a, b) + X[11] + 0x265e5a51), 14);		/* 19 */ 
In line 129  	b = c + ROT_LEFT((b + G(c, d, a) + X[0] + 0xe9b6c7aa), 20); /* 20 */ 
In line 130  	a = b + ROT_LEFT((a + G(b, c, d) + X[5] + 0xd62f105d), 5);	/* 21 */ 
In line 131  	d = a + ROT_LEFT((d + G(a, b, c) + X[10] + 0x02441453), 9); /* 22 */ 
In line 132  	c = d + ROT_LEFT((c + G(d, a, b) + X[15] + 0xd8a1e681), 14);		/* 23 */ 
In line 133  	b = c + ROT_LEFT((b + G(c, d, a) + X[4] + 0xe7d3fbc8), 20); /* 24 */ 
In line 134  	a = b + ROT_LEFT((a + G(b, c, d) + X[9] + 0x21e1cde6), 5);	/* 25 */ 
In line 135  	d = a + ROT_LEFT((d + G(a, b, c) + X[14] + 0xc33707d6), 9); /* 26 */ 
In line 136  	c = d + ROT_LEFT((c + G(d, a, b) + X[3] + 0xf4d50d87), 14); /* 27 */ 
In line 137  	b = c + ROT_LEFT((b + G(c, d, a) + X[8] + 0x455a14ed), 20); /* 28 */ 
In line 138  	a = b + ROT_LEFT((a + G(b, c, d) + X[13] + 0xa9e3e905), 5); /* 29 */ 
In line 139  	d = a + ROT_LEFT((d + G(a, b, c) + X[2] + 0xfcefa3f8), 9);	/* 30 */ 
In line 140  	c = d + ROT_LEFT((c + G(d, a, b) + X[7] + 0x676f02d9), 14); /* 31 */ 
In line 141  	b = c + ROT_LEFT((b + G(c, d, a) + X[12] + 0x8d2a4c8a), 20);		/* 32 */ 
In line 143  	/* round 3 */ 
In line 144  	a = b + ROT_LEFT((a + H(b, c, d) + X[5] + 0xfffa3942), 4);	/* 33 */ 
In line 145  	d = a + ROT_LEFT((d + H(a, b, c) + X[8] + 0x8771f681), 11); /* 34 */ 
In line 146  	c = d + ROT_LEFT((c + H(d, a, b) + X[11] + 0x6d9d6122), 16);		/* 35 */ 
In line 147  	b = c + ROT_LEFT((b + H(c, d, a) + X[14] + 0xfde5380c), 23);		/* 36 */ 
In line 148  	a = b + ROT_LEFT((a + H(b, c, d) + X[1] + 0xa4beea44), 4);	/* 37 */ 
In line 149  	d = a + ROT_LEFT((d + H(a, b, c) + X[4] + 0x4bdecfa9), 11); /* 38 */ 
In line 150  	c = d + ROT_LEFT((c + H(d, a, b) + X[7] + 0xf6bb4b60), 16); /* 39 */ 
In line 151  	b = c + ROT_LEFT((b + H(c, d, a) + X[10] + 0xbebfbc70), 23);		/* 40 */ 
In line 152  	a = b + ROT_LEFT((a + H(b, c, d) + X[13] + 0x289b7ec6), 4); /* 41 */ 
In line 153  	d = a + ROT_LEFT((d + H(a, b, c) + X[0] + 0xeaa127fa), 11); /* 42 */ 
In line 154  	c = d + ROT_LEFT((c + H(d, a, b) + X[3] + 0xd4ef3085), 16); /* 43 */ 
In line 155  	b = c + ROT_LEFT((b + H(c, d, a) + X[6] + 0x04881d05), 23); /* 44 */ 
In line 156  	a = b + ROT_LEFT((a + H(b, c, d) + X[9] + 0xd9d4d039), 4);	/* 45 */ 
In line 157  	d = a + ROT_LEFT((d + H(a, b, c) + X[12] + 0xe6db99e5), 11);		/* 46 */ 
In line 158  	c = d + ROT_LEFT((c + H(d, a, b) + X[15] + 0x1fa27cf8), 16);		/* 47 */ 
In line 159  	b = c + ROT_LEFT((b + H(c, d, a) + X[2] + 0xc4ac5665), 23); /* 48 */ 
In line 161  	/* round 4 */ 
In line 162  	a = b + ROT_LEFT((a + I(b, c, d) + X[0] + 0xf4292244), 6);	/* 49 */ 
In line 163  	d = a + ROT_LEFT((d + I(a, b, c) + X[7] + 0x432aff97), 10); /* 50 */ 
In line 164  	c = d + ROT_LEFT((c + I(d, a, b) + X[14] + 0xab9423a7), 15);		/* 51 */ 
In line 165  	b = c + ROT_LEFT((b + I(c, d, a) + X[5] + 0xfc93a039), 21); /* 52 */ 
In line 166  	a = b + ROT_LEFT((a + I(b, c, d) + X[12] + 0x655b59c3), 6); /* 53 */ 
In line 167  	d = a + ROT_LEFT((d + I(a, b, c) + X[3] + 0x8f0ccc92), 10); /* 54 */ 
In line 168  	c = d + ROT_LEFT((c + I(d, a, b) + X[10] + 0xffeff47d), 15);		/* 55 */ 
In line 169  	b = c + ROT_LEFT((b + I(c, d, a) + X[1] + 0x85845dd1), 21); /* 56 */ 
In line 170  	a = b + ROT_LEFT((a + I(b, c, d) + X[8] + 0x6fa87e4f), 6);	/* 57 */ 
In line 171  	d = a + ROT_LEFT((d + I(a, b, c) + X[15] + 0xfe2ce6e0), 10);		/* 58 */ 
In line 172  	c = d + ROT_LEFT((c + I(d, a, b) + X[6] + 0xa3014314), 15); /* 59 */ 
In line 173  	b = c + ROT_LEFT((b + I(c, d, a) + X[13] + 0x4e0811a1), 21);		/* 60 */ 
In line 174  	a = b + ROT_LEFT((a + I(b, c, d) + X[4] + 0xf7537e82), 6);	/* 61 */ 
In line 175  	d = a + ROT_LEFT((d + I(a, b, c) + X[11] + 0xbd3af235), 10);		/* 62 */ 
In line 176  	c = d + ROT_LEFT((c + I(d, a, b) + X[2] + 0x2ad7d2bb), 15); /* 63 */ 
In line 177  	b = c + ROT_LEFT((b + I(c, d, a) + X[9] + 0xeb86d391), 21); /* 64 */ 
In line 260  /* 
In line 261   *	PUBLIC FUNCTIONS 
In line 262   */ 
In line 264  /* 
In line 265   *	md5_hash 
In line 266   * 
In line 267   *	Calculates the MD5 sum of the bytes in a buffer. 
In line 268   * 
In line 269   *	SYNOPSIS	  #include "crypt.h" 
In line 270   *				  int md5_hash(const void *buff, size_t len, char *hexsum) 
In line 271   * 
In line 272   *	INPUT		  buff	  the buffer containing the bytes that you want 
In line 273   *						  the MD5 sum of. 
In line 274   *				  len	  number of bytes in the buffer. 
In line 275   * 
In line 276   *	OUTPUT		  hexsum  the MD5 sum as a '\0'-terminated string of 
In line 277   *						  hexadecimal digits.  an MD5 sum is 16 bytes long. 
In line 278   *						  each byte is represented by two heaxadecimal 
In line 279   *						  characters.  you thus need to provide an array 
In line 280   *						  of 33 characters, including the trailing '\0'. 
In line 281   * 
In line 282   *	RETURNS		  false on failure (out of memory for internal buffers) or 
In line 283   *				  true on success. 
In line 284   * 
In line 285   *	STANDARDS	  MD5 is described in RFC 1321. 
In line 286   * 
In line 287   *	AUTHOR		  Sverre H. Huseby <sverrehu@online.no> 
In line 288   * 
In line 289   */ 
In line 304  /* 
In line 305   * Computes MD5 checksum of "passwd" (a null-terminated string) followed 
In line 306   * by "salt" (which need not be null-terminated). 
In line 307   * 
In line 308   * Output format is "md5" followed by a 32-hex-digit MD5 checksum. 
In line 309   * Hence, the output buffer "buf" must be at least 36 bytes long. 
In line 310   * 
In line 311   * Returns TRUE if okay, FALSE on error (out of memory). 
In line 312   */ 
In line 324  	/* 
In line 325  	 * Place salt at the end because it may be known by users trying to 
In line 326  	 * crack the MD5 output. 
In line 327  	 */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\misc.c  for analysis => 
In line 0  /*------- 
In line 1   * Module:			misc.c 
In line 2   * 
In line 3   * Description:		This module contains miscellaneous routines 
In line 4   *					such as for debugging/logging and string functions. 
In line 5   * 
In line 6   * Classes:			n/a 
In line 7   * 
In line 8   * API functions:	none 
In line 9   * 
In line 10   * Comments:		See "readme.txt" for copyright and license information. 
In line 11   *------- 
In line 12   */ 
In line 28  #include <process.h>			/* Byron: is this where Windows keeps def. 
In line 29  								 * of getpid ? */ 
In line 34  /* 
In line 35   *	returns STRCPY_FAIL, STRCPY_TRUNCATED, or #bytes copied 
In line 36   *	(not including null term) 
In line 37   */ 
In line 64  			dst[dst_len - 1] = '\0';	/* truncated */ 
In line 73  /* 
In line 74   * strncpy copies up to len characters, and doesn't terminate 
In line 75   * the destination string if src has len characters or more. 
In line 76   * instead, I want it to copy up to len-1 characters and always 
In line 77   * terminate the destination string. 
In line 78   */ 
In line 86  		/* Just in case, check for special lengths */ 
In line 105  /*------ 
In line 106   *	Create a null terminated string (handling the SQL_NTS thing): 
In line 107   *		1. If buf is supplied, place the string in there 
In line 108   *		   (assumes enough space) and return buf. 
In line 109   *		2. If buf is not supplied, malloc space and return this string 
In line 110   *------ 
In line 111   */ 
In line 145  /*------ 
In line 146   *	Create a null terminated lower-case string if the 
In line 147   *	original string contains upper-case characters. 
In line 148   *	The SQL_NTS length is considered. 
In line 149   *------ 
In line 150   */ 
In line 196  /* 
In line 197   *	Concatenate a single formatted argument to a given buffer handling the SQL_NTS thing. 
In line 198   *	"fmt" must contain somewhere in it the single form '%.*s'. 
In line 199   *	This is heavily used in creating queries for info routines (SQLTables, SQLColumns). 
In line 200   *	This routine could be modified to use vsprintf() to handle multiple arguments. 
In line 201   */ 
In line 222  		/* 
In line 223  		 * Note that this driver assumes the implicit schema is 
In line 224  		 * the CURRENT_SCHEMA() though it doesn't worth the 
In line 225  		 * naming. 
In line 226  		 */ 
In line 265  /* 
In line 266   *	my_strcat1 is a extension of my_strcat. 
In line 267   *	It can have 1 more parameter than my_strcat. 
In line 268   */ 
In line 299  /* 
In line 300   * snprintf_add is a extension to snprintf 
In line 301   * It add format to buf at given pos 
In line 302   */ 
In line 317  /* 
In line 318   * snprintf_addlen is a extension to snprintf 
In line 319   * It returns strlen of buf every time (not -1 when truncated) 
In line 320   */ 
In line 360  #endif /* HAVE_STRLCAT */ 
In line 363  /* 
In line 364   * Proprly quote and escape a possibly schema-qualified table name. 
In line 365   * Returns a statically allocated buffer. 
In line 366   */ 
In line 383  				buf[i++] = '"'; 		/* escape quotes by doubling them */ 
In line 394  			buf[i++] = '"'; 		/* escape quotes by doubling them */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\multibyte.c  for analysis => 
In line 0  /*-------- 
In line 1   * Module :			multibyte.c 
In line 2   * 
In line 3   * Description:		New Mlutibyte related additional function. 
In line 4   * 
In line 5   *					Create 2001-03-03 Eiji Tokuya 
In line 6   *					New Create 2001-09-16 Eiji Tokuya 
In line 7   *-------- 
In line 8   */ 
In line 29  	{ "JOHAB",	JOHAB },	/* since 7.3 */ 
In line 30  	{ "UTF8",	UTF8 },		/* since 7.2 */ 
In line 42  	{ "WIN1256",	WIN1256 },	/* Arabic since 7.3 */ 
In line 43  	{ "WIN1258",	WIN1258 },	/* Vietnamese since 8.1 */ 
In line 44  	{ "WIN866",	WIN866 },	/* since 8.1 */ 
In line 45  	{ "WIN874",	WIN874 },	/* Thai since 7.3 */ 
In line 47  	{ "WIN1251",	WIN1251 },	/* Cyrillic */ 
In line 48  	{ "WIN1252",	WIN1252 },	/* Western Europe since 8.1 */ 
In line 53  	{ "WIN1250",	WIN1250 },	/* Central Europe */ 
In line 54  	{ "WIN1253",	WIN1253 },	/* Greek since 8.2 */ 
In line 55  	{ "WIN1254",	WIN1254 },	/* Turkish since 8.2 */ 
In line 56  	{ "WIN1255",	WIN1255 },	/* Hebrew since 8.2 */ 
In line 57  	{ "WIN1257",	WIN1257 },	/* Baltic(North Europe) since 8.2 */ 
In line 59  	{ "EUC_JIS_2004", EUC_JIS_2004},	/* EUC for SHIFT-JIS-2004 Japanese, since 8.3 */ 
In line 62  	{ "GBK",	GBK },		/* since 7.3 */ 
In line 63  	{ "UHC",	UHC },		/* since 7.3 */	 
In line 64  	{ "GB18030",	GB18030 },	/* since 7.3 */ 
In line 65  	{ "SHIFT_JIS_2004", SHIFT_JIS_2004 },	/* SHIFT-JIS-2004 Japanese, standard JIS X 0213, since 8.3 */ 
In line 259  /* SHIFT_JIS_2004 Support. */ 
In line 277  /* Shift-JIS Support. */ 
In line 291  /* Chinese Big5 Support. */ 
In line 303  /* Chinese GBK Support. */ 
In line 316  /* Korian UHC Support. */ 
In line 330  			/* 0x8f is JIS X 0212 + JIS X 0213(2) 3 byte */ 
In line 331  			/* 0x8e is JIS X 0201 2 byte */ 
In line 332  			/* 0xa0-0xff is JIS X 0213(1) 2 byte */ 
In line 334  			/* 0x8f is JIS X 0212 3 byte */ 
In line 335  			/* 0x8e is JIS X 0201 2 byte */ 
In line 336  			/* 0xa0-0xff is JIS X 0208 2 byte */ 
In line 339  					character == 0x8f)	/* JIS X 0212 */ 
In line 344  					character > 0xa0))	/* Half Katakana HighByte & Kanji HighByte */ 
In line 353  /* EUC_CN, EUC_KR, JOHAB Support */ 
In line 385  			/*Chinese GB18030 support.Added by Bill Huang <bhuang@redhat.com> <bill_huanghb@ybb.ne.jp>*/ 
In line 508  /* 
In line 509   *	This function works under Windows or Unicode case only. 
In line 510   *	Simply returns NULL under other OSs. 
In line 511   */ 
In line 517  #endif /* WIN32 */ 
In line 522  #endif /* UNICODE_SUPPORT */ 
In line 590  #endif /* WIN32 */ 
In line 649  #endif /* UNICODE_SUPPORT */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\mylog.c  for analysis => 
In line 0  /*------- 
In line 1   * Module:			mylog.c 
In line 2   * 
In line 3   * Description:		This module contains miscellaneous routines 
In line 4   *					such as for debugging/logging and string functions. 
In line 5   * 
In line 6   * Classes:			n/a 
In line 7   * 
In line 8   * API functions:	none 
In line 9   * 
In line 10   * Comments:		See "readme.txt" for copyright and license information. 
In line 11   *------- 
In line 12   */ 
In line 34  #include <process.h>			/* Byron: is this where Windows keeps def. 
In line 35  								 * of getpid ? */ 
In line 50  #endif /* WIN32 */ 
In line 99  #endif /* WIN32 */ 
In line 109  #endif /* WIN_MULTITHREAD_SUPPORT */ 
In line 140  #endif /* WIN_MULTITHREAD_SUPPORT */ 
In line 148  #endif /* WIN32 */ 
In line 149  #endif /* MY_LOG */ 
In line 157  #endif /* WIN32 */ 
In line 158  #endif /* QLOG */ 
In line 215  #endif /* WIN32 */ 
In line 219  #endif /* LOGGING_PROCESS_TIME */ 
In line 236  #endif /* LOGGING_PROCESS_TIME */ 
In line 267  #endif /* LOGGING_PROCESS_TIME */ 
In line 268  #endif /* WIN_MULTITHREAD_SUPPORT */ 
In line 271  #endif /* POSIX_MULTITHREAD_SUPPORT */ 
In line 325  #endif /* WIN32 */ 
In line 326  #endif /* WIN_MULTITHREAD_SUPPORT */ 
In line 329  #endif /* POSIX_MULTITHREAD_SUPPORT */ 
In line 354  #endif /* MY_LOG */ 
In line 373  #endif /* LOGGING_PROCESS_TIME */ 
In line 396  #endif /* LOGGING_PROCESS_TIME */ 
In line 422  #endif /* Q_LOG */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\odbcapi.c  for analysis => 
In line 0  /*------- 
In line 1   * Module:			odbcapi.c 
In line 2   * 
In line 3   * Description:		This module contains routines related to 
In line 4   *					preparing and executing an SQL statement. 
In line 5   * 
In line 6   * Classes:			n/a 
In line 7   * 
In line 8   * API functions:	SQLAllocConnect, SQLAllocEnv, SQLAllocStmt, 
In line 9  			SQLBindCol, SQLCancel, SQLColumns, SQLConnect, 
In line 10  			SQLDataSources, SQLDescribeCol, SQLDisconnect, 
In line 11  			SQLError, SQLExecDirect, SQLExecute, SQLFetch, 
In line 12  			SQLFreeConnect, SQLFreeEnv, SQLFreeStmt, 
In line 13  			SQLGetConnectOption, SQLGetCursorName, SQLGetData, 
In line 14  			SQLGetFunctions, SQLGetInfo, SQLGetStmtOption, 
In line 15  			SQLGetTypeInfo, SQLNumResultCols, SQLParamData, 
In line 16  			SQLPrepare, SQLPutData, SQLRowCount, 
In line 17  			SQLSetConnectOption, SQLSetCursorName, SQLSetParam, 
In line 18  			SQLSetStmtOption, SQLSpecialColumns, SQLStatistics, 
In line 19  			SQLTables, SQLTransact, SQLColAttributes, 
In line 20  			SQLColumnPrivileges, SQLDescribeParam, SQLExtendedFetch, 
In line 21  			SQLForeignKeys, SQLMoreResults, SQLNativeSql, 
In line 22  			SQLNumParams, SQLParamOptions, SQLPrimaryKeys, 
In line 23  			SQLProcedureColumns, SQLProcedures, SQLSetPos, 
In line 24  			SQLTablePrivileges, SQLBindParameter 
In line 25   *------- 
In line 26   */ 
In line 80  #endif /* ODBCVER */ 
In line 109  	/* Not that neither ENTER_STMT_CS nor StartRollbackState is called */ 
In line 110  	/* SC_clear_error((StatementClass *) StatementHandle); maybe this neither */ 
In line 157  		if (SC_is_lower_case(stmt, conn)) /* case-insensitive identifier */ 
In line 273  	/* 
In line 274  	 * return PGAPI_DataSources(EnvironmentHandle, Direction, ServerName, 
In line 275  	 * BufferLength1, NameLength1, Description, BufferLength2, 
In line 276  	 * NameLength2); 
In line 277  	 */ 
In line 302  #endif /* UNICODE_SUPPORTXX */ 
In line 315  #endif /* _HANDLE_ENLIST_IN_DTC_ */ 
In line 343  #endif /* ODBCVER */ 
In line 450  #endif /* ODBCVER */  
In line 506  #endif /* ODBCVER */ 
In line 625  #endif /* ODBCVER */ 
In line 755  #endif /* ODBCVER */ 
In line 784  	/* 
In line 785  	 * return PGAPI_SetParam(StatementHandle, ParameterNumber, ValueType, 
In line 786  	 * ParameterType, LengthPrecision, ParameterScale, ParameterValue, 
In line 787  	 * StrLen_or_Ind); 
In line 788  	 */ 
In line 809  #endif /* ODBCVER */ 
In line 840  		if (SC_is_lower_case(stmt, conn)) /* case-insensitive identifier */ 
In line 903  		if (SC_is_lower_case(stmt, conn)) /* case-insensitive identifier */ 
In line 971  		if (SC_is_lower_case(stmt, conn)) /* case-insensitive identifier */ 
In line 1049  #endif /* ODBCVER */ 
In line 1090  		if (SC_is_lower_case(stmt, conn)) /* case-insensitive identifier */ 
In line 1164  #endif /* WITH_UNIXODBC */ 
In line 1184  #endif /* WITH_UNIXODBC */ 
In line 1232  		if (SC_is_lower_case(stmt, conn)) /* case-insensitive identifier */ 
In line 1364  #endif /* ODBCVER */ 
In line 1397  		if (SC_is_lower_case(stmt, conn)) /* case-insensitive identifier */ 
In line 1470  		if (SC_is_lower_case(stmt, conn)) /* case-insensitive identifier */ 
In line 1549  		if (SC_is_lower_case(stmt, conn)) /* case-insensitive identifier */ 
In line 1639  		if (SC_is_lower_case(stmt, conn)) /* case-insensitive identifier */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\odbcapi25w.c  for analysis => 
In line 0  /*------- 
In line 1   * Module:			odbcapi25w.c 
In line 2   * 
In line 3   * Description:		This module contains UNICODE routines 
In line 4   * 
In line 5   * Classes:			n/a 
In line 6   * 
In line 7   * API functions:	SQLColAttributesW, SQLErrorW, SQLGetConnectOptionW, 
In line 8  			SQLSetConnectOptionW 
In line 9   *------- 
In line 10   */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\odbcapi30.c  for analysis => 
In line 0  /*------- 
In line 1   * Module:			odbcapi30.c 
In line 2   * 
In line 3   * Description:		This module contains routines related to ODBC 3.0 
In line 4   *			most of their implementations are temporary 
In line 5   *			and must be rewritten properly. 
In line 6   *			2001/07/23	inoue 
In line 7   * 
In line 8   * Classes:			n/a 
In line 9   * 
In line 10   * API functions:	SQLAllocHandle, SQLBindParam, SQLCloseCursor, 
In line 11  			SQLColAttribute, SQLCopyDesc, SQLEndTran, 
In line 12  			SQLFetchScroll, SQLFreeHandle, SQLGetDescField, 
In line 13  			SQLGetDescRec, SQLGetDiagField, SQLGetDiagRec, 
In line 14  			SQLGetEnvAttr, SQLGetConnectAttr, SQLGetStmtAttr, 
In line 15  			SQLSetConnectAttr, SQLSetDescField, SQLSetDescRec, 
In line 16  			SQLSetEnvAttr, SQLSetStmtAttr, SQLBulkOperations 
In line 17   *------- 
In line 18   */ 
In line 32  /*	SQLAllocConnect/SQLAllocEnv/SQLAllocStmt -> SQLAllocHandle */ 
In line 74  /*	SQLBindParameter/SQLSetParam -> SQLBindParam */ 
In line 85  	int			BufferLength = 512;		/* Is it OK ? */ 
In line 97  /*	New function */ 
In line 115  /*	SQLColAttributes -> SQLColAttribute */ 
In line 146  /*	new function */ 
In line 159  /*	SQLTransact -> SQLEndTran */ 
In line 189  /*	SQLExtendedFetch -> SQLFetchScroll */ 
In line 235  /*	SQLFree(Connect/Env/Stmt) -> SQLFreeHandle */ 
In line 280  /*	new function */ 
In line 295  /*	new function */ 
In line 309  /*	new function */ 
In line 325  /*	SQLError -> SQLDiagRec */ 
In line 340  /*	new function */ 
In line 375  /*	SQLGetConnectOption -> SQLGetconnectAttr */ 
In line 393  /*	SQLGetStmtOption -> SQLGetStmtAttr */ 
In line 414  /*	SQLSetConnectOption -> SQLSetConnectAttr */ 
In line 432  #endif /* UNICODE_SUPPORTXX */ 
In line 434  /*	new function */ 
In line 448  /*	new fucntion */ 
In line 464  /*	new function */ 
In line 489  #endif /* WIN_MULTITHREAD_SUPPORT */ 
In line 495  			/* *((unsigned int *) Value) = SQL_CP_RELAXED_MATCH; */ 
In line 526  /*	SQLSet(Param/Scroll/Stmt)Option -> SQLSetStmtAttr */ 
In line 545  #endif /* UNICODE_SUPPORTXX */ 
In line 564  	/* SQL_FUNC_ESET(pfExists, SQL_API_SQLALLOCCONNECT); 1 deprecated */ 
In line 565  	/* SQL_FUNC_ESET(pfExists, SQL_API_SQLALLOCENV); 2 deprecated */ 
In line 566  	/* SQL_FUNC_ESET(pfExists, SQL_API_SQLALLOCSTMT); 3 deprecated */ 
In line 568  	/* 
In line 569  	 * for (i = SQL_API_SQLBINDCOL; i <= 23; i++) SQL_FUNC_ESET(pfExists, 
In line 570  	 * i); 
In line 571  	 */ 
In line 572  	SQL_FUNC_ESET(pfExists, SQL_API_SQLBINDCOL);		/* 4 */ 
In line 573  	SQL_FUNC_ESET(pfExists, SQL_API_SQLCANCEL);		/* 5 */ 
In line 574  	SQL_FUNC_ESET(pfExists, SQL_API_SQLCOLATTRIBUTE);	/* 6 */ 
In line 575  	SQL_FUNC_ESET(pfExists, SQL_API_SQLCONNECT);		/* 7 */ 
In line 576  	SQL_FUNC_ESET(pfExists, SQL_API_SQLDESCRIBECOL);	/* 8 */ 
In line 577  	SQL_FUNC_ESET(pfExists, SQL_API_SQLDISCONNECT);		/* 9 */ 
In line 578  	/* SQL_FUNC_ESET(pfExists, SQL_API_SQLERROR);  10 deprecated */ 
In line 579  	SQL_FUNC_ESET(pfExists, SQL_API_SQLEXECDIRECT);		/* 11 */ 
In line 580  	SQL_FUNC_ESET(pfExists, SQL_API_SQLEXECUTE);		/* 12 */ 
In line 581  	SQL_FUNC_ESET(pfExists, SQL_API_SQLFETCH);	/* 13 */ 
In line 582  	/* SQL_FUNC_ESET(pfExists, SQL_API_SQLFREECONNECT); 14 deprecated */ 
In line 583  	/* SQL_FUNC_ESET(pfExists, SQL_API_SQLFREEENV); 15 deprecated */ 
In line 584  	SQL_FUNC_ESET(pfExists, SQL_API_SQLFREESTMT);		/* 16 */ 
In line 585  	SQL_FUNC_ESET(pfExists, SQL_API_SQLGETCURSORNAME);	/* 17 */ 
In line 586  	SQL_FUNC_ESET(pfExists, SQL_API_SQLNUMRESULTCOLS);	/* 18 */ 
In line 587  	SQL_FUNC_ESET(pfExists, SQL_API_SQLPREPARE);		/* 19 */ 
In line 588  	SQL_FUNC_ESET(pfExists, SQL_API_SQLROWCOUNT);		/* 20 */ 
In line 589  	SQL_FUNC_ESET(pfExists, SQL_API_SQLSETCURSORNAME);	/* 21 */ 
In line 590  	/* SQL_FUNC_ESET(pfExists, SQL_API_SQLSETPARAM); 22 deprecated */ 
In line 591  	/* SQL_FUNC_ESET(pfExists, SQL_API_SQLTRANSACT); 23 deprecated */ 
In line 593  	/* 
In line 594  	 * for (i = 40; i < SQL_API_SQLEXTENDEDFETCH; i++) 
In line 595  	 * SQL_FUNC_ESET(pfExists, i); 
In line 596  	 */ 
In line 597  	SQL_FUNC_ESET(pfExists, SQL_API_SQLCOLUMNS);		/* 40 */ 
In line 598  	SQL_FUNC_ESET(pfExists, SQL_API_SQLDRIVERCONNECT);	/* 41 */ 
In line 599  	/* SQL_FUNC_ESET(pfExists, SQL_API_SQLGETCONNECTOPTION); 42 deprecated */ 
In line 600  	SQL_FUNC_ESET(pfExists, SQL_API_SQLGETDATA);		/* 43 */ 
In line 601  	SQL_FUNC_ESET(pfExists, SQL_API_SQLGETFUNCTIONS);	/* 44 */ 
In line 602  	SQL_FUNC_ESET(pfExists, SQL_API_SQLGETINFO);		/* 45 */ 
In line 603  	/* SQL_FUNC_ESET(pfExists, SQL_API_SQLGETSTMTOPTION); 46 deprecated */ 
In line 604  	SQL_FUNC_ESET(pfExists, SQL_API_SQLGETTYPEINFO);	/* 47 */ 
In line 605  	SQL_FUNC_ESET(pfExists, SQL_API_SQLPARAMDATA);		/* 48 */ 
In line 606  	SQL_FUNC_ESET(pfExists, SQL_API_SQLPUTDATA);		/* 49 */ 
In line 608  	/* SQL_FUNC_ESET(pfExists, SQL_API_SQLSETCONNECTIONOPTION); 50 deprecated */ 
In line 609  	/* SQL_FUNC_ESET(pfExists, SQL_API_SQLSETSTMTOPTION); 51 deprecated */ 
In line 610  	SQL_FUNC_ESET(pfExists, SQL_API_SQLSPECIALCOLUMNS);	/* 52 */ 
In line 611  	SQL_FUNC_ESET(pfExists, SQL_API_SQLSTATISTICS);		/* 53 */ 
In line 612  	SQL_FUNC_ESET(pfExists, SQL_API_SQLTABLES);		/* 54 */ 
In line 614  		SQL_FUNC_ESET(pfExists, SQL_API_SQLBROWSECONNECT);	/* 55 */ 
In line 616  		SQL_FUNC_ESET(pfExists, SQL_API_SQLCOLUMNPRIVILEGES);	/* 56 */ 
In line 617  	SQL_FUNC_ESET(pfExists, SQL_API_SQLDATASOURCES);	/* 57 */ 
In line 619  		SQL_FUNC_ESET(pfExists, SQL_API_SQLDESCRIBEPARAM); /* 58 */ 
In line 620  	SQL_FUNC_ESET(pfExists, SQL_API_SQLEXTENDEDFETCH); /* 59 deprecated ? */ 
In line 622  	/* 
In line 623  	 * for (++i; i < SQL_API_SQLBINDPARAMETER; i++) 
In line 624  	 * SQL_FUNC_ESET(pfExists, i); 
In line 625  	 */ 
In line 626  	SQL_FUNC_ESET(pfExists, SQL_API_SQLFOREIGNKEYS);	/* 60 */ 
In line 627  	SQL_FUNC_ESET(pfExists, SQL_API_SQLMORERESULTS);	/* 61 */ 
In line 628  	SQL_FUNC_ESET(pfExists, SQL_API_SQLNATIVESQL);		/* 62 */ 
In line 629  	SQL_FUNC_ESET(pfExists, SQL_API_SQLNUMPARAMS);		/* 63 */ 
In line 630  	/* SQL_FUNC_ESET(pfExists, SQL_API_SQLPARAMOPTIONS); 64 deprecated */ 
In line 631  	SQL_FUNC_ESET(pfExists, SQL_API_SQLPRIMARYKEYS);	/* 65 */ 
In line 632  	SQL_FUNC_ESET(pfExists, SQL_API_SQLPROCEDURECOLUMNS);	/* 66 */  
In line 633  	SQL_FUNC_ESET(pfExists, SQL_API_SQLPROCEDURES);		/* 67 */ 
In line 634  	SQL_FUNC_ESET(pfExists, SQL_API_SQLSETPOS);		/* 68 */ 
In line 635  	/* SQL_FUNC_ESET(pfExists, SQL_API_SQLSETSCROLLOPTIONS); 69 deprecated */ 
In line 636  	SQL_FUNC_ESET(pfExists, SQL_API_SQLTABLEPRIVILEGES);	/* 70 */ 
In line 637  	/* SQL_FUNC_ESET(pfExists, SQL_API_SQLDRIVERS); */	/* 71 */ 
In line 638  	SQL_FUNC_ESET(pfExists, SQL_API_SQLBINDPARAMETER);	/* 72 */ 
In line 640  	SQL_FUNC_ESET(pfExists, SQL_API_SQLALLOCHANDLE);	/* 1001 */ 
In line 641  	SQL_FUNC_ESET(pfExists, SQL_API_SQLBINDPARAM);		/* 1002 */ 
In line 642  	SQL_FUNC_ESET(pfExists, SQL_API_SQLCLOSECURSOR);	/* 1003 */ 
In line 643  	SQL_FUNC_ESET(pfExists, SQL_API_SQLCOPYDESC);		/* 1004 */ 
In line 644  	SQL_FUNC_ESET(pfExists, SQL_API_SQLENDTRAN);		/* 1005 */ 
In line 645  	SQL_FUNC_ESET(pfExists, SQL_API_SQLFREEHANDLE);		/* 1006 */ 
In line 646  	SQL_FUNC_ESET(pfExists, SQL_API_SQLGETCONNECTATTR);	/* 1007 */ 
In line 647  	SQL_FUNC_ESET(pfExists, SQL_API_SQLGETDESCFIELD); 	/* 1008 */ 
In line 650  		SQL_FUNC_ESET(pfExists, SQL_API_SQLGETDESCREC); /* 1009 not implemented yet */ 
In line 652  	SQL_FUNC_ESET(pfExists, SQL_API_SQLGETDIAGFIELD); /* 1010 minimal implementation */ 
In line 653  	SQL_FUNC_ESET(pfExists, SQL_API_SQLGETDIAGREC);		/* 1011 */ 
In line 654  	SQL_FUNC_ESET(pfExists, SQL_API_SQLGETENVATTR);		/* 1012 */ 
In line 655  	SQL_FUNC_ESET(pfExists, SQL_API_SQLGETSTMTATTR);	/* 1014 */ 
In line 656  	SQL_FUNC_ESET(pfExists, SQL_API_SQLSETCONNECTATTR);	/* 1016 */ 
In line 657  	SQL_FUNC_ESET(pfExists, SQL_API_SQLSETDESCFIELD);	/* 1017 */ 
In line 660  		SQL_FUNC_ESET(pfExists, SQL_API_SQLSETDESCREC); /* 1018 not implemented yet */ 
In line 662  	SQL_FUNC_ESET(pfExists, SQL_API_SQLSETENVATTR);		/* 1019 */ 
In line 663  	SQL_FUNC_ESET(pfExists, SQL_API_SQLSETSTMTATTR);	/* 1020 */ 
In line 664  	SQL_FUNC_ESET(pfExists, SQL_API_SQLFETCHSCROLL);	/* 1021 */ 
In line 666  		SQL_FUNC_ESET(pfExists, SQL_API_SQLBULKOPERATIONS);	/* 24 */ 
In line 687  #endif /* ODBCVER >= 0x0300 */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\odbcapi30w.c  for analysis => 
In line 0  /*------- 
In line 1   * Module:			odbcapi30w.c 
In line 2   * 
In line 3   * Description:		This module contains UNICODE routines 
In line 4   * 
In line 5   * Classes:			n/a 
In line 6   * 
In line 7   * API functions:	SQLColAttributeW, SQLGetStmtAttrW, SQLSetStmtAttrW, 
In line 8   			SQLSetConnectAttrW, SQLGetConnectAttrW, 
In line 9  			SQLGetDescFieldW, SQLGetDescRecW, SQLGetDiagFieldW, 
In line 10  			SQLGetDiagRecW, 
In line 11   *------- 
In line 12   */ 
In line 105  /*      new function */ 
In line 390  #endif /* WIN32 */ 
In line 409  #endif /* ODBCVER >= 0x0300 */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\odbcapiw.c  for analysis => 
In line 0  /*------- 
In line 1   * Module:			odbcapiw.c 
In line 2   * 
In line 3   * Description:		This module contains UNICODE routines 
In line 4   * 
In line 5   * Classes:			n/a 
In line 6   * 
In line 7   * API functions:	SQLColumnPrivilegesW, SQLColumnsW, 
In line 8   			SQLConnectW, SQLDataSourcesW, SQLDescribeColW, 
In line 9  			SQLDriverConnectW, SQLExecDirectW, 
In line 10  			SQLForeignKeysW, 
In line 11  			SQLGetCursorNameW, SQLGetInfoW, SQLNativeSqlW, 
In line 12  			SQLPrepareW, SQLPrimaryKeysW, SQLProcedureColumnsW, 
In line 13  			SQLProceduresW, SQLSetCursorNameW, 
In line 14  			SQLSpecialColumnsW, SQLStatisticsW, SQLTablesW, 
In line 15  			SQLTablePrivilegesW, SQLGetTypeInfoW 
In line 16   *------- 
In line 17   */ 
In line 217  	/* 
In line 218  	return PGAPI_DataSources(EnvironmentHandle, Direction, ServerName, 
In line 219  		 BufferLength1, NameLength1, Description, BufferLength2, 
In line 220             	NameLength2); 
In line 221  	*/ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\options.c  for analysis => 
In line 0  /*-------- 
In line 1   * Module:			options.c 
In line 2   * 
In line 3   * Description:		This module contains routines for getting/setting 
In line 4   *					connection and statement options. 
In line 5   * 
In line 6   * Classes:			n/a 
In line 7   * 
In line 8   * API functions:	SQLSetConnectOption, SQLSetStmtOption, SQLGetConnectOption, 
In line 9   *					SQLGetStmtOption 
In line 10   * 
In line 11   * Comments:		See "readme.txt" for copyright and license information. 
In line 12   *-------- 
In line 13   */ 
In line 44  		case SQL_ASYNC_ENABLE:	/* ignored */ 
In line 48  			/* now support multi-column and multi-row binding */ 
In line 57  			/* 
In line 58  			 * positioned update isn't supported so cursor concurrency is 
In line 59  			 * read-only 
In line 60  			 */ 
In line 88  			/* 
In line 89  			 * if declare/fetch, then type can only be forward. otherwise, 
In line 90  			 * it can only be forward or static. 
In line 91  			 */ 
In line 103  					setval = SQL_CURSOR_STATIC; /* at least scrollable */ 
In line 112  					setval = SQL_CURSOR_STATIC; /* at least scrollable */ 
In line 131  		case SQL_KEYSET_SIZE:	/* ignored, but saved and returned	*/ 
In line 147  		case SQL_MAX_LENGTH:	/* ignored, but saved */ 
In line 161  		case SQL_MAX_ROWS:		/* ignored, but saved */ 
In line 175  		case SQL_NOSCAN:		/* ignored */ 
In line 179  		case SQL_QUERY_TIMEOUT:	/* ignored */ 
In line 181  			/* "0" returned in SQLGetStmtOption */ 
In line 207  		case SQL_SIMULATE_CURSOR:		/* NOT SUPPORTED */ 
In line 223  #endif /* ODBCVER */ 
In line 231  		case 1204: /* SQL_COPT_SS_PRESERVE_CURSORS ? */ 
In line 241  		case 1227: /* SQL_SOPT_SS_HIDDEN_COLUMNS ? */ 
In line 242  		case 1228: /* SQL_SOPT_SS_NOBROWSETABLE ? */ 
In line 249  #endif /* NOT_USED */ 
In line 295  /* Implements only SQL_AUTOCOMMIT */ 
In line 318  			/* 
In line 319  			 * Statement Options (apply to all stmts on the connection and 
In line 320  			 * become defaults for new stmts) 
In line 321  			 */ 
In line 339  				/* Affect all current Statements */ 
In line 346  #endif /* ODBCVER */ 
In line 348  			/* 
In line 349  			 * Become the default for all future statements on this 
In line 350  			 * connection 
In line 351  			 */ 
In line 361  			/* 
In line 362  			 * Connection Options 
In line 363  			 */ 
In line 365  		case SQL_ACCESS_MODE:	/* ignored */ 
In line 394  #endif	/* _HANDLE_ENLIST_IN_DTC_ */ 
In line 398  		case SQL_CURRENT_QUALIFIER:		/* ignored */ 
In line 405  		case SQL_PACKET_SIZE:	/* ignored */ 
In line 408  		case SQL_QUIET_MODE:	/* ignored */ 
In line 486  			/* These options should be handled by driver manager */ 
In line 513  #endif /* UNICODE_SUPPORT */ 
In line 523  #endif /* WIN32 */ 
In line 539  /* This function just can tell you whether you are in Autcommit mode or not */ 
In line 565  		case SQL_ACCESS_MODE:	/* NOT SUPPORTED */ 
In line 573  		case SQL_CURRENT_QUALIFIER:		/* don't use qualifiers */ 
In line 582  		case SQL_PACKET_SIZE:	/* NOT SUPPORTED */ 
In line 586  		case SQL_QUIET_MODE:	/* NOT SUPPORTED */ 
In line 598  #endif /* SQL_ATTR_CONNECTION_DEAD */ 
In line 609  #endif /* ODBCVER */ 
In line 611  			/* These options should be handled by driver manager */ 
In line 634  		/* char/binary data */ 
In line 646  #endif /* UNICODE_SUPPORT */ 
In line 674  	/* 
In line 675  	 * Though we could fake Access out by just returning SQL_SUCCESS all 
In line 676  	 * the time, but it tries to set a huge value for SQL_MAX_LENGTH and 
In line 677  	 * expects the driver to reduce it to the real value. 
In line 678  	 */ 
In line 685  	/* StartRollbackState(stmt); */ 
In line 709  	/* 
In line 710  	 * thought we could fake Access out by just returning SQL_SUCCESS all 
In line 711  	 * the time, but it tries to set a huge value for SQL_MAX_LENGTH and 
In line 712  	 * expects the driver to reduce it to the real value 
In line 713  	 */ 
In line 735  				/* make sure we're positioned on a valid row */ 
In line 762  		case SQL_ASYNC_ENABLE:	/* NOT SUPPORTED */ 
In line 770  		case SQL_CONCURRENCY:	/* NOT REALLY SUPPORTED */ 
In line 775  		case SQL_CURSOR_TYPE:	/* PARTIAL SUPPORT */ 
In line 780  		case SQL_KEYSET_SIZE:	/* NOT SUPPORTED, but saved */ 
In line 785  		case SQL_MAX_LENGTH:	/* NOT SUPPORTED, but saved */ 
In line 789  		case SQL_MAX_ROWS:		/* NOT SUPPORTED, but saved */ 
In line 794  		case SQL_NOSCAN:		/* NOT SUPPORTED */ 
In line 798  		case SQL_QUERY_TIMEOUT:	/* NOT SUPPORTED */ 
In line 810  		case SQL_SIMULATE_CURSOR:		/* NOT SUPPORTED */ 
In line 817  		case 1227: /* SQL_SOPT_SS_HIDDEN_COLUMNS ? */ 
In line 818  		case 1228: /* SQL_SOPT_SS_NOBROWSETABLE ? */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\parse.c  for analysis => 
In line 0  /*-------- 
In line 1   * Module:			parse.c 
In line 2   * 
In line 3   * Description:		This module contains routines related to parsing SQL 
In line 4   *					statements.  This can be useful for two reasons: 
In line 5   * 
In line 6   *					1. So the query does not actually have to be executed 
In line 7   *					to return data about it 
In line 8   * 
In line 9   *					2. To be able to return information about precision, 
In line 10   *					nullability, aliases, etc. in the functions 
In line 11   *					SQLDescribeCol and SQLColAttributes.  Currently, 
In line 12   *					Postgres doesn't return any information about 
In line 13   *					these things in a query. 
In line 14   * 
In line 15   * Classes:			none 
In line 16   * 
In line 17   * API functions:	none 
In line 18   * 
In line 19   * Comments:		See "readme.txt" for copyright and license information. 
In line 20   *-------- 
In line 21   */ 
In line 22  /* Multibyte support	Eiji Tokuya 2001-03-15 */ 
In line 81  	int ccsc, /* client encoding */ 
In line 97  	/* skip leading delimiters */ 
In line 100  		/* mylog("skipping '%c'\n", s[i]); */ 
In line 118  	/* get the next token */ 
In line 129  		/* Handle quoted stuff */ 
In line 170  			i++;				/* dont return the quote */ 
In line 209  		/* Check for numeric literals */ 
In line 240  	/* mylog("done -- s[%d] = '%c'\n", i, s[i]); */ 
In line 244  	/* find the delimiter  */ 
In line 248  	/* return the most priority delimiter */ 
In line 265  	/* skip trailing blanks  */ 
In line 346  /* 
In line 347   *	lower the unquoted name 
In line 348   */ 
In line 358  		/* lower case table name */ 
In line 426  				/* stmt->updatable = FALSE; */ 
In line 480  	/* Free the parsed table information */ 
In line 488  	if (DCdestroy) /* Free the parsed field information */ 
In line 525  /* 
In line 526   *	This function may not be called but when it is called ... 
In line 527   */ 
In line 544  		fi->nullable = TRUE;	/* probably ? */ 
In line 602  /* 
In line 603   *	SQLColAttribute tries to set the FIELD_INFO (using protocol 3). 
In line 604   */ 
In line 716  			/* 
In line 717  			 * Though current_schema() doesn't have 
In line 718  			 * much sense in PostgreSQL, we first 
In line 719  			 * check the current_schema() when no 
In line 720  			 * explicit schema name is specified. 
In line 721  			 */ 
In line 739  				/* 
In line 740  			  	 * We also have to check as follows. 
In line 741  			  	 */ 
In line 787  	return TRUE; /* success */ 
In line 929  		/* 
In line 930  		 * Store the table name and the SQLColumns result 
In line 931  		 * structure 
In line 932  		 */ 
In line 942  		/* 
In line 943  		 * The connection will now free the result structures, so 
In line 944  		 * make sure that the statement doesn't free it 
In line 945  		 */ 
In line 955  		/* Associate a table from the statement with a SQLColumn info */ 
In line 976  	if (!wti)	/* SQLColAttribute case */ 
In line 1069  		if (colatt /* SQLColAttribute case */ 
In line 1116  #endif /* UNICODE_SUPPORT */ 
In line 1344  			} /* in_select && unquoted && blevel == 0 */ 
In line 1367  		} /* unquoted && blevel == 0 */ 
In line 1368  		/* check the change of blevel etc */ 
In line 1391  				/* aggregate function ? */ 
In line 1444  				/* just eat the expression */ 
In line 1466  			} /* (in_expr || in_func) && in_select */ 
In line 1482  					continue;	/* just skip the unique on field */ 
In line 1486  			} /* in_distinct */ 
In line 1498  					/* if (!(irdflds->nfields % FLD_INCR)) */ 
In line 1525  					/* Initialize the field info */ 
In line 1530  				/* double quotes are for qualifiers */ 
In line 1549  				{				/* expression */ 
In line 1554  					/* continue; */ 
In line 1572  			} /* !in_field */ 
In line 1574  			/* 
In line 1575  			 * We are in a field now 
In line 1576  			 */ 
In line 1616  			/* Function */ 
In line 1625  					/* 
In line 1626  					 * name will have the function name -- maybe useful some 
In line 1627  					 * day 
In line 1628  					 */ 
In line 1649  			/* otherwise, it's probably an expression */ 
In line 1667  		} /* in_select end */ 
In line 1671  			if (token[0] == ';') /* end of the first command */ 
In line 1687  			if (out_table && !in_table) /* new table */ 
In line 1761  			/* out_table is FALSE here */ 
In line 1843  		} /* in_from */ 
In line 1846  	/* 
In line 1847  	 * Resolve any possible field names with tables 
In line 1848  	 */ 
In line 1854  	/* Resolve field names with tables */ 
In line 1866  		{						/* handle as text */ 
In line 1869  			/* 
In line 1870  			 * wfi->type = PG_TYPE_TEXT; wfi->column_size = 0; the 
In line 1871  			 * following may be better 
In line 1872  			 */ 
In line 1882  		/* field name contains the schema name */ 
In line 1914  		/* it's a dot, resolve to table or alias */ 
In line 1958  	/* 
In line 1959  	 * Now save the SQLColumns Info for the parse tables 
In line 1960  	 */ 
In line 1962  	/* Call SQLColumns for each table and store the result */ 
In line 1969  		/* See if already got it */ 
In line 1982  	/* 
In line 1983  	 * Now resolve the fields to point to column info 
In line 1984  	 */ 
In line 1991  		/* Dont worry about functions or quotes */ 
In line 1999  		/* Stars get expanded to all fields in the table */ 
In line 2011  			if (wfi->ti)		/* The star represents only the qualified 
In line 2012  								 * table */ 
In line 2016  			{	/* The star represents all tables */ 
In line 2017  				/* Calculate the total number of columns after expansion */ 
In line 2023  			/* Allocate some more field pointers if necessary */ 
In line 2042  			/* 
In line 2043  			 * copy any other fields (if there are any) up past the 
In line 2044  			 * expansion 
In line 2045  			 */ 
In line 2053  			/* Set the new number of fields */ 
In line 2058  			/* copy the new field info */ 
In line 2074  					/* skip malloc (already did it for the Star) */ 
In line 2087  					/* Initialize the new space (or the * field) */ 
In line 2104  		/* 
In line 2105  		 * We either know which table the field was in because it was 
In line 2106  		 * qualified with a table name or alias -OR- there was only 1 
In line 2107  		 * table. 
In line 2108  		 */ 
In line 2119  		/* Don't know the table -- search all tables in "from" list */ 
In line 2126  					wfi->ti = ti[k];	/* now know the table */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\pgapi30.c  for analysis => 
In line 0  /*------- 
In line 1   * Module:			pgapi30.c 
In line 2   * 
In line 3   * Description:		This module contains routines related to ODBC 3.0 
In line 4   *			most of their implementations are temporary 
In line 5   *			and must be rewritten properly. 
In line 6   *			2001/07/23	inoue 
In line 7   * 
In line 8   * Classes:			n/a 
In line 9   * 
In line 10   * API functions:	PGAPI_ColAttribute, PGAPI_GetDiagRec, 
In line 11  			PGAPI_GetConnectAttr, PGAPI_GetStmtAttr, 
In line 12  			PGAPI_SetConnectAttr, PGAPI_SetStmtAttr 
In line 13   *------- 
In line 14   */ 
In line 32  /*	SQLError -> SQLDiagRec */ 
In line 73  /* 
In line 74   *	Minimal implementation.  
In line 75   * 
In line 76   */ 
In line 140  				case SQL_DIAG_RETURNCODE: /* driver manager returns */ 
In line 146  					/* options for statement type only */ 
In line 205  				case SQL_DIAG_RETURNCODE: /* driver manager returns */ 
In line 211  					/* options for statement type only */ 
In line 288  						/*if (!res) 
In line 289  							return SQL_ERROR;*/ 
In line 315  				case SQL_DIAG_RETURNCODE: /* driver manager returns */ 
In line 357  				case SQL_DIAG_RETURNCODE: /* driver manager returns */ 
In line 364  					/* options for statement type only */ 
In line 394  /*	SQLGetConnectOption -> SQLGetconnectAttr */ 
In line 437  		case SQL_ATTR_APP_ROW_DESC:		/* 10010 */ 
In line 439  		case SQL_ATTR_APP_PARAM_DESC:		/* 10011 */ 
In line 441  		case SQL_ATTR_IMP_ROW_DESC:		/* 10012 */ 
In line 443  		case SQL_ATTR_IMP_PARAM_DESC:		/* 10013 */ 
In line 510  	if (0 == RecNumber) /* bookmark column */ 
In line 583  		case SQL_DESC_ALLOC_TYPE: /* read-only */ 
In line 687  		/* DC_set_error(desc, DESC_BAD_PARAMETER_NUMBER_ERROR, 
In line 688  				"bad parameter number"); 
In line 689  		return SQL_ERROR;*/ 
In line 743  		case SQL_DESC_ALLOC_TYPE: /* read-only */ 
In line 772  		case SQL_DESC_ALLOC_TYPE: /* read-only */ 
In line 773  		case SQL_DESC_COUNT: /* read-only */ 
In line 774  		case SQL_DESC_AUTO_UNIQUE_VALUE: /* read-only */ 
In line 775  		case SQL_DESC_BASE_COLUMN_NAME: /* read-only */ 
In line 776  		case SQL_DESC_BASE_TABLE_NAME: /* read-only */ 
In line 777  		case SQL_DESC_CASE_SENSITIVE: /* read-only */ 
In line 778  		case SQL_DESC_CATALOG_NAME: /* read-only */ 
In line 779  		case SQL_DESC_CONCISE_TYPE: /* read-only */ 
In line 780  		case SQL_DESC_DATETIME_INTERVAL_CODE: /* read-only */ 
In line 781  		case SQL_DESC_DATETIME_INTERVAL_PRECISION: /* read-only */ 
In line 782  		case SQL_DESC_DISPLAY_SIZE: /* read-only */ 
In line 783  		case SQL_DESC_FIXED_PREC_SCALE: /* read-only */ 
In line 784  		case SQL_DESC_LABEL: /* read-only */ 
In line 785  		case SQL_DESC_LENGTH: /* read-only */ 
In line 786  		case SQL_DESC_LITERAL_PREFIX: /* read-only */ 
In line 787  		case SQL_DESC_LITERAL_SUFFIX: /* read-only */ 
In line 788  		case SQL_DESC_LOCAL_TYPE_NAME: /* read-only */ 
In line 789  		case SQL_DESC_NAME: /* read-only */ 
In line 790  		case SQL_DESC_NULLABLE: /* read-only */ 
In line 791  		case SQL_DESC_NUM_PREC_RADIX: /* read-only */ 
In line 792  		case SQL_DESC_OCTET_LENGTH: /* read-only */ 
In line 793  		case SQL_DESC_PRECISION: /* read-only */ 
In line 795  		case SQL_DESC_ROWVER: /* read-only */ 
In line 796  #endif /* ODBCVER */ 
In line 797  		case SQL_DESC_SCALE: /* read-only */ 
In line 798  		case SQL_DESC_SCHEMA_NAME: /* read-only */ 
In line 799  		case SQL_DESC_SEARCHABLE: /* read-only */ 
In line 800  		case SQL_DESC_TABLE_NAME: /* read-only */ 
In line 801  		case SQL_DESC_TYPE: /* read-only */ 
In line 802  		case SQL_DESC_TYPE_NAME: /* read-only */ 
In line 803  		case SQL_DESC_UNNAMED: /* read-only */ 
In line 804  		case SQL_DESC_UNSIGNED: /* read-only */ 
In line 805  		case SQL_DESC_UPDATABLE: /* read-only */ 
In line 832  		case SQL_DESC_UNNAMED: /* only SQL_UNNAMED is allowed */  
In line 901  		case SQL_DESC_UNNAMED: /* only SQL_UNNAMED is allowed */  
In line 911  		case SQL_DESC_ALLOC_TYPE: /* read-only */  
In line 912  		case SQL_DESC_CASE_SENSITIVE: /* read-only */ 
In line 914  		case SQL_DESC_FIXED_PREC_SCALE: /* read-only */ 
In line 916  		case SQL_DESC_LOCAL_TYPE_NAME: /* read-only */ 
In line 917  		case SQL_DESC_NULLABLE: /* read-only */ 
In line 922  		case SQL_DESC_ROWVER: /* read-only */ 
In line 923  #endif /* ODBCVER */ 
In line 924  		case SQL_DESC_TYPE_NAME: /* read-only */ 
In line 925  		case SQL_DESC_UNSIGNED: /* read-only */ 
In line 947  	if (0 == RecNumber) /* bookmark */ 
In line 1060  		case SQL_DESC_ALLOC_TYPE: /* read-only */ 
In line 1208  		case SQL_DESC_ALLOC_TYPE: /* read-only */ 
In line 1280  		case SQL_DESC_ALLOC_TYPE: /* read-only */ 
In line 1284  		case SQL_DESC_COUNT: /* read-only */ 
In line 1285  		case SQL_DESC_AUTO_UNIQUE_VALUE: /* read-only */ 
In line 1286  		case SQL_DESC_CASE_SENSITIVE: /* read-only */ 
In line 1287  		case SQL_DESC_CONCISE_TYPE: /* read-only */ 
In line 1288  		case SQL_DESC_DATETIME_INTERVAL_CODE: /* read-only */ 
In line 1289  		case SQL_DESC_DATETIME_INTERVAL_PRECISION: /* read-only */ 
In line 1290  		case SQL_DESC_DISPLAY_SIZE: /* read-only */ 
In line 1291  		case SQL_DESC_FIXED_PREC_SCALE: /* read-only */ 
In line 1292  		case SQL_DESC_LENGTH: /* read-only */ 
In line 1293  		case SQL_DESC_NULLABLE: /* read-only */ 
In line 1294  		case SQL_DESC_NUM_PREC_RADIX: /* read-only */ 
In line 1295  		case SQL_DESC_OCTET_LENGTH: /* read-only */ 
In line 1296  		case SQL_DESC_PRECISION: /* read-only */ 
In line 1298  		case SQL_DESC_ROWVER: /* read-only */ 
In line 1299  #endif /* ODBCVER */ 
In line 1300  		case SQL_DESC_SCALE: /* read-only */ 
In line 1301  		case SQL_DESC_SEARCHABLE: /* read-only */ 
In line 1302  		case SQL_DESC_TYPE: /* read-only */ 
In line 1303  		case SQL_DESC_UNNAMED: /* read-only */ 
In line 1304  		case SQL_DESC_UNSIGNED: /* read-only */ 
In line 1305  		case SQL_DESC_UPDATABLE: /* read-only */ 
In line 1308  		case SQL_DESC_BASE_COLUMN_NAME: /* read-only */ 
In line 1309  		case SQL_DESC_BASE_TABLE_NAME: /* read-only */ 
In line 1310  		case SQL_DESC_CATALOG_NAME: /* read-only */ 
In line 1311  		case SQL_DESC_LABEL: /* read-only */ 
In line 1312  		case SQL_DESC_LITERAL_PREFIX: /* read-only */ 
In line 1313  		case SQL_DESC_LITERAL_SUFFIX: /* read-only */ 
In line 1314  		case SQL_DESC_LOCAL_TYPE_NAME: /* read-only */ 
In line 1315  		case SQL_DESC_NAME: /* read-only */ 
In line 1316  		case SQL_DESC_SCHEMA_NAME: /* read-only */ 
In line 1317  		case SQL_DESC_TABLE_NAME: /* read-only */ 
In line 1318  		case SQL_DESC_TYPE_NAME: /* read-only */ 
In line 1468  		case SQL_DESC_ALLOC_TYPE: /* read-only */ 
In line 1472  		case SQL_DESC_CASE_SENSITIVE: /* read-only */ 
In line 1474  		case SQL_DESC_FIXED_PREC_SCALE: /* read-only */ 
In line 1476  		case SQL_DESC_LOCAL_TYPE_NAME: /* read-only */ 
In line 1478  		case SQL_DESC_NULLABLE: /* read-only */ 
In line 1482  		case SQL_DESC_ROWVER: /* read-only */ 
In line 1483  #endif /* ODBCVER */ 
In line 1484  		case SQL_DESC_TYPE_NAME: /* read-only */ 
In line 1485  		case SQL_DESC_UNSIGNED: /* read-only */ 
In line 1512  /*	SQLGetStmtOption -> SQLGetStmtAttr */ 
In line 1526  		case SQL_ATTR_FETCH_BOOKMARK_PTR:	/* 16 */ 
In line 1530  		case SQL_ATTR_PARAM_BIND_OFFSET_PTR:	/* 17 */ 
In line 1534  		case SQL_ATTR_PARAM_BIND_TYPE:	/* 18 */ 
In line 1538  		case SQL_ATTR_PARAM_OPERATION_PTR:		/* 19 */ 
In line 1542  		case SQL_ATTR_PARAM_STATUS_PTR: /* 20 */ 
In line 1546  		case SQL_ATTR_PARAMS_PROCESSED_PTR:		/* 21 */ 
In line 1550  		case SQL_ATTR_PARAMSET_SIZE:	/* 22 */ 
In line 1554  		case SQL_ATTR_ROW_BIND_OFFSET_PTR:		/* 23 */ 
In line 1558  		case SQL_ATTR_ROW_OPERATION_PTR:		/* 24 */ 
In line 1562  		case SQL_ATTR_ROW_STATUS_PTR:	/* 25 */ 
In line 1566  		case SQL_ATTR_ROWS_FETCHED_PTR: /* 26 */ 
In line 1570  		case SQL_ATTR_ROW_ARRAY_SIZE:	/* 27 */ 
In line 1574  		case SQL_ATTR_APP_ROW_DESC:		/* 10010 */ 
In line 1575  		case SQL_ATTR_APP_PARAM_DESC:	/* 10011 */ 
In line 1576  		case SQL_ATTR_IMP_ROW_DESC:		/* 10012 */ 
In line 1577  		case SQL_ATTR_IMP_PARAM_DESC:	/* 10013 */ 
In line 1582  		case SQL_ATTR_CURSOR_SCROLLABLE:		/* -1 */ 
In line 1589  		case SQL_ATTR_CURSOR_SENSITIVITY:		/* -2 */ 
In line 1596  		case SQL_ATTR_METADATA_ID:		/* 10014 */ 
In line 1599  		case SQL_ATTR_ENABLE_AUTO_IPD:	/* 15 */ 
In line 1602  		case SQL_ATTR_AUTO_IPD:	/* 10001 */ 
In line 1603  			/* case SQL_ATTR_ROW_BIND_TYPE: ** == SQL_BIND_TYPE(ODBC2.0) */ 
In line 1614  /*	SQLSetConnectOption -> SQLSetConnectAttr */ 
In line 1637  				if (CC_is_in_unicode_driver(conn)) /* the driver is unicode */ 
In line 1638  					CC_set_in_ansi_app(conn); /* but the app is ansi */ 
In line 1644  			/*return SQL_ERROR;*/ 
In line 1646  #endif /* ODBCVER */ 
In line 1653  				/* 
In line 1654  				 *	When a new global transaction is about  
In line 1655  				 *	to begin, isolate the existent global 
In line 1656  				 *	transaction.  
In line 1657  				 */  
In line 1662  #endif /* _HANDLE_ENLIST_IN_DTC_ */ 
In line 1663  #endif /* WIN32 */ 
In line 1744  /*	new function */ 
In line 1795  /*	new function */ 
In line 1845  /*	SQLSet(Param/Scroll/Stmt)Option -> SQLSetStmtAttr */ 
In line 1858  		case SQL_ATTR_ENABLE_AUTO_IPD:	/* 15 */ 
In line 1861  		case SQL_ATTR_CURSOR_SCROLLABLE:		/* -1 */ 
In line 1862  		case SQL_ATTR_CURSOR_SENSITIVITY:		/* -2 */ 
In line 1863  		case SQL_ATTR_AUTO_IPD:	/* 10001 */ 
In line 1866  		/* case SQL_ATTR_ROW_BIND_TYPE: ** == SQL_BIND_TYPE(ODBC2.0) */ 
In line 1867  		case SQL_ATTR_IMP_ROW_DESC:	/* 10012 (read-only) */ 
In line 1868  		case SQL_ATTR_IMP_PARAM_DESC:	/* 10013 (read-only) */ 
In line 1870  			/* 
In line 1871  			 * case SQL_ATTR_PREDICATE_PTR: case 
In line 1872  			 * SQL_ATTR_PREDICATE_OCTET_LENGTH_PTR: 
In line 1873  			 */ 
In line 1877  		case SQL_ATTR_METADATA_ID:		/* 10014 */ 
In line 1880  		case SQL_ATTR_APP_ROW_DESC:		/* 10010 */ 
In line 1891  		case SQL_ATTR_APP_PARAM_DESC:	/* 10011 */ 
In line 1901  		case SQL_ATTR_FETCH_BOOKMARK_PTR:		/* 16 */ 
In line 1904  		case SQL_ATTR_PARAM_BIND_OFFSET_PTR:	/* 17 */ 
In line 1907  		case SQL_ATTR_PARAM_BIND_TYPE:	/* 18 */ 
In line 1910  		case SQL_ATTR_PARAM_OPERATION_PTR:		/* 19 */ 
In line 1913  		case SQL_ATTR_PARAM_STATUS_PTR:			/* 20 */ 
In line 1916  		case SQL_ATTR_PARAMS_PROCESSED_PTR:		/* 21 */ 
In line 1919  		case SQL_ATTR_PARAMSET_SIZE:	/* 22 */ 
In line 1922  		case SQL_ATTR_ROW_BIND_OFFSET_PTR:		/* 23 */ 
In line 1925  		case SQL_ATTR_ROW_OPERATION_PTR:		/* 24 */ 
In line 1928  		case SQL_ATTR_ROW_STATUS_PTR:	/* 25 */ 
In line 1931  		case SQL_ATTR_ROWS_FETCHED_PTR: /* 26 */ 
In line 1934  		case SQL_ATTR_ROW_ARRAY_SIZE:	/* 27 */ 
In line 1947  /*	SQL_NEED_DATA callback for PGAPI_BulkOperations */ 
In line 1991  		/* Note opts->row_operation_ptr is ignored */ 
In line 2061  	/* StartRollbackState(s.stmt); */ 
In line 2068  #endif /* ODBCVER >= 0x0300 */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\pgtypes.c  for analysis => 
In line 0  /*-------- 
In line 1   * Module:			pgtypes.c 
In line 2   * 
In line 3   * Description:		This module contains routines for getting information 
In line 4   *					about the supported Postgres data types.  Only the 
In line 5   *					function pgtype_to_sqltype() returns an unknown condition. 
In line 6   *					All other functions return a suitable default so that 
In line 7   *					even data types that are not directly supported can be 
In line 8   *					used (it is handled as char data). 
In line 9   * 
In line 10   * Classes:			n/a 
In line 11   * 
In line 12   * API functions:	none 
In line 13   * 
In line 14   * Comments:		See "readme.txt" for copyright and license information. 
In line 15   *-------- 
In line 16   */ 
In line 31  /* 
In line 32   * these are the types we support.	all of the pgtype_ functions should 
In line 33   * return values for each one of these. 
In line 34   * Even types not directly supported are handled as character types 
In line 35   * so all types should work (points, etc.) 
In line 36   */ 
In line 38  /* 
In line 39   * ALL THESE TYPES ARE NO LONGER REPORTED in SQLGetTypeInfo.  Instead, all 
In line 40   *	the SQL TYPES are reported and mapped to a corresponding Postgres Type 
In line 41   */ 
In line 43  /* 
In line 44  OID pgtypes_defined[][2] = { 
In line 45  			{PG_TYPE_CHAR, 0} 
In line 46  			,{PG_TYPE_CHAR2, 0} 
In line 47  			,{PG_TYPE_CHAR4, 0} 
In line 48  			,{PG_TYPE_CHAR8, 0} 
In line 49  			,{PG_TYPE_CHAR16, 0} 
In line 50  			,{PG_TYPE_NAME, 0} 
In line 51  			,{PG_TYPE_VARCHAR, 0} 
In line 52  			,{PG_TYPE_BPCHAR, 0} 
In line 53  			,{PG_TYPE_DATE, 0} 
In line 54  			,{PG_TYPE_TIME, 0} 
In line 55  			,{PG_TYPE_TIME_WITH_TMZONE, 0} 
In line 56  			,{PG_TYPE_DATETIME, 0} 
In line 57  			,{PG_TYPE_ABSTIME, 0} 
In line 58  			,{PG_TYPE_TIMESTAMP_NO_TMZONE, 0} 
In line 59  			,{PG_TYPE_TIMESTAMP, 0} 
In line 60  			,{PG_TYPE_TEXT, 0} 
In line 61  			,{PG_TYPE_INT2, 0} 
In line 62  			,{PG_TYPE_INT4, 0} 
In line 63  			,{PG_TYPE_FLOAT4, 0} 
In line 64  			,{PG_TYPE_FLOAT8, 0} 
In line 65  			,{PG_TYPE_OID, 0} 
In line 66  			,{PG_TYPE_MONEY, 0} 
In line 67  			,{PG_TYPE_BOOL, 0} 
In line 68  			,{PG_TYPE_BYTEA, 0} 
In line 69  			,{PG_TYPE_NUMERIC, 0} 
In line 70  			,{PG_TYPE_XID, 0} 
In line 71  			,{PG_TYPE_LO_UNDEFINED, 0} 
In line 72  			,{0, 0} }; 
In line 73  */ 
In line 76  /*	These are NOW the SQL Types reported in SQLGetTypeInfo.  */ 
In line 79  	/* SQL_BINARY, -- Commented out because VarBinary is more correct. */ 
In line 84  #endif /* ODBCVER */ 
In line 98  #endif /* ODBCVER */ 
In line 108  #endif /* UNICODE_SUPPORT */ 
In line 111  #endif /* ODBCVER */ 
In line 112  /* AFAIK SQL_INTERVAL types cause troubles in some spplications */  
In line 127  #endif /* PG_INTERVAL_AS_SQL_INTERVAL */ 
In line 133  /* #define	ALLOWED_C_BIGINT	SQL_C_CHAR */ /* Delphi should be either ? */ 
In line 247  #endif /* ODBCVER */ 
In line 257  	/* Assign Maximum size based on parameters */ 
In line 284  #endif /* UNICODE_SUPPORT */ 
In line 286  	if (maxsize == TEXT_FIELD_SIZE + 1) /* magic length for testing */ 
In line 293  	/* 
In line 294  	 * Static ColumnSize (i.e., the Maximum ColumnSize of the datatype) This 
In line 295  	 * has nothing to do with a result set. 
In line 296  	 */ 
In line 301  	/* 
In line 302  	 * Catalog Result Sets -- use assigned column width (i.e., from 
In line 303  	 * set_tuplefield_string) 
In line 304  	 */ 
In line 320  	p = adtsize_or_longestlen; /* longest */ 
In line 321  	/* Size is unknown -- handle according to parameter */ 
In line 322  	if (atttypmod > 0)	/* maybe the length is known */ 
In line 336  #endif /* ODBCVER */ 
In line 340  	/* The type is really unknown */ 
In line 384  	adtsize_or_longest >>= 16; /* extract the scale part */ 
In line 388  static Int4	/* PostgreSQL restritiction */ 
In line 404  	adtsize_or_longest %= (1 << 16); /* extract the precision part */ 
In line 514  #endif /* ODBCVER */ 
In line 528  #endif /* PG_INTERVAL_AS_SQL_INTERVAL */ 
In line 529  #endif /* ODBCVER */ 
In line 571  #endif /* UNICODE_SUPPORT */ 
In line 589  			/* Change this to SQL_BIGINT for ODBC v3 bjm 2001-01-23 */ 
In line 594  				return SQL_NUMERIC; /* maybe a little better than SQL_VARCHAR */ 
In line 599  #endif /* ODBCVER */ 
In line 612  #endif /* ODBCVER */ 
In line 618  #endif /* ODBCVER */ 
In line 627  #endif /* ODBCVER */ 
In line 642  #endif /* ODBCVER */ 
In line 649  #endif /* PG_INTERVAL_AS_SQL_INTERVAL */ 
In line 654  			/* 
In line 655  			 * first, check to see if 'type' is in list.  If not, look up 
In line 656  			 * with query. Add oid, name to list.  If it's already in 
In line 657  			 * list, just return. 
In line 658  			 */ 
In line 659  			/* hack until permanent type is available */ 
In line 666  #endif	/* EXPERIMENTAL_CURRENTLY */ 
In line 679  #endif /* PG_INTERVAL_AS_SQL_INTERVAL */ 
In line 687  #endif /* ODBCVER */ 
In line 720  #endif /* ODBCVER */ 
In line 733  #endif /* PG_INTERVAL_A_SQL_INTERVAL */ 
In line 734  #endif /* ODBCVER */ 
In line 742  #endif /* ODBCVER */ 
In line 761  #endif /* ODBCVER */ 
In line 767  #endif /* ODBCVER */ 
In line 776  #endif /* ODBCVER */ 
In line 792  #endif /* UNICODE_SUPPORT */ 
In line 797  #endif /* ODBCVER */ 
In line 804  #endif /* PG_INTERVAL_AS_SQL_INTERVAL */ 
In line 808  			/* hack until permanent type is available */ 
In line 812  			/* Experimental, Does this work ? */ 
In line 816  #endif	/* EXPERIMENTAL_CURRENTLY */ 
In line 900  #endif /* ODBCVER */ 
In line 906  			/* hack until permanent type is available */ 
In line 910  			/* 
In line 911  			 * "unknown" can actually be used in alter table because it is 
In line 912  			 * a real PG type! 
In line 913  			 */ 
In line 919  Int4	/* PostgreSQL restriction */ 
In line 943  					/* 
In line 944  					 * 'conn' argument is marked as const, 
In line 945  					 * because this function just reads 
In line 946  					 * stuff from the already-filled in 
In line 947  					 * fields in the struct. But this is 
In line 948  					 * an exception: CC_get_max_idlen() can 
In line 949  					 * send a SHOW query to the backend to 
In line 950  					 * get the identifier length. Thus cast 
In line 951  					 * away the const here. 
In line 952  					 */ 
In line 958  #endif /* NAME_FIELD_SIZE */ 
In line 978  			return 19;			/* signed */ 
In line 1000  			/* return 22; */ 
In line 1023  			if (type == conn->lobj_type)	/* hack until permanent 
In line 1024  												 * type is available */ 
In line 1029  			/* Handle Character types and unknown types */ 
In line 1047  #endif /* PG_INTERVAL_AS_SQL_INTERVAL */ 
In line 1070  			return 20;			/* signed: 19 digits + sign */ 
In line 1077  			return 15;			/* ($9,999,999.99) */ 
In line 1093  #endif /* ODBCVER */ 
In line 1098  			/* Character types use regular precision */ 
In line 1112  			return 2; /* sizeof(SQLSMALLINT) */ 
In line 1117  			return 4; /* sizeof(SQLINTEGER) */ 
In line 1121  				return 20;			/* signed: 19 digits + sign */ 
In line 1122  			return 8; /* sizeof(SQLSBININT) */ 
In line 1130  			return 4; /* sizeof(SQLREAL) */ 
In line 1133  			return 8; /* sizeof(SQLFLOAT) */ 
In line 1137  			return 6;		/* sizeof(DATE(TIME)_STRUCT) */ 
In line 1143  			return 16;		/* sizeof(TIMESTAMP_STRUCT) */ 
In line 1152  			return 16;		/* sizeof(SQLGUID) */ 
In line 1153  #endif /* ODBCVER */ 
In line 1156  			/* Character types use the default precision */ 
In line 1167  #endif /* UNICODE_SUPPORT */ 
In line 1168  			/* after 7.2 */ 
In line 1172  				/* CR -> CR/LF */ 
In line 1184  #endif /* PG_INTERVAL_AS_SQL_INTERVAL */  
In line 1191  /* 
In line 1192   */ 
In line 1209  			return 20;			/* signed: 19 digits + sign */ 
In line 1251  			/* 
In line 1252  			 * Number of digits to the right of the decimal point in 
In line 1253  			 * "yyyy-mm=dd hh:mm:ss[.f...]" 
In line 1254  			 */ 
In line 1260  			/* return 0; */ 
In line 1269  #endif /* PG_INTERVAL_AS_SQL_INTERVAL */ 
In line 1303  #endif /* UNICODE_SUPPORT */ 
In line 1304  			/* after 7.2 */ 
In line 1308  				/* CR -> CR/LF */ 
In line 1332  	pgType = 0; /* ??? */ 
In line 1347  #endif /* UNICODE_SUPPORT */ 
In line 1355  #endif /* ODBCVER */ 
In line 1393  #endif /* UNICODE_SUPPORT */ 
In line 1407  #endif /* ODBCVER */ 
In line 1414  #endif /* ODBCVER */ 
In line 1430  #endif /* UNICODE_SUPPORT */ 
In line 1437  #endif /* ODBCVER */ 
In line 1505  /* 
In line 1506   *	There are two ways of calling this function: 
In line 1507   * 
In line 1508   *	1.	When going through the supported PG types (SQLGetTypeInfo) 
In line 1509   * 
In line 1510   *	2.	When taking any type id (SQLColumns, SQLGetData) 
In line 1511   * 
In line 1512   *	The first type will always work because all the types defined are returned here. 
In line 1513   *	The second type will return a default based on global parameter when it does not 
In line 1514   *	know.	This allows for supporting 
In line 1515   *	types that are unknown.  All other pg routines in here return a suitable default. 
In line 1516   */ 
In line 1575  	/* 
In line 1576  	 * Manual Result Sets -- use assigned column width (i.e., from 
In line 1577  	 * set_tuplefield_string) 
In line 1578  	 */ 
In line 1605  static Int4	/* PostgreSQL restritiction */ 
In line 1619  	/* 
In line 1620  	 * Manual Result Sets -- use assigned column width (i.e., from 
In line 1621  	 * set_tuplefield_string) 
In line 1622  	 */ 
In line 1661  	/* Assign Maximum size based on parameters */ 
In line 1688  #endif /* UNICODE_SUPPORT */ 
In line 1690  	if (maxsize == TEXT_FIELD_SIZE + 1) /* magic length for testing */ 
In line 1697  	/* 
In line 1698  	 * Static ColumnSize (i.e., the Maximum ColumnSize of the datatype) This 
In line 1699  	 * has nothing to do with a result set. 
In line 1700  	 */ 
In line 1707  	/* 
In line 1708  	 * Catalog Result Sets -- use assigned column width (i.e., from 
In line 1709  	 * set_tuplefield_string) 
In line 1710  	 */ 
In line 1719  	p = QR_get_display_size(result, col); /* longest */ 
In line 1721  	/* Size is unknown -- handle according to parameter */ 
In line 1722  	if (attlen > 0)	/* maybe the length is known */ 
In line 1736  #endif /* ODBCVER */ 
In line 1740  	/* The type is really unknown */ 
In line 1769  #endif /* NOT_USED */ 
In line 1822  #endif /* NOT_USED */ 
In line 1824  /* 
In line 1825   *	This corresponds to "precision" in ODBC 2.x. 
In line 1826   * 
In line 1827   *	For PG_TYPE_VARCHAR, PG_TYPE_BPCHAR, PG_TYPE_NUMERIC, SQLColumns will 
In line 1828   *	override this length with the atttypmod length from pg_attribute . 
In line 1829   * 
In line 1830   *	If col >= 0, then will attempt to get the info from the result set. 
In line 1831   *	This is used for functions SQLDescribeCol and SQLColAttributes. 
In line 1832   */ 
In line 1833  Int4	/* PostgreSQL restriction */ 
In line 1842  /* 
In line 1843   *	precision in ODBC 3.x. 
In line 1844   */ 
In line 1865  /* 
In line 1866   *	The length in bytes of data transferred on an SQLGetData, SQLFetch, 
In line 1867   *	or SQLFetchScroll operation if SQL_C_DEFAULT is specified. 
In line 1868   */ 
In line 1878  /* 
In line 1879   */ 
In line 1890  /* 
In line 1891   *	Transfer octet length. 
In line 1892   */ 
In line 1910  #endif /* UNICODE_SUPPORT */ 
In line 1911  			/* after 7.2 */ 
In line 1915  				/* CR -> CR/LF */ 
In line 1931  #endif /* NOT_USED */ 
In line 1933  /* 
In line 1934   *	corrsponds to "min_scale" in ODBC 2.x. 
In line 1935   */ 
In line 1961  /* 
In line 1962   *	corrsponds to "max_scale" in ODBC 2.x. 
In line 1963   */ 
In line 1991  /* 
In line 1992   *	corrsponds to "scale" in ODBC 2.x. 
In line 1993   */ 
In line 2003  /* 
In line 2004   *	"scale" in ODBC 3.x. 
In line 2005   */ 
In line 2040  	return SQL_NULLABLE;		/* everything should be nullable */ 
In line 2224  	/* 
In line 2225  	 * from the table on page 623 of ODBC 2.0 Programmer's Reference 
In line 2226  	 * (Appendix D) 
In line 2227  	 */ 
In line 2251  #endif /* UNICODE_SUPPORT */ 
In line 2295  #endif /* ODBCVER */ 
In line 2303  #endif /* ODBCVER */ 
In line 2306  			/* should never happen */ 
In line 2349  #endif /* ODBCVER */ 
In line 2355  #endif /* ODBCVER */ 
In line 2361  #endif /* ODBCVER */ 
In line 2367  #endif /* ODBCVER */ 
In line 2383  #endif /* ODBCVER */ 
In line 2389  #endif /* UNICODE_SUPPORT */ 
In line 2392  		default:				/* should never happen */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\psqlodbc.c  for analysis => 
In line 0  /*-------- 
In line 1   * Module:			psqlodbc.c 
In line 2   * 
In line 3   * Description:		This module contains the main entry point (DllMain) 
In line 4   *					for the library.  It also contains functions to get 
In line 5   *					and set global variables for the driver in the registry. 
In line 6   * 
In line 7   * Classes:			n/a 
In line 8   * 
In line 9   * API functions:	none 
In line 10   * 
In line 11   * Comments:		See "readme.txt" for copyright and license information. 
In line 12   *-------- 
In line 13   */ 
In line 18  #endif /* _DEBUG */ 
In line 19  #endif /* WIN32 */ 
In line 25  #endif /* USE_SSPI */ 
In line 70  #endif /* PG_RECURSIVE_MUTEXATTR */ 
In line 71  #endif /* POSIX_THREADMUTEX_SUPPORT */ 
In line 72  #endif /* WIN_MULTITHREAD_SUPPORT */ 
In line 85  #endif /* _MEMORY_DEBUG_ */ 
In line 86  #endif /* _DEBUG */ 
In line 87  #endif /* WIN32 */ 
In line 90  #endif /* POSIX_THREADMUTEX_SUPPORT */ 
In line 105  	/*** 
In line 106  	memcpy(to, from, sizeof(GLOBAL_VALUES)); 
In line 107  	SET_NAME_DIRECTLY(to->drivername, NULL); 
In line 108  	SET_NAME_DIRECTLY(to->conn_settings, NULL); 
In line 109  	***/ 
In line 121  	CORR_VALCPY(onlyread);		/* readonly is reserved on Digital C++ 
In line 122  								 * compiler */ 
In line 153  	// _CrtDumpMemoryLeaks(); 
In line 154  #endif /* _MEMORY_DEBUG_ */ 
In line 155  #endif /* _DEBUG */ 
In line 159  HINSTANCE NEAR s_hModule;		/* Saved module handle. */ 
In line 160  /*	This is where the Driver Manager attaches to this Driver */ 
In line 167  			s_hModule = hInst;	/* Save for dialog boxes */ 
In line 201  #endif /* USE_SSPI */ 
In line 203  			/* my(q)log is unavailable from here */ 
In line 219  #else							/* not WIN32 */ 
In line 223  /* Shared library initializer and destructor, using gcc's attributes */ 
In line 240  #else							/* not __GNUC__ */ 
In line 242  /* Shared library initialization on non-gcc systems. */ 
In line 257  #endif   /* not __GNUC__ */ 
In line 258  #endif   /* not WIN32 */ 
In line 261  /* 
In line 262   *	This function is used to cause the Driver Manager to 
In line 263   *	call functions by number rather than name, which is faster. 
In line 264   *	The ordinal value of this function must be 199 to have the 
In line 265   *	Driver Manager do this.  Also, the ordinal values of the 
In line 266   *	functions must match the value of fFunction in SQLGetFunctions() 
In line 267   */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\qresult.c  for analysis => 
In line 0  /*--------- 
In line 1   * Module:			qresult.c 
In line 2   * 
In line 3   * Description:		This module contains functions related to 
In line 4   *			managing result information (i.e, fetching rows 
In line 5   *			from the backend, managing the tuple cache, etc.) 
In line 6   *			and retrieving it.	Depending on the situation, a 
In line 7   *			QResultClass will hold either data from the backend 
In line 8   *			or a manually built result. 
In line 9   * 
In line 10   * Classes:		QResultClass (Functions prefix: "QR_") 
In line 11   * 
In line 12   * API functions:	none 
In line 13   * 
In line 14   * Comments:		See "readme.txt" for copyright and license information. 
In line 15   *--------- 
In line 16   */ 
In line 28  /* 
In line 29   *	Used for building a Manual Result only 
In line 30   *	All info functions call this function to create the manual result set. 
In line 31   */ 
In line 148  	/* 
In line 149  	 * Unlink the old columninfo from this result set, freeing it if this 
In line 150  	 * was the last reference. 
In line 151  	 */ 
In line 164  /* 
In line 165   * CLASS QResult 
In line 166   */ 
In line 182  		/* construct the column info */ 
In line 205  		rv->flags = 0; /* must be cleared before calling QR_set_rowstart_in_cache() */ 
In line 212  		rv->num_key_fields = PG_NUM_NORMAL_KEYS; /* CTID + OID */ 
In line 258  		/* 
In line 259  		 * If conn is defined, then we may have used "backend_tuples", so in 
In line 260  		 * case we need to, free it up.  Also, close the cursor. 
In line 261  		 */ 
In line 266  				if (!QR_close(self))	/* close the cursor if there is one */ 
In line 272  		QR_free_memory(self);		/* safe to call anyway */ 
In line 274  		/* 
In line 275  		 * Should have been freed in the close() but just in case... 
In line 276  		 * QR_set_cursor clears the cursor name of all the chained results too, 
In line 277  		 * so we only need to do this for the first result in the chain. 
In line 278  		 */ 
In line 282  		/* Free up column info */ 
In line 286  		/* Free command info (this is from strdup()) */ 
In line 293  		/* Free message info (this is from strdup()) */ 
In line 300  		/* Free notice info (this is from strdup()) */ 
In line 306  		/* Destruct the result object in the chain */ 
In line 312  		/* Repeat for the next result in the chain */ 
In line 314  		destroy = TRUE; /* always destroy chained results */ 
In line 514  	/* clear added info */ 
In line 528  	/* clear updated info */ 
In line 558  /*	This function is called by send_query() */ 
In line 565  	/* 
In line 566  	 * If called from send_query the first time (conn != NULL), then set 
In line 567  	 * the inTuples state, and read the tuples.  If conn is NULL, it 
In line 568  	 * implies that we are being called from next_tuple(), like to get 
In line 569  	 * more rows so don't call next_tuple again! 
In line 570  	 */ 
In line 595  		/* 
In line 596  		 * Read the field attributes. 
In line 597  		 * 
In line 598  		 * $$$$ Should do some error control HERE! $$$$ 
In line 599  		 */ 
In line 633  		/* allocate memory for the tuple cache */ 
In line 650  		/* Force a read to occur in next_tuple */ 
In line 660  		/* 
In line 661  		 * Always have to read the field attributes. But we dont have to 
In line 662  		 * reallocate memory for them! 
In line 663  		 */ 
In line 676  /* 
In line 677   *	Procedure needed when closing cursors. 
In line 678   */ 
In line 686  /* 
In line 687   *	Close the cursor and end the transaction (if no cursors left) 
In line 688   *	We only close the cursor if other cursors are used. 
In line 689   */ 
In line 715  			/* End the transaction if there are no cursors left on this conn */ 
In line 749  		/* End the transaction if there are no cursors left on this conn */ 
In line 761  #endif /* NOT_USED */ 
In line 881  /*	This function is called by fetch_tuples() AND SQLFetch() */ 
In line 889  	/* Speed up access */ 
In line 898  	/* ERROR_MSG_LENGTH is sufficient */ 
In line 901  	/* QR_set_command() dups this string so doesn't need static */ 
In line 908  	BOOL		reached_eof_now = FALSE, curr_eof; /* detecting EOF is pretty important */ 
In line 992  				if (QR_is_moving_from_the_last(self))  /* in case of FETCH LAST */ 
In line 999  						/* the rowset_start is on BOF */ 
In line 1049  						/* adjust move_offset */ 
In line 1050  						/*** self->move_offset++; ***/ 
In line 1054  						SC_set_rowset_start(stmt, rowset_start, TRUE); /* affects the result's rowset_start but it is reset immediately ... */ 
In line 1060  		/* ... by the following call */  
In line 1079  		if (!self->dataFilled) /* should never occur */ 
In line 1085  		/* return a row from cache */ 
In line 1089  		/* move to next row */ 
In line 1112  			/* end of tuples */ 
In line 1118  	/* 
In line 1119  	 * See if we need to fetch another group of rows. We may be being 
In line 1120  	 * called from send_query(), and if so, don't send another fetch, 
In line 1121  	 * just fall through and read the tuples. 
In line 1122  	 */ 
In line 1134  			RETURN(-1)		/* end of tuples */ 
In line 1142  			/* not a correction */ 
In line 1143  			/* Determine the optimum cache size.  */ 
In line 1147  				/*fetch_size = (ci->drivers.fetch_max / req_size + 1) * req_size;*/ 
In line 1153  			/* clear obsolete tuples */ 
In line 1163  			/*  
In line 1164  			 *	The rowset boundary doesn't match that of 
In line 1165  			 *	the inner resultset. Enlarge the resultset 
In line 1166  			 *	and fetch the rest of the rowset. 
In line 1167  			 */ 
In line 1168  			/* The next fetch size is */ 
In line 1175  			/* and enlarge the cache size */ 
In line 1185  		    && !QR_is_permanent(self) /* Execute seems an invalid operation after COMMIT */  
In line 1204  			/* don't read ahead for the next tuple (self) ! */ 
In line 1224  		/* 
In line 1225  		 * This is a pre-fetch (fetching rows right after query but 
In line 1226  		 * before any real SQLFetch() calls.  This is done so the 
In line 1227  		 * field attributes are available. 
In line 1228  		 */ 
In line 1269  					/* set to first row */ 
In line 1276  				/* add new Result class */ 
In line 1295  			case 'B':			/* Tuples in binary format */ 
In line 1296  			case 'D':			/* Tuples in ASCII format  */ 
In line 1304  				break;			/* continue reading */ 
In line 1306  			case 'C':			/* End of tuple list */ 
In line 1320  						if (ExecuteRequest) /* Execute completed without accepting Portal Suspend */ 
In line 1332  					/* last row from cache */ 
In line 1333  					/* We are done because we didn't even get CACHE_SIZE tuples */ 
In line 1341  			case 'E':			/* Error */ 
In line 1353  			case 'N':			/* Notice */ 
In line 1358  			case 'Z':	/* Ready for query */ 
In line 1367  			case 's':	/* portal suspend */ 
In line 1373  				/* skip the unexpected response if possible */ 
In line 1376  				/* this should only happen if the backend 
In line 1377  					* dumped core ??? */ 
In line 1390  			for (;;) /* discard the result until ReadyForQuery comes */ 
In line 1400  				if ('Z' == id) /* ready for query */ 
In line 1453  				/* We have to append the tuples(keys) info from the added tuples(keys) here */ 
In line 1482  				/* append the KeySet info first */ 
In line 1484  				/* and append the tuples info */ 
In line 1496  			/* set to first row */ 
In line 1501  			/* We are surely done here (we read 0 tuples) */ 
In line 1503  			ret = -1;	/* end of tuples */ 
In line 1507  	/* 
In line 1508  	 If the cursor operation was invoked inside this function, 
In line 1509  	 we have to set the status bits here. 
In line 1510  	*/ 
In line 1518  		/* For simplicty, use CURS_NEEDS_REREAD bit to mark the row */ 
In line 1523  		/* deleted info */ 
In line 1530  				/* mark the row off */ 
In line 1540  				/* in case the row is marked off */ 
In line 1548  		/* reset CURS_NEEDS_REREAD bit */ 
In line 1552  /*inolog("keyset[%d].status=%x\n", i, self->keyset[i].status);*/ 
In line 1572  				bitmap[MAX_FIELDS];		/* Max. len of the bitmap */ 
In line 1573  	Int2		bitmaplen;		/* len of the bitmap in bytes */ 
In line 1578  	int		ci_num_fields = QR_NumResultCols(self);	/* speed up access */ 
In line 1579  	int		num_fields = self->num_fields;	/* speed up access */ 
In line 1586  	/* set the current row to read the fields into */ 
In line 1591  		/* this_keyset = self->keyset + self->cursTuple + 1; */ 
In line 1596  	/* 
In line 1597  	 * At first the server sends a bitmap that indicates which database 
In line 1598  	 * fields are null 
In line 1599  	 */ 
In line 1630  			/* move to next bit in the bitmap */ 
In line 1643  				/* get the length of the field (four bytes) */ 
In line 1646  				/* 
In line 1647  				 * In the old protocol version, the length 
In line 1648  				 * field of an AsciiRow message includes the 
In line 1649  				 * 4-byte length field itself, while the 
In line 1650  				 * length field in the BinaryRow does not. 
In line 1651  				 */ 
In line 1658  			/* get the length of the field (four bytes) */ 
In line 1661  			/* -1 means NULL */ 
In line 1699  			/* 
In line 1700  			 * This can be used to set the longest length of the column 
In line 1701  			 * for any row in the tuple cache.	It would not be accurate 
In line 1702  			 * for varchar and text fields to use this since a tuple cache 
In line 1703  			 * is only 100 rows. Bpchar can be handled since the strlen of 
In line 1704  			 * all rows is fixed, assuming there are not 100 nulls in a 
In line 1705  			 * row! 
In line 1706  			 */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\results.c  for analysis => 
In line 0  /* 
In line 1   * Module:			results.c 
In line 2   * 
In line 3   * Description:		This module contains functions related to 
In line 4   *					retrieving result information through the ODBC API. 
In line 5   * 
In line 6   * Classes:			n/a 
In line 7   * 
In line 8   * API functions:	SQLRowCount, SQLNumResultCols, SQLDescribeCol, 
In line 9   *					SQLColAttributes, SQLGetData, SQLFetch, SQLExtendedFetch, 
In line 10   *					SQLMoreResults, SQLSetPos, SQLSetScrollOptions(NI), 
In line 11   *					SQLSetCursorName, SQLGetCursorName 
In line 12   * 
In line 13   * Comments:		See "readme.txt" for copyright and license information. 
In line 14   *------- 
In line 15   */ 
In line 35  /*	Helper macro */ 
In line 99  	/****if ((!result) || ((stmt->status != STMT_FINISHED) && (stmt->status != STMT_PREMATURE))) ****/ 
In line 102  		/* no query has been executed on this statement */ 
In line 139  /* 
In line 140   *	This returns the number of columns associated with the database 
In line 141   *	attached to "hstmt". 
In line 142   */ 
In line 163  	/* StartRollbackState(stmt); */ 
In line 207  /* 
In line 208   *	Return information about the database column the user wants 
In line 209   *	information about. 
In line 210   */ 
In line 225  	/* gets all the information about a specific column */ 
In line 256  	if (0 == icol) /* bookmark column */ 
In line 276  #endif /* ODBCVER */ 
In line 277  	/* 
In line 278  	 * Dont check for bookmark column. This is the responsibility of the 
In line 279  	 * driver manager. 
In line 280  	 */ 
In line 282  	icol--;						/* use zero based column numbers */ 
In line 313  		/* 
In line 314  	 	 * If couldn't parse it OR the field being described was not parsed 
In line 315  	 	 * (i.e., because it was a function or expression, etc, then do it the 
In line 316  	 	 * old fashioned way. 
In line 317  	 	 */ 
In line 355  		/* atoi(ci->unknown_sizes) */ 
In line 366  	/* 
In line 367  	 * COLUMN NAME 
In line 368  	 */ 
In line 388  	/* 
In line 389  	 * CONCISE(SQL) TYPE 
In line 390  	 */ 
In line 398  	/* 
In line 399  	 * COLUMN SIZE(PRECISION in 2.x) 
In line 400  	 */ 
In line 404  			column_size = 0;		/* "I dont know" */ 
In line 411  	/* 
In line 412  	 * DECIMAL DIGITS(SCALE in 2.x) 
In line 413  	 */ 
In line 423  	/* 
In line 424  	 * NULLABILITY 
In line 425  	 */ 
In line 444  /*		Returns result column descriptor information for a result set. */ 
In line 481  		/* The following doesn't seem appropriate for client side cursors 
In line 482  		  && stmt->options.scroll_concurrency != SQL_CONCUR_READ_ONLY 
In line 483  		 */ 
In line 492  	/* 
In line 493  	 * Dont check for bookmark column.	This is the responsibility of the 
In line 494  	 * driver manager.	For certain types of arguments, the column number 
In line 495  	 * is ignored anyway, so it may be 0. 
In line 496  	 */ 
In line 500  	if (0 == icol && SQL_DESC_COUNT != fDescType) /* bookmark column */ 
In line 516  #endif /* ODBCVER */ 
In line 519  	/* atoi(ci->unknown_sizes); */ 
In line 522  	/* not appropriate for SQLColAttributes() */ 
In line 538  		/* 
In line 539  		 * Column Count is a special case.	The Column number is ignored 
In line 540  		 * in this case. 
In line 541  		 */ 
In line 546  #endif /* ODBCVER */ 
In line 588  #endif /* ODBCVER */ 
In line 590  				case 1212: /* SQL_CA_SS_COLUMN_KEY ? */ 
In line 601  		/* 
In line 602  		 * Column Count is a special case.	The Column number is ignored 
In line 603  		 * in this case. 
In line 604  		 */ 
In line 609  #endif /* ODBCVER */ 
In line 638  		case SQL_COLUMN_AUTO_INCREMENT: /* == SQL_DESC_AUTO_UNIQUE_VALUE */ 
In line 643  			if (value == -1)	/* non-numeric becomes FALSE (ODBC Doc) */ 
In line 649  		case SQL_COLUMN_CASE_SENSITIVE: /* == SQL_DESC_CASE_SENSITIVE */ 
In line 653  			/* 
In line 654  			 * This special case is handled above. 
In line 655  			 * 
In line 656  			 * case SQL_COLUMN_COUNT: 
In line 657  			 */ 
In line 658  		case SQL_COLUMN_DISPLAY_SIZE: /* == SQL_DESC_DISPLAY_SIZE */ 
In line 665  		case SQL_COLUMN_LABEL: /* == SQL_DESC_LABEL */ 
In line 673  			/* otherwise same as column name -- FALL THROUGH!!! */ 
In line 679  #endif /* ODBCVER */ 
In line 691  			/* if (-1 == value)  I'm not sure which is right */ 
In line 697  		case SQL_COLUMN_MONEY: /* == SQL_DESC_FIXED_PREC_SCALE */ 
In line 706  #endif /* ODBCVER */ 
In line 714  		case SQL_COLUMN_OWNER_NAME: /* == SQL_DESC_SCHEMA_NAME */ 
In line 719  		case SQL_COLUMN_PRECISION: /* in 2.x */ 
In line 727  		case SQL_COLUMN_QUALIFIER_NAME: /* == SQL_DESC_CATALOG_NAME */ 
In line 728  			p = ti ? CurrCatString(conn) : NULL_STRING;	/* empty string means *not supported* */ 
In line 731  		case SQL_COLUMN_SCALE: /* in 2.x */ 
In line 738  		case SQL_COLUMN_SEARCHABLE: /* == SQL_DESC_SEARCHABLE */ 
In line 742  		case SQL_COLUMN_TABLE_NAME: /* == SQL_DESC_TABLE_NAME */ 
In line 748  		case SQL_COLUMN_TYPE: /* == SQL_DESC_CONCISE_TYPE */ 
In line 753  		case SQL_COLUMN_TYPE_NAME: /* == SQL_DESC_TYPE_NAME */ 
In line 757  		case SQL_COLUMN_UNSIGNED: /* == SQL_DESC_UNSINGED */ 
In line 759  			if (value == -1)	/* non-numeric becomes TRUE (ODBC Doc) */ 
In line 764  		case SQL_COLUMN_UPDATABLE: /* == SQL_DESC_UPDATABLE */ 
In line 766  			/* 
In line 767  			 * Neither Access or Borland care about this. 
In line 768  			 * 
In line 769  			 * if (field_type == PG_TYPE_OID) pfDesc = SQL_ATTR_READONLY; 
In line 770  			 * else 
In line 771  			 */ 
In line 796  		case SQL_DESC_BASE_TABLE_NAME: /* the same as TABLE_NAME ok ? */ 
In line 801  		case SQL_DESC_LENGTH: /* different from SQL_COLUMN_LENGTH */ 
In line 814  		case SQL_DESC_PRECISION: /* different from SQL_COLUMN_PRECISION */ 
In line 822  		case SQL_DESC_SCALE: /* different from SQL_COLUMN_SCALE */ 
In line 845  #endif /* ODBCVER */ 
In line 846  		case 1211: /* SQL_CA_SS_COLUMN_HIDDEN ? */ 
In line 849  		case 1212: /* SQL_CA_SS_COLUMN_KEY ? */ 
In line 870  	{							/* char/binary data */ 
In line 889  		/* numeric data */ 
In line 898  /*	Returns result data for a single column in the current row. */ 
In line 966  #endif /* ODBCVER */ 
In line 976  		/* Make sure it is the bookmark data type */ 
In line 982  #endif /* ODBCVER */ 
In line 994  		/* use zero-based column numbers */ 
In line 997  		/* make sure the column number is valid */ 
In line 1007  	/* StartRollbackState(stmt); */ 
In line 1010  		/* make sure we're positioned on a valid row */ 
In line 1031  		/* it's a SOCKET result (backend data) */ 
In line 1041  			/** value = QR_get_value_backend(res, icol); maybe thiw doesn't work */ 
In line 1104  		case COPY_GENERAL_ERROR:		/* error msg already filled in */ 
In line 1109  			/* SC_log_error(func, "no data found", stmt); */ 
In line 1128  /* 
In line 1129   *		Returns data for bound columns in the current row ("hstmt->iCursor"), 
In line 1130   *		advances the cursor. 
In line 1131   */ 
In line 1159  	/* Not allowed to bind a bookmark column when using SQLFetch. */ 
In line 1183  		/* just to avoid a crash if the user insists on calling this */ 
In line 1184  		/* function even if SQL_ExecDirect has reported an Error */ 
In line 1190  	/* StartRollbackState(stmt); */ 
In line 1194  	/* QR_inc_rowstart_in_cache(res, stmt->last_fetch_count_include_ommitted); */ 
In line 1215  	/* Note that the parameter nth is 1-based */ 
In line 1321  	/* 
In line 1322  	 * The move direction must be initialized to is_not_moving or 
In line 1323  	 * is_moving_from_the_last in advance. 
In line 1324  	 */ 
In line 1327  		QR_stop_movement(res); /* for safety */ 
In line 1333  	/* retrieve "move from the last" case first */ 
In line 1337  		if (QR_once_reached_eof(res) || self->rowset_start <= QR_get_num_total_tuples(res)) /* this shouldn't happen */ 
In line 1348  	/* normal case */ 
In line 1370  /* 
In line 1371   *	return NO_DATA_FOUND macros 
In line 1372   *	  save_rowset_start or num_tuples must be defined  
In line 1373   */ 
In line 1379  	/* move_cursor_position_if_needed(stmt, res); */ \ 
In line 1387  	/* move_cursor_position_if_needed(stmt, res); */ \ 
In line 1391  /*	This fetchs a block of data (rowset). */ 
In line 1424  	/* if (SC_is_fetchcursor(stmt) && !stmt->manual_result) */ 
In line 1443  	/* 
In line 1444  	 * If a bookmark colunmn is bound but bookmark usage is off, then 
In line 1445  	 * error 
In line 1446  	 */ 
In line 1469  		/* just to avoid a crash if the user insists on calling this */ 
In line 1470  		/* function even if SQL_ExecDirect has reported an Error */ 
In line 1475  	/* Initialize to no rows fetched */ 
In line 1490  	/* Save and discard the saved rowset size */ 
In line 1501  			/* 
In line 1502  			 * From the odbc spec... If positioned before the start of the 
In line 1503  			 * RESULT SET, then this should be equivalent to 
In line 1504  			 * SQL_FETCH_FIRST. 
In line 1505  			 */ 
In line 1537  			/* 
In line 1538  			 * From the odbc spec... If positioned after the end of the 
In line 1539  			 * RESULT SET, then this should be equivalent to 
In line 1540  			 * SQL_FETCH_LAST. 
In line 1541  			 */ 
In line 1597  			/* Position before result set, but dont fetch anything */ 
In line 1602  			/* Position before the desired row */ 
In line 1612  			/* Position with respect to the end of the result set */ 
In line 1633  			/* 
In line 1634  			 * Refresh the current rowset -- not currently implemented, 
In line 1635  			 * but lie anyway 
In line 1636  			 */ 
In line 1699  	/* 
In line 1700  	 * CHECK FOR PROPER CURSOR STATE 
In line 1701  	 */ 
In line 1703  	/* 
In line 1704  	 * Handle Declare Fetch style specially because the end is not really 
In line 1705  	 * the end... 
In line 1706  	 */ 
In line 1719  		/* If *new* rowset is after the result_set, return no data found */ 
In line 1725  	/* If *new* rowset is prior to result_set, return no data found */ 
In line 1733  		{	/* overlap with beginning of result set, 
In line 1734  			 * so get first rowset */ 
In line 1741  	/* increment the base row in the tuple cache */ 
In line 1743  	/* set the rowset_start if needed */ 
In line 1746  	/* currTuple is always 1 row prior to the rowset start */ 
In line 1776  	/* Physical Row advancement occurs for each row fetched below */ 
In line 1783  	stmt->bind_row = 0;		/* set the binding location */ 
In line 1808  				res->keyset[currp].status &= ~CURS_IN_ROWSET; /* Off the flag first */ 
In line 1827  		/* Determine Function status */ 
In line 1833  		/* Determine Row Status */ 
In line 1847  				/* refresh the status */ 
In line 1848  				/* if (SQL_ROW_DELETED != pstatus) */ 
In line 1855  			res->keyset[currp].status |= CURS_IN_ROWSET; /* This is the unique place where the CURS_IN_ROWSET bit is turned on */ 
In line 1859  		stmt->bind_row = (SQLSETPOSIROW) i; /* set the binding location */ 
In line 1865  	/* Save the fetch count for SQLSetPos */ 
In line 1868  	/* 
In line 1869  	currp = KResIdx2GIdx(currp, stmt, res); 
In line 1870  	stmt->last_fetch_count_include_ommitted = GIdx2RowIdx(currp, stmt); 
In line 1871  	*/ 
In line 1874  	/* Reset next binding row */ 
In line 1877  	/* Move the cursor position to the first row in the result set. */ 
In line 1880  	/* For declare/fetch, need to reset cursor to beginning of rowset */ 
In line 1884  	/* Set the number of rows retrieved */ 
In line 1890  		/* Only DeclareFetch should wind up here */ 
In line 1909  /* 
In line 1910   *		This determines whether there are more results sets available for 
In line 1911   *		the "hstmt". 
In line 1912   */ 
In line 1913  /* CC: return SQL_NO_DATA_FOUND since we do not support multiple result sets */ 
In line 1957  /* 
In line 1958   *	Stuff for updatable cursors. 
In line 1959   */ 
In line 2278  		/* sort deleted indexes in ascending order */ 
In line 2470  	/* update the corresponding add(updat)ed info */ 
In line 2746  							/*else if (SQL_UPDATE == rollback[j].option) 
In line 2747  							{ 
In line 2748  inolog("update[%d].index=%d\n", j, rollback[j].index); 
In line 2749  								if (IndexExists(stmt, res, rollback + j)) 
In line 2750  									break; 
In line 2751  							}*/ 
In line 2891  		/*snprintf(oideqstr, sizeof(oideqstr), " and \"%s\" = %u", bestitem, oid);*/ 
In line 2921  		/*snprintf(selstr, len, "%s where \"%s\" = %u", stmt->load_statement, bestitem, *oid);*/ 
In line 2987  		parse_statement(stmt, TRUE);	/* not preferable */ 
In line 3095  			rowc = -1; /* end of loop */ 
In line 3276  		parse_statement(stmt, TRUE);	/* not preferable */ 
In line 3363  		parse_statement(stmt, TRUE);	/* not preferable */ 
In line 3439  					/* 
In line 3440  					res->backend_tuples = (TupleField *) realloc( 
In line 3441  						res->backend_tuples, 
In line 3442  						res->num_fields * sizeof(TupleField) * tuple_size); 
In line 3443  					if (!res->backend_tuples) 
In line 3444  					{ 
In line 3445  						SC_set_error(stmt, QR_set_rstatus(res, PORES_FATAL_ERROR), "Out of memory while reading tuples.", func); 
In line 3446  						QR_Destructor(qres); 
In line 3447  						return SQL_ERROR; 
In line 3448  					} 
In line 3449  					*/ 
In line 3471  		/* stmt->currTuple = SC_get_rowset_start(stmt) + ridx; */ 
In line 3522  /* SQL_NEED_DATA callback for SC_pos_update */ 
In line 3581  #endif /* ODBCVER */ 
In line 3620  		parse_statement(s.stmt, TRUE);	/* not preferable */ 
In line 3692  			/*sprintf(updstr, "%s and \"%s\" = %u", updstr, bestitem, oid);*/ 
In line 3723  					/* fieldtype = QR_get_field_type(s.res, i); */ 
In line 3750  		/* else if (ret != SQL_SUCCESS) this is unneccesary  
In line 3751  			SC_error_copy(s.stmt, s.qstmt, TRUE); */ 
In line 3787  		parse_statement(stmt, TRUE);	/* not preferable */ 
In line 3812  	/*sprintf(dltstr, "delete from \"%s\" where ctid = '%s' and oid = %s",*/ 
In line 3818  		/*sprintf(dltstr, "%s and \"%s\" = %u", dltstr, bestitem, oid);*/ 
In line 3894  #endif /* ODBCVER */ 
In line 3969  /* SQL_NEED_DATA callback for SC_pos_add */ 
In line 4035  #endif /* ODBCVER */ 
In line 4075  		parse_statement(s.stmt, TRUE);	/* not preferable */ 
In line 4118  				/* fieldtype = QR_get_field_type(s.res, i); */ 
In line 4170  		/* else if (ret != SQL_SUCCESS) this is unneccesary 
In line 4171  			SC_error_copy(s.stmt, s.qstmt, TRUE); */ 
In line 4187  /* 
In line 4188   *	Stuff for updatable cursors end. 
In line 4189   */ 
In line 4197  #endif /* ODBCVER */ 
In line 4198  	/* save the last_fetch_count */ 
In line 4223  	/* restore the last_fetch_count */ 
In line 4244  #endif /* ODBCVER */ 
In line 4249  /*	SQL_NEED_DATA callback for PGAPI_SetPos */ 
In line 4309  				if (kres_ridx >= 0) /* the row may be deleted and not in the rowset */ 
In line 4326  #endif /* ODBCVER */ 
In line 4355  #endif /* ODBCVER */ 
In line 4364  		if (SQL_ADD != s->fOption && s->ridx >= 0) /* for SQLGetData */ 
In line 4380  #endif /* ODBCVER */ 
In line 4386  /* 
In line 4387   *	This positions the cursor within a rowset, that was positioned using SQLExtendedFetch. 
In line 4388   *	This will be useful (so far) only when using SQLGetData after SQLExtendedFetch. 
In line 4389   */ 
In line 4439  #endif /* ODBCVER */ 
In line 4440  	if (s.irow == 0) /* bulk operation */ 
In line 4462  	/* Reset for SQLGetData */ 
In line 4484  	/* StartRollbackState(s.stmt); */ 
In line 4494  /*		Sets options that control the behavior of cursors. */ 
In line 4512  /*	Set the cursor name on a statement handle */ 
In line 4535  /*	Return the cursor name for a statement handle */ 
In line 4572  	/* 
In line 4573  	 * Because this function causes no db-access, there's 
In line 4574  	 * no need to call DiscardStatementSvp() 
In line 4575  	 */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\setup.c  for analysis => 
In line 0  /*------- 
In line 1   * Module:			setup.c 
In line 2   * 
In line 3   * Description:		This module contains the setup functions for 
In line 4   *					adding/modifying a Data Source in the ODBC.INI portion 
In line 5   *					of the registry. 
In line 6   * 
In line 7   * Classes:			n/a 
In line 8   * 
In line 9   * API functions:	ConfigDSN, ConfigDriver 
In line 10   * 
In line 11   * Comments:		See "readme.txt" for copyright and license information. 
In line 12   *------- 
In line 13   */ 
In line 16  #include  "misc.h" // strncpy_null 
In line 31  extern HINSTANCE NEAR s_hModule;	/* Saved module handle. */ 
In line 34  /* Constants */ 
In line 37  #define MAXKEYLEN		(32+1)	/* Max keyword length */ 
In line 38  #define MAXDESC			(255+1) /* Max description length */ 
In line 39  #define MAXDSNAME		(32+1)	/* Max data source name length */ 
In line 42  /*-------- 
In line 43   *	ConfigDSN 
In line 44   * 
In line 45   *	Description:	ODBC Setup entry point 
In line 46   *				This entry point is called by the ODBC Installer 
In line 47   *				(see file header for more details) 
In line 48   *	Input	 :	hwnd ----------- Parent window handle 
In line 49   *				fRequest ------- Request type (i.e., add, config, or remove) 
In line 50   *				lpszDriver ----- Driver name 
In line 51   *				lpszAttributes - data source attribute string 
In line 52   *	Output	 :	TRUE success, FALSE otherwise 
In line 53   *-------- 
In line 54   */ 
In line 61  	BOOL		fSuccess;		/* Success/fail flag */ 
In line 66  	/* Allocate attribute array */ 
In line 71  	/* Parse attribute string */ 
In line 75  	/* Save original data source name */ 
In line 81  	/* Remove data source */ 
In line 84  		/* Fail if no data source name was supplied */ 
In line 88  		/* Otherwise remove data source from ODBC.INI */ 
In line 92  	/* Add or Configure data source */ 
In line 95  		/* Save passed variables for global access (e.g., dialog access) */ 
In line 101  		/* 
In line 102  		 * Display the appropriate dialog (if parent window handle 
In line 103  		 * supplied) 
In line 104  		 */ 
In line 107  			/* Display dialog(s) */ 
In line 126  /*-------- 
In line 127   *	ConfigDriver 
In line 128   * 
In line 129   *	Description:	ODBC Setup entry point 
In line 130   *			This entry point is called by the ODBC Installer 
In line 131   *			(see file header for more details) 
In line 132   *	Arguments :	hwnd ----------- Parent window handle 
In line 133   *			fRequest ------- Request type (i.e., add, config, or remove) 
In line 134   *			lpszDriver ----- Driver name 
In line 135   *			lpszArgs ------- A null-terminated string containing 
In line 136  				arguments for a driver specific fRequest 
In line 137   *			lpszMsg -------- A null-terimated string containing 
In line 138  			  	an output message from the driver setup 
In line 139   *			cnMsgMax ------- Length of lpszMSg 
In line 140   *			pcbMsgOut ------ Total number of bytes available to 
In line 141  				return in lpszMsg  
In line 142   *	Returns :	TRUE success, FALSE otherwise 
In line 143   *-------- 
In line 144   */ 
In line 156  	BOOL	fSuccess = TRUE;	/* Success/fail flag */ 
In line 163  	/* Add the driver */ 
In line 184  /*------- 
In line 185   * CenterDialog 
In line 186   * 
In line 187   *		Description:  Center the dialog over the frame window 
In line 188   *		Input	   :  hdlg -- Dialog window handle 
In line 189   *		Output	   :  None 
In line 190   *------- 
In line 191   */ 
In line 237  /*------- 
In line 238   * ConfigDlgProc 
In line 239   *	Description:	Manage add data source name dialog 
In line 240   *	Input	 :	hdlg --- Dialog window handle 
In line 241   *				wMsg --- Message 
In line 242   *				wParam - Message parameter 
In line 243   *				lParam - Message parameter 
In line 244   *	Output	 :	TRUE if message processed, FALSE otherwise 
In line 245   *------- 
In line 246   */ 
In line 260  			/* Initialize the dialog */ 
In line 265  			/* Hide the driver connect message */ 
In line 271  			CenterDialog(hdlg); /* Center dialog */ 
In line 273  			/* 
In line 274  			 * NOTE: Values supplied in the attribute string will always 
In line 275  			 */ 
In line 276  			/* override settings in ODBC.INI */ 
In line 279  			/* Get the rest of the common attributes */ 
In line 282  			/* Fill in any defaults */ 
In line 285  			/* Initialize dialog fields */ 
In line 301  			return TRUE;		/* Focus was not set */ 
In line 303  			/* Process buttons */ 
In line 307  					/* 
In line 308  					 * Ensure the OK button is enabled only when a data 
In line 309  					 * source name 
In line 310  					 */ 
In line 311  					/* is entered */ 
In line 315  						char		szItem[MAXDSNAME];	/* Edit control text */ 
In line 317  						/* Enable/disable the OK button */ 
In line 325  					/* Accept results */ 
In line 329  					/* Retrieve dialog values */ 
In line 334  					/* Get Dialog Values */ 
In line 337  					/* Update ODBC.INI */ 
In line 341  					/* Return to caller */ 
In line 355  						/* Get Dialog Values */ 
In line 366  #endif /* UNICODE_SUPPORT */ 
In line 375  #endif /* UNICODE_SUPPORT */ 
In line 404  #endif /* UNICODE_SUPPORT */ 
In line 450  	/* Message not processed */ 
In line 455  /*------- 
In line 456   * ParseAttributes 
In line 457   * 
In line 458   *	Description:	Parse attribute string moving values into the aAttr array 
In line 459   *	Input	 :	lpszAttributes - Pointer to attribute string 
In line 460   *	Output	 :	None (global aAttr normally updated) 
In line 461   *------- 
In line 462   */ 
In line 476  		/* 
In line 477  		 * Extract key name (e.g., DSN), it must be terminated by an 
In line 478  		 * equals 
In line 479  		 */ 
In line 484  				return;			/* No key was found */ 
In line 486  				break;			/* Valid key found */ 
In line 488  		/* Determine the key's index in the key table (-1 if not found) */ 
In line 496  		/* Locate end of key value */ 
In line 501  		/* lpsetupdlg->aAttr[iElement].fSupplied = TRUE; */ 
In line 506  		/* Copy the appropriate value to the conninfo  */ 
In line 514  /*-------- 
In line 515   * SetDSNAttributes 
In line 516   * 
In line 517   *	Description:	Write data source attributes to ODBC.INI 
In line 518   *	Input	 :	hwnd - Parent window handle (plus globals) 
In line 519   *	Output	 :	TRUE if successful, FALSE otherwise 
In line 520   *-------- 
In line 521   */ 
In line 525  	LPCSTR		lpszDSN;		/* Pointer to data source name */ 
In line 531  	/* Validate arguments */ 
In line 535  	/* Write the data source name */ 
In line 544  #endif /* ODBCVER */ 
In line 562  	/* Update ODBC.INI */ 
In line 566  	/* If the data source name has changed, remove the old name */ 
In line 572  /*-------- 
In line 573   * SetDriverAttributes 
In line 574   * 
In line 575   *	Description:	Write driver information attributes to ODBCINST.INI 
In line 576   *	Input	 :	lpszDriver - The driver name 
In line 577   *	Output	 :	TRUE if successful, FALSE otherwise 
In line 578   *-------- 
In line 579   */ 
In line 585  	/* Validate arguments */ 
In line 654  #endif /* WIN32 */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\socket.c  for analysis => 
In line 0  // __________________________________________ 
In line 1  // Задача       : PostgreSQL ODBC Driver 
In line 2  // Назначение	: Низкоуровневые функции для работы с сетью 
In line 3  // Язык         : C++ (Microsoft Visual Studio 2010) 
In line 4  // Программист	: The PostgreSQL Global Development Group 
In line 5  // Дата	        : 02.2014 
In line 6  // Изменения	: 08.2017 Романов Д.Г.  
In line 7  //                Уменьшен размер TCP-пакета в функции SOCK_flush_output 
In line 8  // __________________________________________ 
In line 10  /*------- 
In line 11   * Module:			socket.c 
In line 12   * 
In line 13   * Description:		This module contains functions for low level socket 
In line 14   *					operations (connecting/reading/writing to the backend) 
In line 15   * 
In line 16   * Classes:			SocketClass (Functions prefix: "SOCK_") 
In line 17   * 
In line 18   * API functions:	none 
In line 19   * 
In line 20   * Comments:		See "readme.txt" for copyright and license information. 
In line 21   *------- 
In line 22   */ 
In line 28  #endif /* USE_SSPI */ 
In line 31  #endif /* USE_GSS */ 
In line 36  #endif /* USE_SSL */ 
In line 37  #endif /* NOT_USE_LIBPQ */ 
In line 45  #include <Wspiapi.h>	/* Ensure to support the backward-compatibility version 
In line 46  			   of getaddrinfo() etc */ 
In line 49  #include <string.h>				/* for memset */ 
In line 58  #endif /* HAVE_SYS_TIME_H */ 
In line 59  #endif /* TIME_WITH__SYS_TIME */ 
In line 60  #endif /* WIN32 */ 
In line 92  #endif /* USE_SSPI */ 
In line 96  #endif /* USE_GSS */ 
In line 103  #endif /* NOT_USE_LIBPQ */ 
In line 153  			/* UnloadDelayLoadedDLLs(NULL != self->ssl); */ 
In line 162  #endif /* NOT_USE_LIBPQ */ 
In line 180  #endif /* USE_SSPI */ 
In line 183  #endif /* USE_GSS */ 
In line 202  #endif /* WIN32 */ 
In line 211  #endif /* _MSC_VER */ 
In line 237  #endif /* STRERROR_R_CHAR_P */ 
In line 241  #endif /* POSIX_MULTITHREAD_SUPPORT */ 
In line 242  #endif /* WIN32 */ 
In line 288  #endif /* WIN32 */ 
In line 297  	/* 
In line 298  	 * Hostname lookup. 
In line 299  	 */ 
In line 303  #endif /* WIN32 */ 
In line 315  #endif /* AI_NUMERICSERV */ 
In line 317  			/* don't resolve address in getaddrinfo() if not necessary */ 
In line 334  		/* passing NULL or '' means pg default "/tmp" */ 
In line 343  #endif /* HAVE_UNIX_SOCKETS */ 
In line 368  #endif /* TCP_NODELAY */ 
In line 383  #endif /* SO_KEEPALIVE */ 
In line 388  		/* Returns non-0 on failure, while fcntl() returns -1 on failure */ 
In line 411  #endif /* HAVE_POLL */ 
In line 424  #endif /* EAGAIN */ 
In line 427  #endif /* EWOULDBLOCK */ 
In line 453  #endif /* HAVE_POLL */ 
In line 498  			/* snprintf(errmsg, sizeof(errmsg), "connect getsockopt val %d addr=%s\n", optval, host); */ 
In line 532  /* 
In line 533   *	To handle EWOULDBLOCK etc (mainly for libpq non-blocking connection). 
In line 534   */ 
In line 545  #endif /* HAVE_POLL */ 
In line 555  #endif /* USE_SSL */ 
In line 574  #endif /* HAVE_POLL */ 
In line 593  #endif /* USE_SSPI */ 
In line 603  #endif /* USE_SSPI */ 
In line 608  /* 
In line 609   *	The stuff for SSL. 
In line 610   */ 
In line 611  /* included in  <openssl/ssl.h> 
In line 612  #define SSL_ERROR_NONE			0 
In line 613  #define SSL_ERROR_SSL			1 
In line 614  #define SSL_ERROR_WANT_READ		2 
In line 615  #define SSL_ERROR_WANT_WRITE		3 
In line 616  #define SSL_ERROR_WANT_X509_LOOKUP	4 
In line 617  #define SSL_ERROR_SYSCALL		5 // look at error stack/return value/errno 
In line 618  #define SSL_ERROR_ZERO_RETURN		6 
In line 619  #define SSL_ERROR_WANT_CONNECT		7 
In line 620  #define SSL_ERROR_WANT_ACCEPT		8 
In line 621  */ 
In line 617  #define SSL_ERROR_SYSCALL		5 // look at error stack/return value/errno 
In line 623  /* 
In line 624   *	recv more than 1 bytes using SSL. 
In line 625   */ 
In line 668  /* 
In line 669   *	send more than 1 bytes using SSL. 
In line 670   */ 
In line 711  #endif /* USE_SSL */ 
In line 723  		/* 
In line 724  		do 
In line 725  		{ 
In line 726  			SOCK_get_next_byte(self, FALSE); 
In line 727  			if (0 != self->errornumber) 
In line 728  				return 0; 
In line 729  		} while (self->reslen > 0); 
In line 730  		*/ 
In line 749  	/* 
In line 750  	for (lf = 0; lf < len; lf++) 
In line 751  	{ 
In line 752  		if (0 != self->errornumber) 
In line 753  			break; 
In line 754  		buffer[lf] = SOCK_get_next_byte(self, FALSE); 
In line 755  	} 
In line 756  	*/ 
In line 783  /* 
In line 784   *	bufsize must include room for the null terminator 
In line 785   *	will read at most bufsize-1 characters + null. 
In line 786   *	returns TRUE if truncation occurs. 
In line 787   */ 
In line 903  #endif /* USE_SSL */ 
In line 917  #endif /* EAGAIN */ 
In line 920  #endif /* EWOULDBLOCK */ 
In line 949  		/* 
In line 950  		 * there are no more bytes left in the buffer so reload the buffer 
In line 951  		 */ 
In line 958  #endif /* USE_SSL */ 
In line 974  #endif /* EAGAIN */ 
In line 977  #endif /* EWOULDBLOCK */ 
In line 1032  		/* 
In line 1033  		 * there are no more bytes left in the buffer so reload the buffer 
In line 1034  		 */ 
In line 1041  #endif /* USE_SSL */ 
In line 1057  #endif /* EAGAIN */ 
In line 1060  #endif /* EWOULDBLOCK */ 
In line 1128  		/* buffer is full, so write it out */ 
In line 1135  #endif /* USE_SSL */ 
In line 1148  #endif /* EAGAIN */ 
In line 1151  #endif /* EWOULDBLOCK */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\sspisvcs.c  for analysis => 
In line 0  /*------- 
In line 1   * Module:			sspisvcs.c 
In line 2   * 
In line 3   * Description:		This module contains functions for low level socket 
In line 4   *					operations (connecting/reading/writing to the backend) 
In line 5   * 
In line 6   * Classes:			SocketClass (Functions prefix: "SOCK_") 
In line 7   * 
In line 8   * API functions:	none 
In line 9   * 
In line 10   * Comments:		See "readme.txt" for copyright and license information. 
In line 11   *------- 
In line 12   */ 
In line 27  /* 
In line 28   *	To handle EWOULDBLOCK etc (mainly for libpq non-blocking connection). 
In line 29   */ 
In line 126  /*	 
In line 127   *	service specific data 
In line 128   */ 
In line 130  /*	Schannel specific data */ 
In line 141  /*	Kerberos/Negotiate common specific data */ 
In line 243  /* 
In line 244   *	Stuff for Schannel service 
In line 245   */ 
In line 290  /* 
In line 291   *	This driver allows certificates of PFX form when a pair of 
In line 292   *	postgresql.crt and postgresql.key doesn't work well.  
In line 293   */ 
In line 424  	// Create a temporary and volatile CSP context in order to import 
In line 425  	// the key 
In line 431  	// import private key 
In line 549  				case  1223: // ERROR_CANCELED 
In line 647  	LPCTSTR	opt,		/* in */ 
In line 648  	LPSTR pszUserName,	/* in */ 
In line 649  	PCredHandle phCreds)	/* out */ 
In line 663  	/* 
In line 664  	 * If a user name is specified, then attempt to find a client 
In line 665  	 * certificate. Otherwise, just create a NULL credential. 
In line 666  	 */ 
In line 672  		/* Find client certificate. Note that this sample just searchs for a  
In line 673  		 * certificate that contains the user name somewhere in the subject name. 
In line 674  		 * A real application should be a bit less casual. 
In line 675  		 */ 
In line 691  	/* 
In line 692  	 * Build Schannel credential structure. Currently, this sample only 
In line 693  	 * specifies the protocol to be used (and optionally the certificate,  
In line 694  	 * of course). Real applications may wish to specify other parameters  
In line 695  	 * as well. 
In line 696  	 */ 
In line 722  	/* The SCH_CRED_MANUAL_CRED_VALIDATION flag is specified because 
In line 723  	 * this sample verifies the server certificate manually.  
In line 724  	 * Applications that expect to run on WinNT, Win9x, or WinME  
In line 725  	 * should specify this flag and also manually verify the server 
In line 726  	 * certificate. Applications running on newer versions of Windows can 
In line 727  	 * leave off this flag, in which case the InitializeSecurityContext 
In line 728  	 * function will validate the server certificate automatically. 
In line 729   	 */ 
In line 738  		// InstallRootCA(); 
In line 741  	/* 
In line 742  	 * Create an SSPI credential. 
In line 743  	 */ 
In line 746  			NULL,			/* Name of principal */     
In line 747  			UNI_SCHANNEL,		/* Name of package */ 
In line 748  			SECPKG_CRED_OUTBOUND,	/* Flags indicating use */ 
In line 749  			NULL,			/* Pointer to logon ID */ 
In line 750  			&SchannelCred,		/* Package specific data */ 
In line 751  			NULL,			/* Pointer to GetKey() func */ 
In line 752  			NULL,			/* Value to pass to GetKey() */ 
In line 753  			phCreds,		/* (out) Cred Handle */ 
In line 754  			&tsExpiry);		/* (out) Lifetime (optional) */ 
In line 763  	/* 
In line 764  	 * Free the certificate context. Schannel has already made its own copy. 
In line 765  	 */ 
In line 777  	SOCKET		Socket,		/* in */ 
In line 778  	PCredHandle	phCreds,	/* in */ 
In line 779  	LPSTR		pszServerName,	/* in */ 
In line 780  	CtxtHandle	*phContext,	/* out */ 
In line 781  	SecBuffer	*pExtraData)	/* out */ 
In line 798  	/* 
In line 799  	 *  Initiate a ClientHello message and generate a token. 
In line 800  	 */ 
In line 830  	/* Send response to server if there is one. */ 
In line 846  		/* Free output buffer. */ 
In line 858  	SOCKET		Socket,		/* in */ 
In line 859  	PCredHandle	phCreds,	/* in */ 
In line 860  	CtxtHandle	*phContext,	/* i-o */ 
In line 861  	BOOL		fDoInitialRead,	/* in */ 
In line 862  	SecBuffer	*pExtraData)	/* out */ 
In line 886  	/* 
In line 887  	 * Allocate data buffer. 
In line 888  	 */ 
In line 899  	/*  
In line 900  	 * Loop until the handshake is finished or an error occurs. 
In line 901  	 */ 
In line 909  		/* 
In line 910  		 * Read data from server. 
In line 911  		 */ 
In line 957  		/* 
In line 958  		 * Set up the input buffers. Buffer 0 is used to pass in data 
In line 959  		 * received from the server. Schannel will consume some or all 
In line 960  		 * of this. Leftover data (if any) will be placed in buffer 1 and 
In line 961  		 * given a buffer type of SECBUFFER_EXTRA. 
In line 962  		 */ 
In line 975  		/* 
In line 976  		 * Set up the output buffers. These are initialized to NULL 
In line 977  		 * so as to make it less likely we'll attempt to free random 
In line 978  		 * garbage later. 
In line 979  		 */ 
In line 989  		/* 
In line 990  		 * Call InitializeSecurityContext. 
In line 991  		 */ 
In line 1006  		/* 
In line 1007  		 * If InitializeSecurityContext was successful (or if the error was  
In line 1008  		 * one of the special extended ones), send the contends of the output 
In line 1009  		 * buffer to the server. 
In line 1010  		 */ 
In line 1031  				/* Free output buffer. */ 
In line 1037  		/* 
In line 1038  		 * If InitializeSecurityContext returned SEC_E_INCOMPLETE_MESSAGE, 
In line 1039  		 * then we need to read more data from the server and try again. 
In line 1040  		 */ 
In line 1047  		/* 
In line 1048  		 * If InitializeSecurityContext returned SEC_E_OK, then the  
In line 1049  		 * handshake completed successfully. 
In line 1050  		 */ 
In line 1054  			/* 
In line 1055  			 * If the "extra" buffer contains data, this is encrypted application 
In line 1056  			 * protocol layer stuff. It needs to be saved. The application layer 
In line 1057  			 * will later decrypt it with DecryptMessage. 
In line 1058  			 */ 
In line 1087  			/* 
In line 1088  			 * Bail out to quit 
In line 1089  			 */ 
In line 1094  		/* 
In line 1095  		 * Check for fatal error. 
In line 1096  		 */ 
In line 1104  		/* 
In line 1105  		 * If InitializeSecurityContext returned SEC_I_INCOMPLETE_CREDENTIALS, 
In line 1106  		 * then the server just requested client authentication.  
In line 1107  		 */ 
In line 1111  			/* 
In line 1112  			 * Busted. The server has requested client authentication and 
In line 1113  			 * the credential we supplied didn't contain a client certificate. 
In line 1114  			 * 
In line 1115   
In line 1116  			 *  
In line 1117  			 * This function will read the list of trusted certificate 
In line 1118  			 * authorities ("issuers") that was received from the server 
In line 1119  			 * and attempt to find a suitable client certificate that 
In line 1120  			 * was issued by one of these. If this function is successful,  
In line 1121  			 * then we will connect using the new certificate. Otherwise, 
In line 1122  			 * we will attempt to connect anonymously (using our current 
In line 1123  			 * credentials). 
In line 1124  			 */ 
In line 1131  			/* Go around again. */ 
In line 1136  		/* 
In line 1137  		 * Copy any leftover data from the "extra" buffer, and go around 
In line 1138  		 * again. 
In line 1139  		 */ 
In line 1155  	/* Delete the security context in the case of a fatal error. */ 
In line 1180  	/* 
In line 1181  	 * Enumerate the client certificates. 
In line 1182  	 */ 
In line 1196          	/* Create schannel credential. */ 
In line 1202                              NULL,		/* Name of principal */ 
In line 1203                              UNI_SCHANNEL,	/* Name of package */ 
In line 1204                              SECPKG_CRED_OUTBOUND,	/* Flags indicating use */ 
In line 1205                              NULL,		/* Pointer to logon ID */ 
In line 1206                              &SchannelCred,	/* Package specific data */ 
In line 1207                              NULL,		/* Pointer to GetKey() func */ 
In line 1208                              NULL,		/* Value to pass to GetKey() */ 
In line 1209                              &hCreds,		/* (out) Cred Handle */ 
In line 1210                              &tsExpiry);		/* (out) Lifetime (optional) */ 
In line 1218  		/* Destroy the old credentials. */ 
In line 1223  		/* 
In line 1224  		 * As you can see, this sample code maintains a single credential 
In line 1225  		 * handle, replacing it as necessary. This is a little unusual. 
In line 1226  		 * 
In line 1227  		 * Many applications maintain a global credential handle that's 
In line 1228  		 * anonymous (that is, it doesn't contain a client certificate), 
In line 1229  		 * which is used to connect to all servers. If a particular server 
In line 1230  		 * should require client authentication, then a new credential  
In line 1231  		 * is created for use when connecting to that server. The global 
In line 1232  		 * anonymous credential is retained for future connections to 
In line 1233  		 * other servers. 
In line 1234  		 * 
In line 1235  		 * Maintaining a single anonymous credential that's used whenever 
In line 1236  		 * possible is most efficient, since creating new credentials all 
In line 1237  		 * the time is rather expensive. 
In line 1238  		 */ 
In line 1246  /* 
In line 1247   *	Stuff for Kerberos etc service 
In line 1248   */ 
In line 1341  	LPCTSTR	opt,		/* in */ 
In line 1342  	SEC_CHAR *packname,	/* in */ 
In line 1343  	LPCTSTR pszUserName,	/* in */ 
In line 1344  	PCredHandle phCreds)	/* out */ 
In line 1349  	/* 
In line 1350  	 * Create an SSPI credential. 
In line 1351  	 */ 
In line 1354  			NULL,			/* Name of principal */     
In line 1355  			packname,		/* Name of package */ 
In line 1356  			SECPKG_CRED_OUTBOUND,   /* Flags indicating use */ 
In line 1357  			NULL,			/* Pointer to logon ID */ 
In line 1358  			NULL,			/* Package specific data */ 
In line 1359  			NULL,			/* Pointer to GetKey() func */ 
In line 1360  			NULL,			/* Value to pass to GetKey() */ 
In line 1361  			phCreds,		/* (out) Cred Handle */ 
In line 1362  			&tsExpiry);		/* (out) Lifetime (optional) */ 
In line 1377  	SocketClass	*sock,		/* in */ 
In line 1378  	KerberosEtcSpec	*ssd,		/* i-o */ 
In line 1422  	/* 
In line 1423  	 *  Initiate a ClientHello message and generate a token. 
In line 1424  	 */ 
In line 1464  	/* Send response to server if there is one. */ 
In line 1482  		/* Free output buffer. */ 
In line 1488  	// return KerberosEtcClientHandshakeLoop(Socket, ssd, TRUE, pExtraData); 
In line 1524  		/* 
In line 1525  		 * Read data from server until done. 
In line 1526  		 */ 
In line 1537  			/* 
In line 1538  			 * Read some data. 
In line 1539  			 */ 
In line 1589  					/* Server disconnected. */ 
In line 1612  			/*  
In line 1613  			 * Attempt to decrypt the received data. 
In line 1614  			 */ 
In line 1632  				/* The input buffer contains only a fragment of an 
In line 1633  				 * encrypted record. Loop around and read some more 
In line 1634  				 * data. 
In line 1635  				 */ 
In line 1646  			/* Server signalled end of session */ 
In line 1657  			/* Locate data and (optional) extra buffers. */ 
In line 1674  			/* Display or otherwise process the decrypted data. */ 
In line 1694  			/* Move any "extra" data to the input buffer. */ 
In line 1708  				/* The server wants to perform another handshake 
In line 1709  				 * sequence. 
In line 1710  				 */ 
In line 1723  				/* Move any "extra" data to the input buffer. */ 
In line 1776  	/*	sb[3].cbBuffer	= 16; 
In line 1777  		sb[3].pvBuffer	= lpPad; */ 
In line 1843  #endif /* USE_SSPI */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\statement.c  for analysis => 
In line 0  /*------- 
In line 1   * Module:			statement.c 
In line 2   * 
In line 3   * Description:		This module contains functions related to creating 
In line 4   *					and manipulating a statement. 
In line 5   * 
In line 6   * Classes:			StatementClass (Functions prefix: "SC_") 
In line 7   * 
In line 8   * API functions:	SQLAllocStmt, SQLFreeStmt 
In line 9   * 
In line 10   * Comments:		See "readme.txt" for copyright and license information. 
In line 11   *------- 
In line 12   */ 
In line 17  #endif /* _WIN32_WINNT */ 
In line 18  #endif /* WIN_MULTITHREAD_SUPPORT */ 
In line 21  #include "misc.h" // strncpy_null 
In line 40  /*	Map sql commands to statement types */ 
In line 145  	/* 
In line 146  	 * Special-commands that cannot be run in a transaction block. This isn't 
In line 147  	 * as granular as it could be. VACUUM can never be run in a transaction 
In line 148  	 * block, but some variants of REINDEX and CLUSTER can be. CHECKPOINT 
In line 149  	 * doesn't throw an error if you do, but it cannot be rolled back so 
In line 150  	 * there's no point in beginning a new transaction for it. 
In line 151  	 */ 
In line 213  	/* Copy default statement options based from Connection options */ 
In line 229  	/* Save the handle for later */ 
In line 256  		/* Remove the statement from the connection's statement list */ 
In line 264  				return SQL_ERROR; /* stmt may be executing a transaction */ 
In line 266  			/* 
In line 267  			 *	Before dropping the statement, sync and discard 
In line 268  			 *	the response from the server for the pending 
In line 269  			 *	extended query. 
In line 270  			 */ 
In line 273  			conn->stmt_in_extquery = NULL; /* for safety */ 
In line 274  			/* 
In line 275  			 * Free any cursors and discard any result info. 
In line 276  			 * Don't detach the statement from the connection 
In line 277  			 * before freeing the associated cursors. Otherwise 
In line 278  			 * CC_cursor_count() would get wrong results. 
In line 279  			 */ 
In line 286  				return SQL_ERROR;		/* stmt may be executing a 
In line 287  										 * transaction */ 
In line 298  		/* Destroy the statement and free any results, cursors, etc. */ 
In line 305  		/* 
In line 306  		 * this should discard all the results, but leave the statement 
In line 307  		 * itself in place (it can be executed again) 
In line 308  		 */ 
In line 332  /* 
In line 333   * StatementClass implementation 
In line 334   */ 
In line 339  	opt->maxRows = 0;		/* driver returns all rows */ 
In line 340  	opt->maxLength = 0;		/* driver returns all data for char/binary */ 
In line 341  	opt->keyset_size = 0;		/* fully keyset driven is the default */ 
In line 348  #endif /* ODBCVER */ 
In line 405  		rv->multi_statement = -1; /* unknown */ 
In line 406  		rv->num_params = -1; /* unknown */ 
In line 443  		/* Parse Stuff */ 
In line 446  		rv->num_key_fields = -1; /* unknown */ 
In line 452  		/* Clear Statement Options -- defaults will be set in AllocStmt */ 
In line 500  			res->conn = NULL;	/* prevent any dbase activity */ 
In line 507          /* Free the parsed table information */ 
In line 511  	/* Free the parsed field information */ 
In line 571  /* 
In line 572   *	Free parameters and free the memory from the 
In line 573   *	data-at-execution parameters that was allocated in SQLPutData. 
In line 574   */ 
In line 601  	/* ignore leading whitespace in query string */ 
In line 709  /* 
In line 710   *	Initialize stmt_with_params, load_statement and execute_statement 
In line 711   *		member pointer deallocating corresponding prepared plan. 
In line 712   *	Also initialize statement member pointer if specified. 
In line 713   */ 
In line 741  		self->statement_type = STMT_TYPE_UNKNOWN; /* unknown */ 
In line 742  		self->multi_statement = -1; /* unknown */ 
In line 743  		self->num_params = -1; /* unknown */ 
In line 744  		self->proc_return = -1; /* unknown */ 
In line 774  	/* 
In line 775  	 * We can dispose the result of PREMATURE execution any time. 
In line 776  	 */ 
In line 804  /* 
In line 805   *	Called from SQLPrepare if STMT_PREMATURE, or 
In line 806   *	from SQLExecute if STMT_FINISHED, or 
In line 807   *	from SQLFreeStmt(SQL_CLOSE) 
In line 808   */ 
In line 819  	/* This would not happen */ 
In line 830  			/* this statement does not need to be recycled */ 
In line 838  			/* 
In line 839  			 * Premature execution of the statement might have caused the 
In line 840  			 * start of a transaction. If so, we have to rollback that 
In line 841  			 * transaction. 
In line 842  			 */ 
In line 847  					/* CC_abort(conn); */ 
In line 864          		/* Free the parsed table/field information */ 
In line 872  	/* Free any cursors */ 
In line 889  	/* self->rbonerr = 0; Never clear the bits here */ 
In line 891  	/* 
In line 892  	 * Reset only parameters that have anything to do with results 
In line 893  	 */ 
In line 895  	self->catalog_result = FALSE;	/* not very important */ 
In line 909  	/* 
In line 910  	 * Free any data at exec params before the statement is executed 
In line 911  	 * again.  If not, then there will be a memory leak when the next 
In line 912  	 * SQLParamData/SQLPutData is called. 
In line 913  	 */ 
In line 918  	/* 
In line 919  	 *	reset the current attr setting to the original one. 
In line 920  	 */ 
In line 930  /* 
In line 931   *	Scan the query wholly or partially (if the next_cmd param specified). 
In line 932   *	Also count the number of parameters respectviely. 
In line 933   */ 
In line 963  		if (ENCODE_STATUS(encstr) != 0) /* multibyte char */ 
In line 1096  /* 
In line 1097   * Pre-execute a statement (for SQLPrepare/SQLDescribeCol)  
In line 1098   */ 
In line 1099  Int4	/* returns # of fields if successful */ 
In line 1169  /* This is only called from SQLFreeStmt(SQL_UNBIND) */ 
In line 1217  /* 
In line 1218   *	This function creates an error info which is the concatenation 
In line 1219   *	of the result, statement, connection, and socket messages. 
In line 1220   */ 
In line 1222  /*	Map sql commands to statement types */ 
In line 1233  	{ STMT_ROW_VERSION_CHANGED,  "01001", "01001" }, /* data changed */ 
In line 1235  	{ STMT_TRUNCATED, "01004", "01004" }, /* data truncated */ 
In line 1236  	{ STMT_INFO_ONLY, "00000", "00000" }, /* just an information that is returned, no error */ 
In line 1238  	{ STMT_OK,  "00000", "00000" }, /* OK */ 
In line 1239  	{ STMT_EXEC_ERROR, "HY000", "S1000" }, /* also a general error */ 
In line 1241  	{ STMT_SEQUENCE_ERROR, "HY010", "S1010" }, /* Function sequence error */ 
In line 1242  	{ STMT_NO_MEMORY_ERROR, "HY001", "S1001" }, /* memory allocation failure */ 
In line 1243  	{ STMT_COLNUM_ERROR, "07009", "S1002" }, /* invalid column number */ 
In line 1244  	{ STMT_NO_STMTSTRING, "HY001", "S1001" }, /* having no stmtstring is also a malloc problem */ 
In line 1245  	{ STMT_ERROR_TAKEN_FROM_BACKEND, "HY000", "S1000" }, /* general error */ 
In line 1246  	{ STMT_INTERNAL_ERROR, "HY000", "S1000" }, /* general error */ 
In line 1248  	{ STMT_NOT_IMPLEMENTED_ERROR, "HYC00", "S1C00" }, /* == 'driver not  
In line 1249  							  * capable' */ 
In line 1255  	{ STMT_CREATE_TABLE_ERROR, "42S01", "S0001" }, /* table already exists */ 
In line 1258  	{ STMT_INVALID_ARGUMENT_NO, "HY024", "S1009" }, /* invalid argument value */ 
In line 1265  	{ STMT_BAD_ERROR, "08S01", "08S01" }, /* communication link failure */ 
In line 1450  		if (0 > number &&		/* SQL_SUCCESS_WITH_INFO */ 
In line 1495  		if (0 == from->__error_number)	/* SQL_SUCCESS */ 
In line 1497  		if (0 > from->__error_number &&	/* SQL_SUCCESS_WITH_INFO */ 
In line 1568  /*              Returns the next SQL error information. */ 
In line 1579  	/* CC: return an error of a hdesc  */ 
In line 1597  /* 
In line 1598   *	Currently, the driver offers very simple bookmark support -- it is 
In line 1599   *	just the current row number.  But it could be more sophisticated 
In line 1600   *	someday, such as mapping a key to a 32 bit value 
In line 1601   */ 
In line 1628  	/* TupleField *tupleField; */ 
In line 1634  	coli = QR_get_fields(res);	/* the column info */ 
In line 1644  			/* 
In line 1645  			 * if at the end of the tuples, return "no data found" and set 
In line 1646  			 * the cursor past the end of the result set 
In line 1647  			 */ 
In line 1659  		/* read from the cache or the physical next tuple */ 
In line 1671  			(self->currTuple)++;	/* all is well */ 
In line 1734  	/* 
In line 1735  	 * If the bookmark column was bound then return a bookmark. Since this 
In line 1736  	 * is used with SQLExtendedFetch, and the rowset size may be greater 
In line 1737  	 * than 1, and an application can use row or column wise binding, use 
In line 1738  	 * the code in copy_and_convert_field() to handle that. 
In line 1739  	 */ 
In line 1753  	if (self->options.retrieve_data == SQL_RD_OFF)		/* data isn't required */ 
In line 1755  	/* The following adjustment would be needed after SQLMoreResults() */ 
In line 1765  		/* reset for SQLGetData */ 
In line 1772  			/* this column has a binding */ 
In line 1774  			/* type = QR_get_field_type(res, lf); */ 
In line 1775  			type = CI_get_oid(coli, lf);		/* speed things up */ 
In line 1776  			atttypmod = CI_get_atttypmod(coli, lf);	/* speed things up */ 
In line 1799  					break;		/* OK, do next bound column */ 
In line 1819  					/* error msg already filled in */ 
In line 1824  					/* This would not be meaningful in SQLFetch. */ 
In line 1863  	/* Begin a transaction if one is not already in progress */ 
In line 1865  	/* 
In line 1866  	 * Basically we don't have to begin a transaction in autocommit mode 
In line 1867  	 * because Postgres backend runs in autocomit mode. We issue "BEGIN" 
In line 1868  	 * in the following cases. 1) we use declare/fetch and the statement 
In line 1869  	 * is SELECT (because declare/fetch must be called in a transaction). 
In line 1870  	 * 2) we are in autocommit off state and the statement isn't of type 
In line 1871  	 * OTHER. 
In line 1872  	 */ 
In line 1891  	/* issue BEGIN ? */ 
In line 1907  	    /* || SC_is_with_hold(self) thiw would lose the performance */ 
In line 1912  		/* 
In line 1913  		 * Some utility commands like VACUUM cannot be run in a transaction 
In line 1914  		 * block, so don't begin one even if auto-commit mode is disabled. 
In line 1915  		 * 
In line 1916  		 * An application should never issue an explicit BEGIN when 
In line 1917  		 * auto-commit mode is disabled (probably not even when it's enabled, 
In line 1918  		 * actually). We used to also suppress the implicit BEGIN when the 
In line 1919  		 * statement was of STMT_TYPE_START type, ie. if the application 
In line 1920  		 * issued an explicit BEGIN, but that actually seems like a bad idea. 
In line 1921  		 * First of all, if you issue a BEGIN twice the backend will give a 
In line 1922  		 * warning which can be helpful to spot mistakes in the application 
In line 1923  		 * (because it shouldn't be doing that). 
In line 1924  		 */ 
In line 1939  	/* self->status = STMT_EXECUTING; */ 
In line 1947  	/* If it's a SELECT statement, use a cursor. */ 
In line 1949  	/* 
In line 1950  	 * Note that the declare cursor has already been prepended to the 
In line 1951  	 * statement 
In line 1952  	 */ 
In line 1953  	/* in copy_statement... */ 
In line 1970  #endif /* BYPASS_ONESHOT_PLAN_EXECUTION */ 
In line 1978  			/* fall through */ 
In line 1984  					SC_set_Result(self, NULL); /* discard the parsed information */ 
In line 2028  		/* send the declare/select */ 
In line 2067  		/* not a SELECT statement so don't use a cursor */ 
In line 2074  		/* 
In line 2075  		 * We shouldn't send COMMIT. Postgres backend does the autocommit 
In line 2076  		 * if neccessary. (Zoltan, 04/26/2000) 
In line 2077  		 */ 
In line 2079  		/* 
In line 2080  		 * Above seems wrong. Even in case of autocommit, started 
In line 2081  		 * transactions must be committed. (Hiroshi, 02/11/2001) 
In line 2082  		 */ 
In line 2098  	/* Check the status of the result */ 
In line 2127  		/* set cursor before the first tuple in the list */ 
In line 2132  		/* issue "ABORT" when query aborted */ 
In line 2138  #endif /* _LEGACY_MODE */ 
In line 2144  			/* see if the query did return any result columns */ 
In line 2149  			/* now allocate the array to hold the binding info */ 
In line 2163  			/* 
In line 2164  			 * special handling of result for keyset driven cursors. 			 * Use the columns info of the 1st query and 
In line 2165  			 * user the keyset info of the 2nd query. 
In line 2166  			 */ 
In line 2183  			/* skip the result of PREPARE in 'PREPARE ..:EXECUTE ..' call */ 
In line 2200  		/* Bad Error -- The error message will be in the Connection */ 
In line 2207  			/* 
In line 2208  			 * This would allow the table to already exists, thus 
In line 2209  			 * appending rows to it.  BUT, if the table didn't have the 
In line 2210  			 * same attributes, it would fail. return 
In line 2211  			 * SQL_SUCCESS_WITH_INFO; 
In line 2212  			 */ 
In line 2222  #endif /* _LEGACY_MODE_ */ 
In line 2248  /* 
In line 2249   *	I'm not sure if the following REFCUR_SUPPORT stuff is valuable 
In line 2250   *	or not. 
In line 2251   */ 
In line 2275  #endif	/* REFCUR_SUPPORT */ 
In line 2278  	{	/* get the return value of the procedure call */ 
In line 2314  			ardopts->bind_size = save_bind_size; /* restore */ 
In line 2327  	/* self->status = STMT_FINISHED; */ 
In line 2417  #endif /* ODBCVER */ 
In line 2450  			/* Log the connection error if there is one */ 
In line 2462  /* 
In line 2463   *	Extended Query  
In line 2464   */ 
In line 2474  #endif /* _HANDLE_ENLIST_IN_DTC_ */ 
In line 2486  	/* 
In line 2487  	 * In auto-commit mode, begin a new transaction implicitly if no 
In line 2488  	 * transaction is in progress yet. However, some special statements like 
In line 2489  	 * VACUUM and CLUSTER cannot be run in a transaction block. 
In line 2490  	 */ 
In line 2499  /* 
In line 2500   * Copies the column information from the first result set of 'self' to 'res'. 
In line 2501   */ 
In line 2563  	SOCK_put_char(sock, 'S');	/* Sync command */ 
In line 2564  	SOCK_put_int(sock, 4, 4);	/* length */ 
In line 2589  					/* in case of FETCH, Portal Suspend never arrives */ 
In line 2607  			case 'E': /* ErrorMessage */ 
In line 2611  			case 'N': /* Notice */ 
In line 2614  			case '1': /* ParseComplete */ 
In line 2620  			case '2': /* BindComplete */ 
In line 2623  			case '3': /* CloseComplete */ 
In line 2626  			case 'Z': /* ReadyForQuery */ 
In line 2630  			case 't': /* ParameterDesription */ 
In line 2641  					/* stmt->num_params = (Int2) num_p + num_discard_params; it's possible in case of multi command queries */ 
In line 2671  #endif /* NOT_USED */ 
In line 2690  			case 'T': /* RowDesription */ 
In line 2737  			case 'B': /* Binary data */ 
In line 2738  			case 'D': /* ASCII data */ 
In line 2745  			case 'S': /* parameter status */ 
In line 2748  			case 's':	/* portal suspend */ 
In line 2803  	SOCK_put_char(sock, 'P'); /* Parse command */ 
In line 2818  #endif /* NOT_USED */ 
In line 2828  #endif /* NOT_USED */ 
In line 2847  	SOCK_put_int(sock, (Int4) (leng + 4), 4); /* length */ 
In line 2852  	SOCK_put_int(sock, num_params, sizeof(Int2)); /* number of parameters specified */ 
In line 2923  	SOCK_put_char(sock, 'D'); /* Describe command */ 
In line 2929  		SOCK_put_int(sock, (Int4) (leng + 4), 4); /* length */ 
In line 2936  		SOCK_put_char(sock, paramAlso ? 'S' : 'P'); /* describe a prepared statement */ 
In line 2984  	SOCK_put_char(sock, 'E'); /* Execute command */ 
In line 2985  	SC_forget_unnamed(stmt); /* unnamed plans are unavailable */ 
In line 2994  	SOCK_put_int(sock, (Int4) (leng + 4), sizeof(Int4)); /* length */ 
In line 2996  	SOCK_put_string(sock, plan_name);	/* portal name == plan name */ 
In line 2998  	if (0 == count) /* will send a Close portal command */ 
In line 3000  		SOCK_put_char(sock, 'C');	/* Close command */ 
In line 3009  		SOCK_put_int(sock, (Int4) (leng + 4), 4); /* length */ 
In line 3011  		SOCK_put_char(sock, 'P');	/* Portal */ 
In line 3023  	SOCK_put_char(sock, 'S');	/* Sync command */ 
In line 3036  /*	commonly used for short term lock */ 
In line 3041  #endif /* WIN_MULTITHREAD_SUPPORT */ 
In line 3045  	ENTER_COMMON_CS; /* short time blocking */ 
In line 3053  	ENTER_COMMON_CS; /* short time blocking */ 
In line 3086  		/* try to acquire */ 
In line 3095  #endif /* NOT_USED */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\tuple.c  for analysis => 
In line 0  /*------- 
In line 1   * Module:			tuple.c 
In line 2   * 
In line 3   * Description:		This module contains functions for setting the data 
In line 4   *					for individual fields (TupleField structure) of a 
In line 5   *					manual result set. 
In line 6   * 
In line 7   * Important Note:	These functions are ONLY used in building manual 
In line 8   *					result sets for info functions (SQLTables, 
In line 9   *					SQLColumns, etc.) 
In line 10   * 
In line 11   * Classes:			n/a 
In line 12   * 
In line 13   * API functions:	none 
In line 14   * 
In line 15   * Comments:		See "readme.txt" for copyright and license information. 
In line 16   *------- 
In line 17   */ 
In line 29  	tuple_field->value = NULL;	/* strdup(""); */ 
In line 38  		tuple_field->len = (Int4) strlen(string); /* PG restriction */ 
In line 55  	/* +1 ... is this correct (better be on the save side-...) */ 
In line 68  	/* +1 ... is this correct (better be on the save side-...) */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\win_md5.c  for analysis => 
In line 0  /* 
In line 1   *		win_md5.c 
In line 2   *	Under Windows I don't love the following /D in makefiles. - inoue 
In line 3   */ 
In line 7  /*	 
In line 8   *	md5.c is the exact copy of the src/backend/libpq/md5.c. 
In line 9   * 
In line 10   *		psqlodbc driver stuff never refer(link) to other 
In line 11   *		stuff directly.		 
In line 12   *	 
In line 13   */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\win_unicode.c  for analysis => 
In line 0  /*------- 
In line 1   * Module:			win_unicode.c 
In line 2   * 
In line 3   * Description:		This module contains utf8 <-> ucs2 conversion routines 
In line 4   *					under WIndows 
In line 5   * 
In line 6   *------- 
In line 7   */ 
In line 43  #endif  /* HAVE_ISWASCII */ 
In line 44  #endif  /* WIN32 */ 
In line 58  /*mylog("ucs2_to_utf8 %p ilen=%d ", ucs2str, ilen);*/ 
In line 72  /*mylog(" newlen=%d", ilen);*/ 
In line 85  			else if (0 == (*wstr & 0xffffff80)) /* ASCII */ 
In line 106  			/* surrogate pair check for non ucs-2 code */  
In line 151  /*mylog(" olen=%d %s\n", *olen, utf8str ? utf8str : "");*/ 
In line 166  /* 
In line 167   * Convert a string from UTF-8 encoding to UCS-2. 
In line 168   * 
In line 169   * utf8str		- input string in UTF-8 
In line 170   * ilen			- length of input string in bytes  (or SQL_NTS) 
In line 171   * lfconv		- TRUE if line feeds (LF) should be converted to CR + LF 
In line 172   * ucs2str		- output buffer 
In line 173   * bufcount		- size of output buffer 
In line 174   * errcheck		- if TRUE, check for invalidly encoded input characters 
In line 175   * 
In line 176   * Returns the number of SQLWCHARs copied to output buffer. If the output 
In line 177   * buffer is too small, the output is truncated. The output string is 
In line 178   * NULL-terminated, except when the output is truncated. 
In line 179   */ 
In line 188  /*mylog("utf8_to_ucs2 ilen=%d bufcount=%d", ilen, bufcount);*/ 
In line 191  /*mylog(" string=%s\n", utf8str);*/ 
In line 201  		/* if (iswascii(*str)) */ 
In line 217  		else if (0xf8 == (*str & 0xf8)) /* more than 5 byte code */ 
In line 222  		else if (0xf0 == (*str & 0xf8)) /* 4 byte code */ 
In line 256  		else if (0xe0 == (*str & 0xf0)) /* 3 byte code */ 
In line 279  		else if (0xc0 == (*str & 0xe0)) /* 2 byte code */ 
In line 316  /*mylog(" ocount=%d\n", ocount);*/ 
In line 337  #endif /* HAVE_MBSTOWCS_L */ 
In line 338  #endif /* WIN32 */ 
In line 360  #endif /* HAVE_MBSTOWCS_L */ 
In line 361  #endif /* WIN32 */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\xalibname.c  for analysis => 
In line 0  /*------ 
In line 1   * Module:			xalibname.c 
In line 2   * 
In line 3   * Description: 
In line 4   *		This module gets the (path) name of xalib. 
In line 5   * 
In line 6   *------- 
In line 7   */ 
In line 13  #endif	/* _WIN32_WINNT */ 
In line 33  		/* In Windows XP SP2, the dllname should be specified */ 
In line 34  		/* instead of the dll path name, because it looks up */ 
In line 35  		/* the HKLM\Microfost\MSDTC\XADLL\(dllname) registry */ 
In line 36  		/* entry for security reason. */ 
In line 38  		// _snprintf(xalibname, sizeof(xalibname), "%s%s", fname, ext); 
In line 50  #endif /* _HANDLE_ENLIST_IN_DTC_ */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracWin7SrcNew\Solution\device.c  for analysis => 
In line 33      // 
In line 34      // Create a device object and register our dispatch handlers 
In line 35      // 
In line 216              // 
In line 217              // Buffer is small 
In line 218              // 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracWin7SrcNew\Solution\filter.c  for analysis => 
In line 95          // 
In line 96          // Initialize spin locks 
In line 97          // 
In line 288      // 
In line 289      // Set the flag that the filter is going to pause 
In line 290      // 
In line 297      // 
In line 298      // Do whatever work is required to bring the filter into the Paused state. 
In line 299      // 
In line 300      // If you have diverted and queued any send or receive NBLs, return them  
In line 301      // now. 
In line 302      // 
In line 303      // If you send or receive original NBLs, stop doing that and wait for your 
In line 304      // NBLs to return to you now. 
In line 305      // 
In line 360          // 
In line 361          // Check each attribute to see whether the filter needs to modify it. 
In line 362          // 
In line 372      // 
In line 373      // If everything is OK, set the filter in running state. 
In line 374      // 
In line 375      pFilter->State = FilterRunning; // when successful 
In line 423      // 
In line 424      // Should free the filter context list 
In line 425      // 
In line 453  			//Chaining Parent to end of Chain 
In line 466  			//Free our memory 
In line 472  			//NBL is not ours, so chain it to the end of chain. We don't need to free any memory 
In line 515  			//our NBL 
In line 518  				//something went wrong, chain original NBL 
In line 534  				//OK, copy flags, set original NBL as Parent and chain to Chain 
In line 554  			//Not our client, chain original NBL 
In line 591  			//NBL was created by us; Original NBL is ParentNetBufferList; 
In line 593  			//Chaining Parent to end of Chain 
In line 606  			//Free our memory 
In line 612  			//NBL is not ours, so chain it to the end of chain. We don't need to free any memory 
In line 653  			//Our Client 
In line 861      // 
In line 862      //  Get at the request context. 
In line 863      // 
In line 866      // 
In line 867      //  Save away the completion status. 
In line 868      // 
In line 871      // 
In line 872      //  Wake up the thread blocked for this request to complete. 
In line 873      // 
In line 1011      // 
In line 1012      // This is an internal request 
In line 1013      // 
In line 1029      // 
In line 1030      // Copy the information from the returned request to the original request 
In line 1031      // 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracWin7SrcNew\Solution\flt_dbg.c  for analysis => 
In file flt_dbg.c not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracWin7SrcNew\Solution\IO.c  for analysis => 
In line 2  //1 byte :				length 
In line 3  //1 byte :				Enabeled 
In line 4  //1 byte :				OptLength 
In line 5  //OptLength bytes :		Option 
In line 6  //1 byte :				nAddr 
In line 7  //nAddr x { 
In line 8  //		4 byte :		IPaddr 
In line 9  //		2 byte :		Port 
In line 10  //		1 byte :		Flag 
In line 11  //} 
In line 13  	Irp->IoStatus.Status = NDIS_STATUS_SUCCESS; // Возращаемое значение – ошибка или нормальное. При нормальном завершении – будет передан HANDLE на устройство, в нашем случае на драйвер. 
In line 14  	Irp->IoStatus.Information = 0; // Количество переданных вверх байт – в нашем случае 0 потому как нет передаваемых параметров. 
In line 15  	IoCompleteRequest(Irp, IO_NO_INCREMENT); // Завершение работы. 
In line 16  	return NDIS_STATUS_SUCCESS; // Нормальный код возврата. 
In line 20  	Irp->IoStatus.Status = NDIS_STATUS_SUCCESS; // Возращаемое значение – ошибка или нормальное. При нормальном завершении – будет передан HANDLE на устройство, в нашем случае на драйвер. 
In line 21  	Irp->IoStatus.Information = 0; // Количество переданных вверх байт – в нашем случае 0 потому как нет передаваемых параметров. 
In line 22  	IoCompleteRequest(Irp, IO_NO_INCREMENT); // Завершение работы. 
In line 23  	return NDIS_STATUS_SUCCESS; // Нормальный код возврата. 
In line 28  //запрос 1 байта - запрос длины возвращаемой инфы 
In line 29  //запрос n байт - запрос всей информации 
In line 39  			info.length = 5 + info.nAddr*sizeof(IPADDRESS);		//5 bytes for option, length, enabeled and nAddr, and sizeof(Adress) * nAddr form addresses 
In line 43  			//запросили всю инфу 
In line 79  	Irp->IoStatus.Status = Status; // Возращаемое значение – ошибка или нормальное. При нормальном завершении – будет передан HANDLE на устройство, в нашем случае на драйвер. 
In line 80  	Irp->IoStatus.Information = BytesRequested; // Количество переданных вверх байт – в нашем случае 0 потому как нет передаваемых параметров. 
In line 81  	IoCompleteRequest(Irp, IO_NO_INCREMENT); // Завершение работы. 
In line 82  	return NDIS_STATUS_SUCCESS; // Нормальный код возврата. 
In line 90  	PIO_STACK_LOCATION IrpStack = IoGetCurrentIrpStackLocation( Irp ); // Содержит стек Irp 
In line 91  	ULONG BytesRequested = IrpStack->Parameters.Read.Length; // Длина принятых данных –равна параметру максимально запрошенной длины в функции WriteFile 
In line 189  	Irp->IoStatus.Status = Status; // Возращаемое значение – ошибка или нормальное. При нормальном завершении – будет передан HANDLE на устройство, в нашем случае на драйвер. 
In line 190  	Irp->IoStatus.Information = 0; // Количество переданных вверх байт – в нашем случае 0 потому как нет передаваемых параметров. 
In line 191  	IoCompleteRequest(Irp, IO_NO_INCREMENT); // Завершение работы. 
In line 192  	return Status; // Нормальный код возврата. 
In line 197  	Irp->IoStatus.Status = NDIS_STATUS_SUCCESS; // Возращаемое значение – ошибка или нормальное. При нормальном завершении – будет передан HANDLE на устройство, в нашем случае на драйвер. 
In line 198  	Irp->IoStatus.Information = 0; // Количество переданных вверх байт – в нашем случае 0 потому как нет передаваемых параметров. 
In line 199  	IoCompleteRequest(Irp, IO_NO_INCREMENT); // Завершение работы. 
In line 200  	return NDIS_STATUS_SUCCESS; // Нормальный код возврата. 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracWin7SrcNew\Solution\Passthru.c  for analysis => 
In line 4  	unsigned char ip_version :4; // 4-bit IPv4 version 
In line 5  	unsigned char ip_header_len:4; // 4-bit header length (in 32-bit words) normally=5 (Means 20 Bytes may be 24 also) 
In line 6  	unsigned char ip_tos; // IP type of service 
In line 7  	unsigned short ip_total_length; // Total length 
In line 8  	unsigned short ip_id; // Unique identifier 
In line 9      unsigned char  flags;// вместо 4-х следующих полей 
In line 10  	unsigned char ip_frag_offset; //fragment offset 
In line 11  	unsigned char ip_ttl; // Time to live 
In line 12  	unsigned char ip_protocol; // Protocol(TCP,UDP etc) 
In line 13  	unsigned short ip_checksum; // IP checksum 
In line 14  	unsigned int ip_srcaddr; // Source address 
In line 15  	unsigned int ip_destaddr; // Source address 
In line 26  	//IP Header checksum 
In line 42  	//IP Header checksum, if we add option 
In line 63  	//IP Header checsum if we remove option 
In line 88  	//allocates memory with memLength length and puts there first dataLength bytes from NB 
In line 159  	//Header is IP header, maybe with options 
In line 160  	//all length are in bytes; MUST headL>=34, infoL >= 0 
In line 211  		//		{ |Header|Data|} [ {|Option| [Header|Option|} ]] } 
In line 241  	//allocates NBL and copies info from orig NBL removing option 
In line 280  		hdr->ip_version -= OPTION_LENGTH/4;		//it is magic, but Header Length is ->ip_version 
In line 287  //		if (OPTION_LENGTH != 0){ 
In line 293  		//} 
In line 294  		//else{ 
In line 295  		//	CurrMdl = NdisAllocateMdl(NdisHandle, mem, length); 
In line 296  		//	if (CurrMdl == NULL){ 
In line 297  		//		return NULL; 
In line 298  		//	} 
In line 299  		//	CurrMdl->Next = NULL; 
In line 300  		//} 
In line 382  	//Check if we need to send NBL 
In line 388  	PUCHAR			MainBufferAddress = NULL;	//указатель на начало буфера 
In line 399  		//we work only with short buffers 
In line 405  	TotalPacketLength = 42;			//we are intrested only in first 42 bytes 
In line 432  		if ((MainBufferAddress[14]%16+OPTION_LENGTH<16)					//в заголовок можно вставить опцию 
In line 433  			&&(MainBufferAddress[14]/16 == 4)									//IP 
In line 434  			&& (MainBufferAddress[23] == 6)										//TCPICMP 
In line 435  			&&((MainBufferAddress[34] != 130)||(MainBufferAddress[14] < 6))		//нет опции 
In line 437  			//TCP/IP пакет, в заголовок можно вставить  
In line 465  	//check if we need to remove option 
In line 471  	PUCHAR			MainBufferAddress = NULL;	//указатель на начало буфера 
In line 509  			//TCP/IP пакет 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracWin7SrcNew\Solution\precompsrc.c  for analysis => 
In file precompsrc.c not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\test\src\alter-test.c  for analysis => 
In line 19  	/* Create a table to test with */ 
In line 23  	/**** A simple query against the table, fetch column info ****/ 
In line 28  	/* Get column metadata */ 
In line 34  	/* Alter the table */ 
In line 38  	/* Run the query again, check if the metadata was updated */ 
In line 43  	/* Get column metadata */ 
In line 46  	/* Clean up */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\test\src\arraybinding-test.c  for analysis => 
In line 40  	/**** 
In line 41  	 * 1. Test column-wise binding 
In line 42  	 */ 
In line 56  	/* Bind the parameter arrays. */ 
In line 62  	/* Execute */ 
In line 67  	/* Fetch results */ 
In line 94  	/* 
In line 95  	 * Free and allocate a new handle for the next SELECT statement, as we don't 
In line 96  	 * want to array bind that one. The parameters set with SQLSetStmtAttr 
In line 97  	 * survive SQLFreeStmt. 
In line 98  	 */ 
In line 109  	/* Check that all the rows were inserted */ 
In line 118  	/* Check the contents of a few rows */ 
In line 127  	/**** 
In line 128  	 * 2. Test column-wise binding. With a column_size=5 VARCHAR param - that 
In line 129  	 * causes the driver to do a server-side prepare, assuming BoolsAsChar=1. 
In line 130  	 */ 
In line 132  	/* a small array will do for this test */ 
In line 144  	/* Bind the parameter array. */ 
In line 148  	/* Execute */ 
In line 153  	/* Fetch results */ 
In line 192  	/* 
In line 193  	 * Free and allocate a new handle for the next SELECT statement, as we don't 
In line 194  	 * want to array bind that one. The parameters set with SQLSetStmtAttr 
In line 195  	 * survive SQLFreeStmt. 
In line 196  	 */ 
In line 207  	/* Check that all the rows were inserted */ 
In line 217  	/* Check the contents of a few rows */ 
In line 226  	/* Clean up */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\test\src\bindcol-test.c  for analysis => 
In line 13  	/* 
In line 14  	 * NOTE: in the psqlodbc, we assume that SQL_C_LONG actually means a 
In line 15  	 * variable of type SQLINTEGER. They are not the same on platforms where 
In line 16  	 * "long" is a 64-bit integer. That seems a bit bogus, but it's too late 
In line 17  	 * to change that without breaking applications that depend on it. 
In line 18  	 * (on little-endian systems, you won't notice the difference if you reset 
In line 19  	 * the high bits to zero before calling SQLBindCol.) 
In line 20  	 */ 
In line 68  	/* Clean up */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\test\src\boolsaschar-test.c  for analysis => 
In line 15  	/* BoolsAsChar is the default, but just in case.. */ 
In line 25  	/**** A simple query with one text param ****/ 
In line 27  	/* Prepare a statement */ 
In line 31  	/* bind param  */ 
In line 35  						  SQL_C_CHAR,	/* value type */ 
In line 36  						  SQL_VARCHAR,	/* param type */ 
In line 37  						  5,			/* column size */ 
In line 38  						  0,			/* dec digits */ 
In line 39  						  param1,		/* param value ptr */ 
In line 40  						  0,			/* buffer len */ 
In line 41  						  &cbParam1		/* StrLen_or_IndPtr */); 
In line 44  	/* Execute */ 
In line 48  	/* Fetch result */ 
In line 55  	/**** A simple query with one boolean param (passed as varchar) ****/ 
In line 57  	/* bind param  */ 
In line 61  						  SQL_C_CHAR,	/* value type */ 
In line 62  						  SQL_VARCHAR,	/* param type */ 
In line 63  						  5,			/* column size */ 
In line 64  						  0,			/* dec digits */ 
In line 65  						  param1,		/* param value ptr */ 
In line 66  						  0,			/* buffer len */ 
In line 67  						  &cbParam1		/* StrLen_or_IndPtr */); 
In line 70  	/* Execute */ 
In line 74  	/* Fetch result */ 
In line 81  	/* Clean up */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\test\src\catalogfunctions-test.c  for analysis => 
In line 34  	/* 
In line 35  	 * Older versions of the driver had a bug in handling table-types lists 
In line 36  	 * longer than 32 entries. Check for that. 
In line 37  	 */ 
In line 50  	/* Clean up */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\test\src\commands-test.c  for analysis => 
In line 23  	/* Test VACUUM */ 
In line 31  	/* Same with SQLPrepare/SQLExecute */ 
In line 42  	/* 
In line 43  	 * Now the same with autocommit disabled. The driver should recognize 
In line 44  	 * that the commands are VACUUMs, which cannot be run in a transaction 
In line 45  	 * block, and not issue a BEGIN even it normally would in autocommit 
In line 46  	 * mode. In other words, these commands should behave the same with or 
In line 47  	 * without autocommit. But if you issued a normal query, like a SELECT, 
In line 48  	 * first in the same transaction, and then tried to run a VACUUM, it 
In line 49  	 * would fail with "VACUUM cannot run inside a transaction block" error. 
In line 50  	 */ 
In line 59  	/* Test VACUUM */ 
In line 67  	/* Same with SQLPrepare/SQLExecute */ 
In line 78  	/* Clean up */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\test\src\common.c  for analysis => 
In file common.c not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\test\src\connect-test.c  for analysis => 
In file connect-test.c not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\test\src\cursors-test.c  for analysis => 
In line 15  	/* 
In line 16  	 * Fetch a large result set without cursor (in Declare/fetch mode, it will 
In line 17  	 * be fetched in chunks) 
In line 18  	 */ 
In line 22  	/* Fetch the first 10 rows */ 
In line 40  	/* Now Commit, Rollback or do nothing depending on the argument */ 
In line 55  			/* do nothing */ 
In line 59  	/* 
In line 60  	 * Try to fetch the rest of the result set. 
In line 61  	 * (Will fail in SQL_CB_CLOSE mode and succeed in SQL_CB_PRESERVE). 
In line 62  	 */ 
In line 81  				/* This is expected in SQL_CB_CLOSE mode */ 
In line 95  			/* skip printing, to keep the output short */ 
In line 147  	/* 
In line 148  	 * Print out the current SQL_CURSOR_COMMIT_BEHAVIOR and 
In line 149  	 * SQL_CURSOR_ROLLBACK settings. The result of this test case depends on 
In line 150  	 * those. 
In line 151  	 */ 
In line 160  	/* Run three variations of the test */ 
In line 165  	/* Clean up */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\test\src\cvtnulldate-test.c  for analysis => 
In line 24  	/**** A simple query with one text param ****/ 
In line 29  	/* 
In line 30  	 * Bind empty string to the date param. In cvt_null_date mode, the driver 
In line 31  	 * maps it to NULL. (In normal mode, the driver fills in the current date) 
In line 32  	 */ 
In line 36  						  SQL_C_CHAR,	/* value type */ 
In line 37  						  SQL_CHAR,		/* param type */ 
In line 38  						  5,			/* column size */ 
In line 39  						  0,			/* dec digits */ 
In line 40  						  param1,		/* param value ptr */ 
In line 41  						  0,			/* buffer len */ 
In line 42  						  &cbParam1		/* StrLen_or_IndPtr */); 
In line 45  	/* Execute */ 
In line 49  	/* Check the resulting table */ 
In line 58  	/* Clean up */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\test\src\dataatexecution-test.c  for analysis => 
In line 32  	/**** 
In line 33  	 * Bind with data-at-execution params. (VARBINARY) 
In line 34  	 */ 
In line 36  	/* Prepare a statement */ 
In line 40  	/* prepare the parameter values */ 
In line 48  	/* bind them. */ 
In line 50  						  SQL_C_BINARY,	/* value type */ 
In line 51  						  SQL_VARBINARY, /* param type */ 
In line 52  						  param1bytes,	/* column size */ 
In line 53  						  0,			/* dec digits */ 
In line 54  						  (void *) 1,	/* param value ptr. For a data-at-exec 
In line 55  										 * param, this is a "parameter id" */ 
In line 56  						  0,			/* buffer len */ 
In line 57  						  &cbParam1		/* StrLen_or_IndPtr */); 
In line 61  						  SQL_C_BINARY,	/* value type */ 
In line 62  						  SQL_VARBINARY, /* param type */ 
In line 63  						  param2bytes,	/* column size */ 
In line 64  						  0,			/* dec digits */ 
In line 65  						  (void *) 2,	/* param value ptr. For a data-at-exec 
In line 66  										 * param, this is a "parameter id" */ 
In line 67  						  0,			/* buffer len */ 
In line 68  						  &cbParam2		/* StrLen_or_IndPtr */); 
In line 71  	/* Execute */ 
In line 76  	/* set parameters */ 
In line 98  	/* Fetch result */ 
In line 105  	/**** 
In line 106  	 * Array binding with data-at-execution params. 
In line 107  	 */ 
In line 109  	/* prepare the parameter values */ 
In line 113  	/* Prepare a statement */ 
In line 122  	/* bind the array. */ 
In line 124  						  SQL_C_BINARY,	/* value type */ 
In line 125  						  SQL_VARBINARY, /* param type */ 
In line 126  						  5,			/* column size */ 
In line 127  						  0,			/* dec digits */ 
In line 128  						  (void *) 1,	/* param value ptr. For a data-at-exec 
In line 129  										 * param, this is "parameter id" */ 
In line 130  						  0,			/* buffer len */ 
In line 131  						  str_ind_array	/* StrLen_or_IndPtr */); 
In line 134  	/* Execute */ 
In line 139  	/* set parameters */ 
In line 156  	/* Fetch results */ 
In line 195  	/* Clean up */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\test\src\getresult-test.c  for analysis => 
In line 27  	/* 
In line 28  	 * The interval stuff requires intervalstyle=postgres at the momemnt. 
In line 29  	 * Someone should fix the driver to understand other formats, 
In line 30  	 * postgres_verbose in particular... 
In line 31  	 */ 
In line 39  	/* Run a query with a result set with all kinds of values */ 
In line 50  	/* Fetch result */ 
In line 82  	/* Clean up */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\test\src\insertreturning-test.c  for analysis => 
In line 0  /* 
In line 1   * INSERT RETURNING tests. 
In line 2   */ 
In line 31  	/* 
In line 32  	 * We used to have a memory leak when SQLNumResultCols() was called on an 
In line 33  	 * INSERT statement. It's been fixed, but this test case was useful to find 
In line 34  	 * it, when you crank up the number of iterations. 
In line 35  	 */ 
In line 38  		/* Prepare a statement */ 
In line 42  		/* bind param  */ 
In line 46  							  SQL_C_CHAR,	/* value type */ 
In line 47  							  SQL_CHAR,	/* param type */ 
In line 48  							  20,		/* column size */ 
In line 49  							  0,		/* dec digits */ 
In line 50  							  param1,		/* param value ptr */ 
In line 51  							  0,		/* buffer len */ 
In line 52  							  &cbParam1	/* StrLen_or_IndPtr */); 
In line 55  		/* Test SQLNumResultCols, called before SQLExecute() */ 
In line 59  		/* Execute */ 
In line 63  		/* Call SQLNumResultCols again, after SQLExecute() */ 
In line 70  		/* Fetch result */ 
In line 84  	/* Clean up */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\test\src\lfconversion-test.c  for analysis => 
In line 22  	/* Enable LF -> CR+LF conversion */ 
In line 32  	/* 
In line 33  	 * Return several columns that all contain the same string, with newlines. 
In line 34  	 * We want to try getting the column contents with several different 
In line 35  	 * options, and the driver doesn't let you fetch the same column more than 
In line 36  	 * once. 
In line 37  	 */ 
In line 61  	/* On some platforms, SQLWCHAR != wchar_t, so we cannot use wcslen here */ 
In line 72  	/* 
In line 73  	 * Read into a buffer that's slightly too small, so that it would fit 
In line 74  	 * if it wasn't for the LF->CR+LF conversion. 
In line 75  	 */ 
In line 83  	/* 
In line 84  	 * Print out the string, but on Unix we have to convert it to UTF-8 first. 
In line 85  	 * On Windows we could just use wprintf. 
In line 86  	 */ 
In line 106  	/* Clean up */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\test\src\multistmt-test.c  for analysis => 
In line 43  	/*** Simple multi-statement with two queries ***/ 
In line 52  	/*** More queries ***/ 
In line 61  	/*** Spurious semicolons ***/ 
In line 70  	/*** Prepare/Execute a multi-statement with parameters ***/ 
In line 75  	/* bind params */ 
In line 79  						  SQL_C_CHAR,	/* value type */ 
In line 80  						  SQL_CHAR,	/* param type */ 
In line 81  						  20,			/* column size */ 
In line 82  						  0,			/* dec digits */ 
In line 83  						  param1,		/* param value ptr */ 
In line 84  						  0,			/* buffer len */ 
In line 85  						  &cbParam1		/* StrLen_or_IndPtr */); 
In line 90  						  SQL_C_CHAR,	/* value type */ 
In line 91  						  SQL_CHAR,	/* param type */ 
In line 92  						  20,			/* column size */ 
In line 93  						  0,			/* dec digits */ 
In line 94  						  param2,		/* param value ptr */ 
In line 95  						  0,			/* buffer len */ 
In line 96  						  &cbParam2		/* StrLen_or_IndPtr */); 
In line 99  	/* Test SQLNumResultCols, called before SQLExecute() */ 
In line 104  	/* Execute */ 
In line 109  	/* Clean up */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\test\src\notice-test.c  for analysis => 
In line 41  	/* Call the function that gives a NOTICE */ 
In line 60  	/* The same, with a really long notice. XXX: At the moment, this returns 
In line 61  	 * an empty string, as the driver has a built-in limit on the error/notice 
In line 62  	 * size */ 
In line 82  	/* Clean up */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\test\src\params-test.c  for analysis => 
In line 28  	/**** Query with a bytea param ****/ 
In line 30  	/* Prepare a statement */ 
In line 34  	/* bind param  */ 
In line 37  						  SQL_C_BINARY,	/* value type */ 
In line 38  						  SQL_BINARY,	/* param type */ 
In line 39  						  20,			/* column size */ 
In line 40  						  0,			/* dec digits */ 
In line 41  						  param1,		/* param value ptr */ 
In line 42  						  0,			/* buffer len */ 
In line 43  						  &cbParam1		/* StrLen_or_IndPtr */); 
In line 46  	/* Test SQLNumResultCols, called before SQLExecute() */ 
In line 51  	/* Execute */ 
In line 55  	/* Fetch result */ 
In line 61  	/*** Test SQLBindParameter with SQLExecDirect ***/ 
In line 64  	/* bind param  */ 
In line 68  						  SQL_C_CHAR,	/* value type */ 
In line 69  						  SQL_CHAR,		/* param type */ 
In line 70  						  20,			/* column size */ 
In line 71  						  0,			/* dec digits */ 
In line 72  						  param1,		/* param value ptr */ 
In line 73  						  0,			/* buffer len */ 
In line 74  						  &cbParam1		/* StrLen_or_IndPtr */); 
In line 84  	/*** Test SQLDescribeParam ***/ 
In line 90  	/* Prepare a statement */ 
In line 98  	/* bind param  */ 
In line 102  						  SQL_C_CHAR,	/* value type */ 
In line 103  						  SQL_CHAR,		/* param type */ 
In line 104  						  20,			/* column size */ 
In line 105  						  0,			/* dec digits */ 
In line 106  						  param1,		/* param value ptr */ 
In line 107  						  0,			/* buffer len */ 
In line 108  						  &cbParam1		/* StrLen_or_IndPtr */); 
In line 111  	/* Test SQLNumResultCols, called before SQLExecute() */ 
In line 116  	/* Execute */ 
In line 120  	/* Fetch result */ 
In line 126  	/* Clean up */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\test\src\positioned-update-test.c  for analysis => 
In line 25  	/* 
In line 26  	 * Initialize a table with some test data. 
In line 27  	 */ 
In line 84  	/* Do a positioned update and delete */ 
In line 99  	/* See if the update took effect */ 
In line 104  	/* Clean up */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\test\src\prepare-test.c  for analysis => 
In line 27  	/**** A simple query with one text param ****/ 
In line 29  	/* Prepare a statement */ 
In line 33  	/* bind param  */ 
In line 37  						  SQL_C_CHAR,	/* value type */ 
In line 38  						  SQL_CHAR,		/* param type */ 
In line 39  						  20,			/* column size */ 
In line 40  						  0,			/* dec digits */ 
In line 41  						  param1,		/* param value ptr */ 
In line 42  						  0,			/* buffer len */ 
In line 43  						  &cbParam1		/* StrLen_or_IndPtr */); 
In line 46  	/* Test SQLNumResultCols, called before SQLExecute() */ 
In line 51  	/* Execute */ 
In line 55  	/* Fetch result */ 
In line 61  	/**** A query with an integer param ****/ 
In line 63  	/* Prepare a statement */ 
In line 67  	/* bind param  */ 
In line 71  						  SQL_C_SLONG,	/* value type */ 
In line 72  						  SQL_INTEGER,	/* param type */ 
In line 73  						  0,			/* column size (ignored for SQL_INTEGER) */ 
In line 74  						  0,			/* dec digits */ 
In line 75  						  &longparam,	/* param value ptr */ 
In line 76  						  sizeof(longparam), /* buffer len (ignored for SQL_INTEGER) */ 
In line 77  						  &cbParam1		/* StrLen_or_IndPtr (ignored for SQL_INTEGER) */); 
In line 80  	/* Execute */ 
In line 84  	/* Fetch result */ 
In line 90  	/**** Test a query with a bytea param of various sizes.  ****/ 
In line 92  	/* 
In line 93  	 * The driver has some special handling for byteas, as it sends them in 
In line 94  	 * binary mode. This particular test case exercises an old bug where 
In line 95  	 * the bind packet size was calculated incorrectly, and there was an 
In line 96  	 * out-of-bounds write of two bytes when the total packet size was exactly 
In line 97  	 * 4097 bytes. So, exercise packet sizes near that boundary. 
In line 98  	 */ 
In line 105  	/* Prepare a statement */ 
In line 109  	/* fill in test data */ 
In line 117  		/* bind int param  */ 
In line 121  							  SQL_C_SLONG,	/* value type */ 
In line 122  							  SQL_INTEGER,	/* param type */ 
In line 123  							  0,			/* column size (ignored for SQL_INTEGER) */ 
In line 124  							  0,			/* dec digits */ 
In line 125  							  &longparam,	/* param value ptr */ 
In line 126  							  sizeof(longparam), /* buffer len (ignored for SQL_INTEGER) */ 
In line 127  							  &cbParam1		/* StrLen_or_IndPtr (ignored for SQL_INTEGER) */); 
In line 132  							  SQL_C_BINARY,	/* value type */ 
In line 133  							  SQL_VARBINARY,	/* param type */ 
In line 134  							  sizeof(byteaParam), /* column size */ 
In line 135  							  0,			/* dec digits */ 
In line 136  							  byteaParam,	/* param value ptr */ 
In line 137  							  sizeof(byteaParam), /* buffer len */ 
In line 138  							  &cbParam1		/* StrLen_or_IndPtr */); 
In line 141  		/* Execute */ 
In line 151  	/* Check the inserted data */ 
In line 161  	/**** A query with an interval param (SQL_C_INTERVAL_SECOND) ****/ 
In line 163  	/* Prepare a statement */ 
In line 167  	/* bind param  */ 
In line 178  						  SQL_C_INTERVAL_SECOND,	/* value type */ 
In line 179  						  SQL_INTERVAL_SECOND,	/* param type */ 
In line 180  						  0,			/* column size (ignored for SQL_INTERVAL_SECOND) */ 
In line 181  						  0,			/* dec digits */ 
In line 182  						  &intervalparam, /* param value ptr */ 
In line 183  						  sizeof(intervalparam), /* buffer len (ignored for SQL_C_INTERVAL_SECOND) */ 
In line 184  						  &cbParam1 /* StrLen_or_IndPtr (ignored for SQL_C_INTERVAL_SECOND) */); 
In line 187  	/* Execute */ 
In line 191  	/* Fetch result */ 
In line 198  	/**** 
In line 199  	 * With BoolsAsChar=1, a varchar param with column_size=5 forces a 
In line 200  	 * server-side Prepare. So test that. 
In line 201  	 */ 
In line 203  	/* Prepare a statement */ 
In line 207  	/* bind param  */ 
In line 211  						  SQL_C_CHAR,	/* value type */ 
In line 212  						  SQL_VARCHAR,	/* param type */ 
In line 213  						  5,			/* column size. 5 Triggers special 
In line 214  										 * behavior with BoolsAsChar=1 */ 
In line 215  						  0,			/* dec digits */ 
In line 216  						  param1,		/* param value ptr */ 
In line 217  						  0,			/* buffer len */ 
In line 218  						  &cbParam1		/* StrLen_or_IndPtr */); 
In line 221  	/* Test SQLNumResultCols, called before SQLExecute() */ 
In line 226  	/* Execute */ 
In line 230  	/* Fetch result */ 
In line 240  	/* Clean up */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\test\src\quotes-test.c  for analysis => 
In line 0  /* Test parameter quoting, with standard_conforming_strings on/off */ 
In line 14  	/* bind param  */ 
In line 17  						  SQL_C_CHAR,	/* value type */ 
In line 18  						  SQL_CHAR,		/* param type */ 
In line 19  						  20,			/* column size */ 
In line 20  						  0,			/* dec digits */ 
In line 21  						  param,		/* param value ptr */ 
In line 22  						  0,			/* buffer len */ 
In line 23  						  &cbParam1		/* StrLen_or_IndPtr */); 
In line 74  	/* Clean up */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\test\src\select-test.c  for analysis => 
In line 30  	/* Result set with 1600 cols */ 
In line 44  	/* Clean up */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\test\src\stmthandles-test.c  for analysis => 
In line 5  /* 
In line 6   * This test case tests that things still work when you have a lot of 
In line 7   * statements open simultaneously. 
In line 8   * 
In line 9   * As of writing this, there's an internal limit of just below 2^15 stmt 
In line 10   * handles. Also, unixodbc's method of checking if a handle is valid, by 
In line 11   * scanning a linked list of statements, grinds to a halt as you have 
In line 12   * a lot of statements. If you want to test those limits, increase 
In line 13   * NUM_STMT_HANDLES value. 
In line 14   */ 
In line 28  	/* Allocate a lot of stmt handles */ 
In line 43  		/* allocate some space to hold the query */ 
In line 48  	/* Execute a query using each of them to verify they all work */ 
In line 77  	/* Try SQLPrepare/SQLExecute on multiple statements. */ 
In line 94  		/* Test SQLNumResultCols, called before SQLExecute() */ 
==================================================================================================================
Search 133 file with extension *.cs
==================================================================================================================
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\IniManager.cs  for analysis => 
In line 8          //Конструктор, принимающий имя INI-файла 
In line 14          //Конструктор без аргументов (путь к INI-файлу нужно будет задать отдельно) 
In line 17          //Возвращает значение из INI-файла (по указанным секции и ключу)  
In line 20              //" Параметр {0} не найден в ini-файле {1}" 
In line 21              //Для получения значения 
In line 24              //Получить значение в buffer 
In line 30              //Вернуть полученное значение 
In line 34          //Пишет значение в INI-файл (по указанным секции и ключу)  
In line 37              //Записать значение в INI-файл 
In line 41          //Возвращает или устанавливает путь к INI файлу 
In line 44          //Поля класса 
In line 45          private const int SIZE = 1024; //Максимальный размер (для чтения значения из файла) 
In line 46          private string _iniFileName = null; //Для хранения пути к INI-файлу 
In line 48          //Импорт функции GetPrivateProfileString (для чтения значений) из библиотеки kernel32.dll 
In line 52          //Импорт функции WritePrivateProfileString (для записи значений) из библиотеки kernel32.dll 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\pab01lib.cs  for analysis => 
In line 0  //------------------------------------------------------- 
In line 1  // Подсистема    : Информационное обеспечение 
In line 2  // Задача        : PAB01 
In line 3  // Модуль        : pab01lib.cs 
In line 4  // Назначение    : Библиотека процедур  
In line 5  // Язык          : C# (Microsoft Visual Studio 2013) 
In line 6  //------------------------------------------------------- 
In line 18          // -------------------------------------------------------------- 
In line 19          // Функция       : GetParam 
In line 20          // Назначение    : Получение значения параметра командной строки по его имени 
In line 21          // Параметры     : args      - массив параметров приложения 
In line 22          //                 ParamName - ключ командной строки(e.g. -u) 
In line 23          // -------------------------------------------------------------- 
In line 24          /// <summary> 
In line 25          /// Получение значения параметра командной строки по его имени 
In line 26          /// </summary> 
In line 27          /// <param name="args">Массив параметров приложения</param> 
In line 28          /// <param name="ParamName">Ключ командной строки(e.g. -u)</param> 
In line 43          // -------------------------------------------------------------- 
In line 44          // Функция       : WriteLog 
In line 45          // Назначение    : Запись сообщения в консоль и в протокол 
In line 46          // Параметры     : filename - имя протокола 
In line 47          //                 s        - текст сообщения 
In line 48          // -------------------------------------------------------------- 
In line 49          /// <summary> 
In line 50          /// Запись сообщения в консоль и в протокол 
In line 51          /// </summary> 
In line 52          /// <param name="filename">Имя протокола</param> 
In line 53          /// <param name="s">Текст сообщения</param> 
In line 63          }//end of WriteLog 
In line 71          // -------------------------------------------------------------- 
In line 72          // Функция       : GetShortFileName 
In line 73          // Назначение    : Получение короткого имени файла (в формате 8.3) 
In line 74          // -------------------------------------------------------------- 
In line 75          // Параметры: 
In line 76          //  FileNameSour - имя файла 
In line 77          /// <summary> 
In line 78          /// Получение короткого имени файла (в формате 8.3) 
In line 79          /// </summary> 
In line 80          /// <param name="FileNameSour">имя файла</param> 
In line 81          /// <returns></returns> 
In line 100          // -------------------------------------------------------------- 
In line 101          // Функция       : SysErrorMessage 
In line 102          // Назначение    : Расшифровка кода ошибки Windows API 
In line 103          // -------------------------------------------------------------- 
In line 104          /// <summary> 
In line 105          /// Расшифровка кода ошибки Windows API 
In line 106          /// </summary> 
In line 107          /// <param name="errorCode">код ошибки</param> 
In line 108          /// <returns></returns> 
In line 118          // -------------------------------------------------------------- 
In line 119          // Функция       : ParseEnvString 
In line 120          // Назначение    : Вычмсление содержимого строки путем замены имен переменных 
In line 121          //                 окружения на их значения (%temp% --> c:\temp) 
In line 122          // -------------------------------------------------------------- 
In line 123          // Параметры: 
In line 124          //  Source  - входная строка 
In line 125          /// <summary> 
In line 126          /// Вычисление содержимого строки путем замены имен переменных 
In line 127          /// окружения на их значения (%temp% --> c:\temp) 
In line 128          /// </summary> 
In line 129          /// <param name="source">входная строка</param> 
In line 130          /// <returns></returns> 
In line 144                      //Console.WriteLine(element + " --> " + Environment.GetEnvironmentVariable(element)); 
In line 149                      //Console.WriteLine(element); 
In line 152              //Console.WriteLine(dest); 
In line 156          // -------------------------------------------------------------- 
In line 157          // Функция       : GetDiskFileNameINI 
In line 158          // Назначение    : Получение имени файла эмулируемого диска S370  
In line 159          //                 по имени тома и имени виртуальной машины 
In line 160          // -------------------------------------------------------------- 
In line 161          // Параметры: 
In line 162          //  DiskName - имя диска 
In line 163          //  VMname   - имя виртуальной машины на мейнфрейме 
In line 164          /// <summary> 
In line 165          /// Получение имени файла эмулируемого диска S370  
In line 166          /// по имени тома и имени виртуальной машины 
In line 167          /// </summary> 
In line 168          /// <param name="diskName">имя диска</param> 
In line 169          /// <param name="vmName">имя виртуальной машины на мейнфрейме</param> 
In line 170          /// <returns></returns> 
In line 188          // -------------------------------------------------------------- 
In line 189          // Функция       : LoadSettings 
In line 190          // Назначение    : Заполнение параметров на основе содержимого ini-файла 
In line 191          // -------------------------------------------------------------- 
In line 192          // Параметры: 
In line 193          //  iniFile  - имя ini-файла 
In line 194          /// <summary> 
In line 195          /// Заполнение параметров на основе содержимого ini-файла 
In line 196          /// </summary> 
In line 197          /// <param name="iniFile">имя ini-файла</param> 
In line 198          /// <returns></returns> 
In line 209          // -------------------------------------------------------------- 
In line 210          // Функция       : SetFileGrif 
In line 211          // Назначение    : Установка мандатной метки файла 
In line 212          // -------------------------------------------------------------- 
In line 213          // Параметры: 
In line 214          //  FileName - имя файла 
In line 215          //  grif     - мандатная метка 
In line 216          /// <summary> 
In line 217          /// Установка мандатной метки файла 
In line 218          /// </summary> 
In line 219          /// <param name="fileName">имя файла</param> 
In line 220          /// <param name="grif">мандатная метка</param> 
In line 221          /// <returns></returns> 
In line 250          // -------------------------------------------------------------- 
In line 251          // Функция       : GetFileGrif 
In line 252          // Назначение    : Получение мандатной метки файла из СЗИ "СТРАЖ NT" 
In line 253          // -------------------------------------------------------------- 
In line 254          // Параметры: 
In line 255          //  FileName - имя файла 
In line 256          /// <summary> 
In line 257          /// Получение мандатной метки файла из СЗИ "СТРАЖ NT" 
In line 258          /// </summary> 
In line 259          /// <param name="fileName">имя файла</param> 
In line 260          /// <returns></returns> 
In line 289          // -------------------------------------------------------------- 
In line 290          // Функция       : CopyFileGrif 
In line 291          // Назначение    : Копирование файла с сохранением мандатной метки  
In line 292          // -------------------------------------------------------------- 
In line 293          // Параметры: 
In line 294          //  FileNameSour - имя исходного файла (откуда) 
In line 295          //  FileNameDest - имя конечного файла (куда) 
In line 296          // -------------------------------------------------------------- 
In line 297          /// <summary> 
In line 298          /// Копирование файла с сохранением мандатной метки  
In line 299          /// </summary> 
In line 300          /// <param name="fileNameSour">имя исходного файла (откуда)</param> 
In line 301          /// <param name="fileNameDest">имя конечного файла (куда)</param> 
In line 302          /// <returns></returns> 
In line 322          // -------------------------------------------------------------- 
In line 323          // Функция       : getErrorLine 
In line 324          // Назначение    : Возвращает номер строки и функцию в которой возникло исключение exception 
In line 325          // Параметры     : exception - входное исключение 
In line 326          // -------------------------------------------------------------- 
In line 327          /// <summary> 
In line 328          /// Возвращает номер строки и функцию в которой возникло исключение exception 
In line 329          /// </summary> 
In line 330          /// <param name="exception">входное исключение</param> 
In line 331          /// <returns></returns> 
In line 341                  // для отображения номера строки рядом с экзешником должен лежать файл *.pdb 
In line 347          // -------------------------------------------------------------- 
In line 348          // Функция       : CheckFileExists 
In line 349          // Назначение    : Проверяет файл на наличие и генерирует исключение при его отсутствии 
In line 350          // Параметры     : filename - имя файла 
In line 351          // -------------------------------------------------------------- 
In line 352          /// <summary> 
In line 353          /// Проверяет файл на наличие и генерирует исключение при его отсутствии 
In line 354          /// </summary> 
In line 355          /// <param name="filename">имя файла</param> 
In line 356          /// <returns></returns> 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\Program.cs  for analysis => 
In line 0  //------------------------------------------------------- 
In line 1  // Подсистема    : Информационное обеспечение 
In line 2  // Задача        : PAB01 
In line 3  // Модуль        : PAB01CAA(program.cs) 
In line 4  // Назначение    : Получение dbf и текстовых файлов с дисков ОС S370 
In line 5  // Язык          : C# (Microsoft Visual Studio 2013) 
In line 6  //------------------------------------------------------- 
In line 69              } //end of try catch 
In line 252              }//end of try catch 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\IniManager.cs  for analysis => 
In line 8          //Конструктор, принимающий имя INI-файла 
In line 14          //Конструктор без аргументов (путь к INI-файлу нужно будет задать отдельно) 
In line 17          //Возвращает значение из INI-файла (по указанным секции и ключу)  
In line 20              //" Параметр {0} не найден в ini-файле {1}" 
In line 21              //Для получения значения 
In line 24              //Получить значение в buffer 
In line 30              //Вернуть полученное значение 
In line 34          //Пишет значение в INI-файл (по указанным секции и ключу)  
In line 37              //Записать значение в INI-файл 
In line 41          //Возвращает или устанавливает путь к INI файлу 
In line 44          //Поля класса 
In line 45          private const int SIZE = 1024; //Максимальный размер (для чтения значения из файла) 
In line 46          private string _iniFileName = null; //Для хранения пути к INI-файлу 
In line 48          //Импорт функции GetPrivateProfileString (для чтения значений) из библиотеки kernel32.dll 
In line 52          //Импорт функции WritePrivateProfileString (для записи значений) из библиотеки kernel32.dll 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\pab01lib.cs  for analysis => 
In line 0  //------------------------------------------------------- 
In line 1  // Подсистема    : Информационное обеспечение 
In line 2  // Задача        : PAB01 
In line 3  // Модуль        : pab01lib.cs 
In line 4  // Назначение    : Библиотека процедур  
In line 5  // Язык          : C# (Microsoft Visual Studio 2013) 
In line 6  //------------------------------------------------------- 
In line 18          // -------------------------------------------------------------- 
In line 19          // Функция       : GetParam 
In line 20          // Назначение    : Получение значения параметра командной строки по его имени 
In line 21          // Параметры     : args      - массив параметров приложения 
In line 22          //                 ParamName - ключ командной строки(e.g. -u) 
In line 23          // -------------------------------------------------------------- 
In line 24          /// <summary> 
In line 25          /// Получение значения параметра командной строки по его имени 
In line 26          /// </summary> 
In line 27          /// <param name="args">Массив параметров приложения</param> 
In line 28          /// <param name="ParamName">Ключ командной строки(e.g. -u)</param> 
In line 43          // -------------------------------------------------------------- 
In line 44          // Функция       : WriteLog 
In line 45          // Назначение    : Запись сообщения в консоль и в протокол 
In line 46          // Параметры     : filename - имя протокола 
In line 47          //                 s        - текст сообщения 
In line 48          // -------------------------------------------------------------- 
In line 49          /// <summary> 
In line 50          /// Запись сообщения в консоль и в протокол 
In line 51          /// </summary> 
In line 52          /// <param name="filename">Имя протокола</param> 
In line 53          /// <param name="s">Текст сообщения</param> 
In line 63          }//end of WriteLog 
In line 71          // -------------------------------------------------------------- 
In line 72          // Функция       : GetShortFileName 
In line 73          // Назначение    : Получение короткого имени файла (в формате 8.3) 
In line 74          // -------------------------------------------------------------- 
In line 75          // Параметры: 
In line 76          //  FileNameSour - имя файла 
In line 77          /// <summary> 
In line 78          /// Получение короткого имени файла (в формате 8.3) 
In line 79          /// </summary> 
In line 80          /// <param name="FileNameSour">имя файла</param> 
In line 81          /// <returns></returns> 
In line 100          // -------------------------------------------------------------- 
In line 101          // Функция       : SysErrorMessage 
In line 102          // Назначение    : Расшифровка кода ошибки Windows API 
In line 103          // -------------------------------------------------------------- 
In line 104          /// <summary> 
In line 105          /// Расшифровка кода ошибки Windows API 
In line 106          /// </summary> 
In line 107          /// <param name="errorCode">код ошибки</param> 
In line 108          /// <returns></returns> 
In line 118          // -------------------------------------------------------------- 
In line 119          // Функция       : ParseEnvString 
In line 120          // Назначение    : Вычмсление содержимого строки путем замены имен переменных 
In line 121          //                 окружения на их значения (%temp% --> c:\temp) 
In line 122          // -------------------------------------------------------------- 
In line 123          // Параметры: 
In line 124          //  Source  - входная строка 
In line 125          /// <summary> 
In line 126          /// Вычисление содержимого строки путем замены имен переменных 
In line 127          /// окружения на их значения (%temp% --> c:\temp) 
In line 128          /// </summary> 
In line 129          /// <param name="source">входная строка</param> 
In line 130          /// <returns></returns> 
In line 144                      //Console.WriteLine(element + " --> " + Environment.GetEnvironmentVariable(element)); 
In line 149                      //Console.WriteLine(element); 
In line 152              //Console.WriteLine(dest); 
In line 156          // -------------------------------------------------------------- 
In line 157          // Функция       : GetDiskFileNameINI 
In line 158          // Назначение    : Получение имени файла эмулируемого диска S370  
In line 159          //                 по имени тома и имени виртуальной машины 
In line 160          // -------------------------------------------------------------- 
In line 161          // Параметры: 
In line 162          //  DiskName - имя диска 
In line 163          //  VMname   - имя виртуальной машины на мейнфрейме 
In line 164          /// <summary> 
In line 165          /// Получение имени файла эмулируемого диска S370  
In line 166          /// по имени тома и имени виртуальной машины 
In line 167          /// </summary> 
In line 168          /// <param name="diskName">имя диска</param> 
In line 169          /// <param name="vmName">имя виртуальной машины на мейнфрейме</param> 
In line 170          /// <returns></returns> 
In line 188          // -------------------------------------------------------------- 
In line 189          // Функция       : LoadSettings 
In line 190          // Назначение    : Заполнение параметров на основе содержимого ini-файла 
In line 191          // -------------------------------------------------------------- 
In line 192          // Параметры: 
In line 193          //  iniFile  - имя ini-файла 
In line 194          /// <summary> 
In line 195          /// Заполнение параметров на основе содержимого ini-файла 
In line 196          /// </summary> 
In line 197          /// <param name="iniFile">имя ini-файла</param> 
In line 198          /// <returns></returns> 
In line 209          // -------------------------------------------------------------- 
In line 210          // Функция       : SetFileGrif 
In line 211          // Назначение    : Установка мандатной метки файла 
In line 212          // -------------------------------------------------------------- 
In line 213          // Параметры: 
In line 214          //  FileName - имя файла 
In line 215          //  grif     - мандатная метка 
In line 216          /// <summary> 
In line 217          /// Установка мандатной метки файла 
In line 218          /// </summary> 
In line 219          /// <param name="fileName">имя файла</param> 
In line 220          /// <param name="grif">мандатная метка</param> 
In line 221          /// <returns></returns> 
In line 250          // -------------------------------------------------------------- 
In line 251          // Функция       : GetFileGrif 
In line 252          // Назначение    : Получение мандатной метки файла из СЗИ "СТРАЖ NT" 
In line 253          // -------------------------------------------------------------- 
In line 254          // Параметры: 
In line 255          //  FileName - имя файла 
In line 256          /// <summary> 
In line 257          /// Получение мандатной метки файла из СЗИ "СТРАЖ NT" 
In line 258          /// </summary> 
In line 259          /// <param name="fileName">имя файла</param> 
In line 260          /// <returns></returns> 
In line 289          // -------------------------------------------------------------- 
In line 290          // Функция       : CopyFileGrif 
In line 291          // Назначение    : Копирование файла с сохранением мандатной метки  
In line 292          // -------------------------------------------------------------- 
In line 293          // Параметры: 
In line 294          //  FileNameSour - имя исходного файла (откуда) 
In line 295          //  FileNameDest - имя конечного файла (куда) 
In line 296          // -------------------------------------------------------------- 
In line 297          /// <summary> 
In line 298          /// Копирование файла с сохранением мандатной метки  
In line 299          /// </summary> 
In line 300          /// <param name="fileNameSour">имя исходного файла (откуда)</param> 
In line 301          /// <param name="fileNameDest">имя конечного файла (куда)</param> 
In line 302          /// <returns></returns> 
In line 322          // -------------------------------------------------------------- 
In line 323          // Функция       : getErrorLine 
In line 324          // Назначение    : Возвращает номер строки и функцию в которой возникло исключение exception 
In line 325          // Параметры     : exception - входное исключение 
In line 326          // -------------------------------------------------------------- 
In line 327          /// <summary> 
In line 328          /// Возвращает номер строки и функцию в которой возникло исключение exception 
In line 329          /// </summary> 
In line 330          /// <param name="exception">входное исключение</param> 
In line 331          /// <returns></returns> 
In line 341                  // для отображения номера строки рядом с экзешником должен лежать файл *.pdb 
In line 347          // -------------------------------------------------------------- 
In line 348          // Функция       : CheckFileExists 
In line 349          // Назначение    : Проверяет файл на наличие и генерирует исключение при его отсутствии 
In line 350          // Параметры     : filename - имя файла 
In line 351          // -------------------------------------------------------------- 
In line 352          /// <summary> 
In line 353          /// Проверяет файл на наличие и генерирует исключение при его отсутствии 
In line 354          /// </summary> 
In line 355          /// <param name="filename">имя файла</param> 
In line 356          /// <returns></returns> 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\Program.cs  for analysis => 
In line 0  //------------------------------------------------------- 
In line 1  // Подсистема    : Информационное обеспечение 
In line 2  // Задача        : PAB01 
In line 3  // Модуль        : PAB01CAB(program.cs) 
In line 4  // Назначение    : Загрузка dbf-файлов на диски ОС S370 
In line 5  // Язык          : C# (Microsoft Visual Studio 2013) 
In line 6  // Изменения     : 03.2023 Романов Д.Г. Добавлен анализ кода вазврата sr.Read по результатам сканирования с помощью Soloar AppScreener  
In line 7  //------------------------------------------------------- 
In line 71              } //end of try catch 
In line 250              } //end of try catch 
In line 314                          //result = result + "`"; 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\common\IniManager.cs  for analysis => 
In line 8          //Конструктор, принимающий имя INI-файла 
In line 14          //Конструктор без аргументов (путь к INI-файлу нужно будет задать отдельно) 
In line 17          //Возвращает значение из INI-файла (по указанным секции и ключу)  
In line 20              //Для получения значения 
In line 23              //Получить значение в buffer 
In line 29              //Вернуть полученное значение 
In line 33          //Пишет значение в INI-файл (по указанным секции и ключу)  
In line 36              //Записать значение в INI-файл 
In line 40          //Возвращает или устанавливает путь к INI файлу 
In line 43          //Поля класса 
In line 44          private const int SIZE = 1024; //Максимальный размер (для чтения значения из файла) 
In line 45          private string _iniFileName = null; //Для хранения пути к INI-файлу 
In line 47          //Импорт функции GetPrivateProfileString (для чтения значений) из библиотеки kernel32.dll 
In line 51          //Импорт функции WritePrivateProfileString (для записи значений) из библиотеки kernel32.dll 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\common\pab0411lib.cs  for analysis => 
In line 0  //------------------------------------------------------- 
In line 1  // Подсистема    : Информационное обеспечение 
In line 2  // Задача        : PAB04 
In line 3  // Модуль        : pab0411lib 
In line 4  // Назначение    : библиотека процедур и функций  для утилит обмена с помощью xml-файлов 
In line 5  // Язык          : C# (Microsoft Visual Studio 2013) 
In line 6  // Программист   : Крупин А.Ю. 
In line 7  // Дата          : июнь 2019 
In line 8  //               : 11.2019 Романов Д.Г. Загрузка в XML, доработки по замечаниям 
In line 9  //                 07.2020 Крупин А.Ю. Добавлена функция ShowTableStruct   
In line 10  //                 03.2021 Крупин А.Ю. FinishFileExchange возвращала некорректное значение в случае возникновения ошибки при её выполнении  
In line 11  //                 07.2022 Романов Д.Г. Изменена функция WriteLogHeader для прямого вызова pab04qda 
In line 12  //                 03.2023 Романов Д.Г. Доработал пустые блоки try-catch по результатам сканирования с помощью Soloar AppScreener 
In line 13  //------------------------------------------------------- 
In line 36          //------------------------------------------------------------------------------ 
In line 37          /// <summary> 
In line 38          /// Проверяет файл на наличие и генерирует исключение при его отсутствии 
In line 39          /// </summary> 
In line 40          /// <param name="filename">имя файла</param> 
In line 41          /// <returns></returns> 
In line 49          /// <summary> 
In line 50          /// Копирование файла с сохранением мандатной метки  
In line 51          /// </summary> 
In line 52          /// <param name="fileNameSour">имя исходного файла (откуда)</param> 
In line 53          /// <param name="fileNameDest">имя конечного файла (куда)</param> 
In line 54          /// <returns></returns> 
In line 68                  //var processEop01 = Process.Start("Eop01cdb", fileNameSour + " " + fileNameDest); 
In line 81          }// end of public static void CopyFileGrif(string fileNameSour, string fileNameDest) 
In line 83          /// <summary> 
In line 84          /// Создает подключение к БД  
In line 85          /// </summary> 
In line 86          /// <param name="userpass">имя пользователя и пароль в формате пользователь/пароль </param> 
In line 87          /// <param name="server">ODBC-алиас БД к которой необходимо подключиться</param> 
In line 88          /// <param name="user">Возвращает имя пользователя под которым произошло подключение</param> 
In line 89          /// <returns></returns> 
In line 113          }//end of public static OdbcConnection CreateConnection(...) 
In line 114          // -------------------------------------------------------------- 
In line 115          // Функция       : CutLastChar 
In line 116          // Назначение    : Удаление последнего символа в строке 
In line 117          // Параметры     : src - исходная строка 
In line 118          // -------------------------------------------------------------- 
In line 119          /// <summary> 
In line 120          /// Удаление последнего символа в строке 
In line 121          /// </summary> 
In line 122          /// <param name="src">Исходная строка</param> 
In line 128          /// <summary> 
In line 129          /// преобразует значение value из  Decimal в String, при этом разделителем является точка  
In line 130          /// </summary> 
In line 131          /// <param name="DecimalDigits">количество знаков после запятой</param> 
In line 132          /// <param name="value"></param> 
In line 133          /// <returns></returns> 
In line 143          /// <summary> 
In line 144          /// выполняет шаги завершающие загрузку или выгрузку dbf-файла 
In line 145          /// </summary> 
In line 146          /// <param name="errorFlag"></param> 
In line 147          /// <param name="_tempFileLog"></param> 
In line 148          /// <param name="_fileLog"></param> 
In line 149          /// <param name="LogGrif"></param> 
In line 150          /// <param name="_odbcConnection"></param> 
In line 151          /// TODO убрать возвращаемое значение, результат возвращать через out-параметр errorFlag  
In line 152          /// <returns>true- произошла ошибка,false- успешное завершение</returns> 
In line 171                  /*"успешное" завершение всех операций,если ошибка и была, то раньше и errorFlag нам об этом говорит*/ 
In line 178                  return true;    //произошла ошибка 
In line 181          // -------------------------------------------------------------- 
In line 182          // Функция       : ExtractItemFromStringDelem 
In line 183          // Назначение    : Извлечение подстроки из строки, разделенной символами-разделителями 
In line 184          // Параметры     : s         - исходная строка 
In line 185          //                 num       - номер подстроки (нумерация начинается с '0') 
In line 186          //                 delemiter - символ-разделитель 
In line 187          // -------------------------------------------------------------- 
In line 188          /// <summary> 
In line 189          /// Извлечение подстроки из строки, разделенной символами-разделителями 
In line 190          /// </summary> 
In line 191          /// <param name="s">Исходная строка</param> 
In line 192          /// <param name="num">Номер подстроки (нумерация начинается с '0')</param> 
In line 193          /// <param name="delemiter">Символ-разделитель</param> 
In line 221          }//end of static string ExtractItemFromStringDelem(string s,int num,Char delemiter) 
In line 223          // -------------------------------------------------------------- 
In line 224          // Функция       : GetItemsCountInStringDelem 
In line 225          // Назначение    : Подсчет количества подстрок в строке, разделенной символами-разделителями 
In line 226          // Параметры     : s         - исходная строка 
In line 227          //                 delemiter - символ-разделитель 
In line 228          // -------------------------------------------------------------- 
In line 229          /// <summary> 
In line 230          /// Подсчет количества подстрок в строке, разделенной символами-разделителями 
In line 231          /// </summary> 
In line 232          /// <param name="s">Исходная строка</param> 
In line 233          /// <param name="delemiter">Символ-разделитель</param> 
In line 247          // -------------------------------------------------------------- 
In line 248          // Функция       : GetParam 
In line 249          // Назначение    : Получение значения параметра командной строки по его имени 
In line 250          // Параметры     : args      - массив параметров приложения 
In line 251          //                 ParamName - ключ командной строки(e.g. -u) 
In line 252          // -------------------------------------------------------------- 
In line 253          /// <summary> 
In line 254          /// Получение значения параметра командной строки по его имени 
In line 255          /// </summary> 
In line 256          /// <param name="args">Массив параметров приложения</param> 
In line 257          /// <param name="ParamName">Ключ командной строки(e.g. -u)</param> 
In line 270          }//private static string GetParam(string[] args, string ParamName) 
In line 271          //------------------------------------------------------------------------------------------------- 
In line 272          // -------------------------------------------------------------- 
In line 273          // Функция       : LoadSettings 
In line 274          // Назначение    : Заполнение параметров на основе содержимого ini-файла 
In line 275          // -------------------------------------------------------------- 
In line 276          // Параметры: 
In line 277          //  iniFile  - имя ini-файла 
In line 279          /// <summary> 
In line 280          /// Заполнение параметров на основе содержимого ini-файла 
In line 281          /// </summary> 
In line 282          /// <param name="iniFile">имя ini-файла</param> 
In line 283          /// <returns></returns> 
In line 294          }//end of public static void LoadSettings(string iniFile) 
In line 296          // -------------------------------------------------------------- 
In line 297          // Функция       : WriteLog 
In line 298          // Назначение    : Запись сообщения в консоль и в протокол 
In line 299          // Параметры     : filename - имя протокола 
In line 300          //                 s        - текст сообщения 
In line 301          // -------------------------------------------------------------- 
In line 302          /// <summary> 
In line 303          /// Запись сообщения в консоль и в протокол 
In line 304          /// </summary> 
In line 305          /// <param name="filename">Имя протокола</param> 
In line 306          /// <param name="s">Текст сообщения</param> 
In line 316          }//end of WriteLog 
In line 318          // -------------------------------------------------------------- 
In line 319          // Функция       : getErrorLine 
In line 320          // Назначение    : Возвращает номер строки и функцию в которой возникло исключение exception 
In line 321          // Параметры     : exception - входное исключение 
In line 322          // -------------------------------------------------------------- 
In line 323          /// <summary> 
In line 324          /// Возвращает номер строки и функцию в которой возникло исключение exception 
In line 325          /// </summary> 
In line 326          /// <param name="exception">входное исключение</param> 
In line 327          /// <returns></returns> 
In line 337                  // для отображения номера строки рядом с экзешником должен лежать файл *.pdb 
In line 341          }//end of private static string getErrorLine(Exception exception) 
In line 343          // -------------------------------------------------------------- 
In line 344          // Функция       : WriteTest 
In line 345          // Назначение    : Проверка записи в файл 
In line 346          // Параметры     : fileLog - имя файла 
In line 347          // -------------------------------------------------------------- 
In line 348          /// <summary> 
In line 349          /// Проверка записи в файл  
In line 350          /// </summary> 
In line 351          /// <param name="fileLog">Имя файла</param> 
In line 352          /// <returns>0-файл доступен на запись</returns> 
In line 366          // -------------------------------------------------------------- 
In line 367          // Функция       : SetFileGrif 
In line 368          // Назначение    : Установка мандатной метки файла(перенесено из pab04DbfLib.cs. Нужно оттуда удалить с перекомпиляцией проектов pab04cda,pab04cdb 
In line 369          // -------------------------------------------------------------- 
In line 370          // Параметры: 
In line 371          //  FileName - имя файла 
In line 372          //  grif     - мандатная метка 
In line 373          /// <summary> 
In line 374          /// Установка мандатной метки файла 
In line 375          /// </summary> 
In line 376          /// <param name="fileName">имя файла</param> 
In line 377          /// <param name="grif">мандатная метка</param> 
In line 378          /// <returns></returns> 
In line 403          }//end of  public static void SetFileGrif(string fileName, int grif) 
In line 405          /// <summary> 
In line 406          /// выводит инфомарцию о структуре таблицы(перечень полей, тип, значность) 
In line 407          /// </summary> 
In line 408          /// <param name="reader">ODBCDataReader, содержащий отбор из таблицы</param> 
In line 412              /*оригинальный алгоритм оставлен для отладки 
In line 413              for (int i = 0; i < reader.FieldCount; i++) 
In line 414              { 
In line 415                  Console.WriteLine("Column name = " + reader.GetName(i) + "   DataType = " + 
In line 416                                reader.GetDataTypeName(i) + " "); 
In line 417              } 
In line 418              DataTable schema1 = reader.GetSchemaTable(); 
In line 419              foreach (DataRow row in schema1.Rows) 
In line 420              { 
In line 421                  Console.WriteLine("{0}  {1}  {2} {3} {4}", row["ColumnName"], reader.GetDataTypeName((int)row["ColumnOrdinal"]), 
In line 422                      row["ColumnSize"], row["NumericPrecision"], row["NumericScale"]); 
In line 423              } 
In line 424              */ 
In line 429                  /*Console.WriteLine("Column name = " + reader.GetName(i) + "   DataType = " + 
In line 430                    reader.GetFieldType(i)+              
In line 431                    reader.GetDataTypeName(i) " ");*/ 
In line 449          }//end of public static void showTableStruct(IDataReader reader) 
In line 451          // -------------------------------------------------------------- 
In line 452          // Функция       : ParseEnvString 
In line 453          // Назначение    : Вычисление содержимого строки путем замены имен переменных 
In line 454          //                 окружения на их значения (%temp% --> c:\temp) 
In line 455          // -------------------------------------------------------------- 
In line 456          // Параметры: 
In line 457          //  Source  - входная строка 
In line 458          /// <summary> 
In line 459          /// Вычисление содержимого строки путем замены имен переменных 
In line 460          /// окружения на их значения (%temp% --> c:\temp) 
In line 461          /// </summary> 
In line 462          /// <param name="source">входная строка</param> 
In line 463          /// <returns></returns> 
In line 477                      //Console.WriteLine(element + " --> " + Environment.GetEnvironmentVariable(element)); 
In line 482                      //Console.WriteLine(element); 
In line 485              //Console.WriteLine(dest); 
In line 489          // -------------------------------------------------------------- 
In line 490          /// <summary> 
In line 491          /// возвращает мандатную метку сессии или пустую строку если мандатное разграничение не поддерживается 
In line 492          /// </summary> 
In line 493          /// <param name="odbcTransaction">Транзакция для которой необходимо определить мандатную метку </param> 
In line 494          /// <returns></returns> 
In line 515          }//end of public static string GetSessionGrif(OdbcTransaction odbcTransaction) 
In line 544          }// public static string GetTableGrif(OdbcTransaction odbcTransaction, string schema,string table) 
In line 547          // -------------------------------------------------------------- 
In line 548          // Функция       : SysErrorMessage 
In line 549          // Назначение    : Расшифровка кода ошибки Windows API 
In line 550          // -------------------------------------------------------------- 
In line 557          /// <summary> 
In line 558          /// Расшифровка кода ошибки Windows API 
In line 559          /// </summary> 
In line 560          /// <param name="errorCode">код ошибки</param> 
In line 561          /// <returns></returns> 
In line 570          // -------------------------------------------------------------- 
In line 571          /// <summary> 
In line 572          /// Заполнение структуры таблицы (uploadTable) на основе структуры таблицы из БД 
In line 573          /// </summary> 
In line 574          /// <param name="odbcConnection">подключение ODBC</param> 
In line 575          /// <param name="odbcTransaction">транзакция ODBC</param> 
In line 576          /// <param name="table_name">имя таблицы</param> 
In line 577          /// <param name="uploadTable">выходная таблица</param> 
In line 578          /// <param name="decimalDigits">Массив, в который формируется количество знаков после запятой</param> 
In line 579          /// <param name="fieldPrecision">Массив, в который формируется длина поля</param> 
In line 580          /// <returns></returns> 
In line 607          // -------------------------------------------------------------- 
In line 608          // Функция       : UploadTableAddColumns 
In line 609          // Назначение    : Заполнение структуры таблицы (uploadTable) на основе структуры курсора с даннымим (reader) 
In line 610          // Параметры     : reader      - курсор с данными 
In line 611          //                 uploadTable - выходная таблица 
In line 612          // -------------------------------------------------------------- 
In line 618                  /*// вывод структуры таблицы(для отладки) 
In line 618                  /*// вывод структуры таблицы(для отладки) 
In line 626              } //end for (int i = 0; i < reader.FieldCount; i++) 
In line 628          // -------------------------------------------------------------- 
In line 629          // Функция       : truncate_table_ODBC 
In line 630          // Назначение    : Удаление записей из таблицы в БД 
In line 631          // Параметры     : odbcConnection  - подключение к ODBC 
In line 632          //                 odbcTransaction - транзакция ODBC 
In line 633          //                 file_log        - имя файла-протокола 
In line 634          //                 table_name      - имя таблицы 
In line 635          // -------------------------------------------------------------- 
In line 636          /// <summary> 
In line 637          /// Удаление записей из таблицы table_name 
In line 638          /// </summary> 
In line 639          /// <param name="odbcConnection"></param> 
In line 640          /// <param name="odbcTransaction"></param> 
In line 641          /// <param name="fileLog"></param> 
In line 642          /// <param name="tableName"></param> 
In line 661              //OdbcCommand command_insert = new OdbcCommand("", odbcConnection, odbcTransaction); 
In line 668          /// <summary> 
In line 669          /// добавление данных из запроса query(выполнение запроса query) 
In line 670          /// </summary> 
In line 671          /// <param name="odbcTransaction">транзакция в рамках которой происходит вставка</param> 
In line 672          /// <param name="query">сам запрос на вставку</param> 
In line 673          /// <param name="rec_count_portion">размер порции данных(в строках)</param> 
In line 674          /// <param name="rec_count_loaded">общий размер добавленных данных</param> 
In line 675          /// <returns></returns> 
In line 680        command_insert.CommandText = query; // указываем сформированный запрос.  
In line 681        command_insert.ExecuteNonQuery();   // выполняем запрос                             
In line 685       public static void WriteLogHeader(string _tempFileLog, string server, /*string user,*/ string tableName, string fileName, Encoding codePage, int _configPrizGrif, OdbcTransaction _odbcTransaction, string schema, string table,int portionSize,bool IsLoad) 
In line 765               pab0411lib.WriteLog(_tempFileLog, "\n"); //отделим "заголовок" от списка ошибок на случай если они  будут 
In line 772       }//end of public static void WriteLogHeader 
In line 773       /// <summary> 
In line 774       /// функция возвращает прогнозируемое время выполнения операции (линейный прогноз) 
In line 775       /// </summary> 
In line 776       /// <param name="begOper">время начало операции</param> 
In line 777       /// <param name="recCur">сколько выполнено на данный момент(загружено записей)</param> 
In line 778       /// <param name="recAll">сколько всего</param> 
In line 779       /// <returns></returns> 
In line 787      }// end of public class pab0411lib 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\DbfDataReader\BinaryReaderExtensions.cs  for analysis => 
In file BinaryReaderExtensions.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\DbfDataReader\DbfColumn.cs  for analysis => 
In line 30              // ignore field data address 
In line 36              // skip the reserved bytes 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\DbfDataReader\DbfColumnType.cs  for analysis => 
In file DbfColumnType.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\DbfDataReader\DbfDataReader.cs  for analysis => 
In line 190          //public override object this[int ordinal] => GetValue(ordinal); 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\DbfDataReader\DbfDataReaderOptions.cs  for analysis => 
In file DbfDataReaderOptions.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\DbfDataReader\DbfFileFormatException.cs  for analysis => 
In file DbfFileFormatException.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\DbfDataReader\DbfHeader.cs  for analysis => 
In line 116              // skip the reserved bytes 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\DbfDataReader\DbfMemo.cs  for analysis => 
In file DbfMemo.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\DbfDataReader\DbfMemoDbase3.cs  for analysis => 
In file DbfMemoDbase3.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\DbfDataReader\DbfMemoDbase4.cs  for analysis => 
In file DbfMemoDbase4.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\DbfDataReader\DbfMemoFoxPro.cs  for analysis => 
In line 21          public /*override*/ int BlockSize { get; private set; } 
In line 27              BinaryReader.ReadUInt32(); // next block 
In line 28              BinaryReader.ReadUInt16(); // unused 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\DbfDataReader\DbfRecord.cs  for analysis => 
In file DbfRecord.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\DbfDataReader\DbfTable.cs  for analysis => 
In line 31              //stream = new FileStream(path, FileMode.Open); 
In line 35              BinaryReader.ReadBytes(32); // skip header 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\DbfDataReader\DbfValue.cs  for analysis => 
In file DbfValue.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\DbfDataReader\DbfValueBoolean.cs  for analysis => 
In file DbfValueBoolean.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\DbfDataReader\DbfValueCurrency.cs  for analysis => 
In line 25              /*var format = DecimalCount != 0 
In line 26                  ? $"0.{new string('0', DecimalCount)}" 
In line 27                  : null; 
In line 28   
In line 29              return Value?.ToString(format, NumberFormatInfo.CurrentInfo) ?? string.Empty;*/ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\DbfDataReader\DbfValueDate.cs  for analysis => 
In file DbfValueDate.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\DbfDataReader\DbfValueDateTime.cs  for analysis => 
In file DbfValueDateTime.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\DbfDataReader\DbfValueDecimal.cs  for analysis => 
In line 41              /*var format = DecimalCount != 0 
In line 42                  ? $"0.{new string('0', DecimalCount)}" 
In line 43                  : null; 
In line 44   
In line 45              return Value?.ToString(format, NumberFormatInfo.CurrentInfo) ?? string.Empty;*/ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\DbfDataReader\DbfValueDouble.cs  for analysis => 
In line 31              /*var format = DecimalCount != 0 
In line 32                  ? $"0.{new string('0', DecimalCount)}" 
In line 33                  : null; 
In line 34   
In line 35              return Value?.ToString(format, NumberFormatInfo.CurrentInfo) ?? string.Empty;*/ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\DbfDataReader\DbfValueFloat.cs  for analysis => 
In line 46              /*var format = DecimalCount != 0 
In line 47                  ? $"0.{new string('0', DecimalCount)}" 
In line 48                  : null; 
In line 49   
In line 50              return Value?.ToString(format, NumberFormatInfo.CurrentInfo) ?? string.Empty;*/ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\DbfDataReader\DbfValueInt.cs  for analysis => 
In file DbfValueInt.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\DbfDataReader\DbfValueLong.cs  for analysis => 
In file DbfValueLong.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\DbfDataReader\DbfValueMemo.cs  for analysis => 
In file DbfValueMemo.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\DbfDataReader\DbfValueNull.cs  for analysis => 
In file DbfValueNull.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\DbfDataReader\DbfValueString.cs  for analysis => 
In file DbfValueString.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\DbfDataReader\Disposable.cs  for analysis => 
In file Disposable.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\DbfDataReader\EncodingProvider.cs  for analysis => 
In file EncodingProvider.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\DbfDataReader\IDbfValue.cs  for analysis => 
In file IDbfValue.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\Properties\AssemblyInfo.cs  for analysis => 
In line 4  // Управление общими сведениями о сборке осуществляется с помощью  
In line 5  // набора атрибутов. Измените значения этих атрибутов, чтобы изменить сведения, 
In line 6  // связанные со сборкой. 
In line 16  // Параметр ComVisible со значением FALSE делает типы в сборке невидимыми  
In line 17  // для COM-компонентов.  Если требуется обратиться к типу в этой сборке через  
In line 18  // COM, задайте атрибуту ComVisible значение TRUE для этого типа. 
In line 21  // Следующий GUID служит для идентификации библиотеки типов, если этот проект будет видимым для COM 
In line 24  // Сведения о версии сборки состоят из следующих четырех значений: 
In line 25  // 
In line 26  //      Основной номер версии 
In line 27  //      Дополнительный номер версии  
In line 28  //   Номер сборки 
In line 29  //      Редакция 
In line 30  // 
In line 31  // Можно задать все значения или принять номера сборки и редакции по умолчанию  
In line 32  // используя "*", как показано ниже: 
In line 33  // [assembly: AssemblyVersion("1.0.*")] 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\DbfDataReader\BinaryReaderExtensions.cs  for analysis => 
In file BinaryReaderExtensions.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\DbfDataReader\DbfColumn.cs  for analysis => 
In line 30              // ignore field data address 
In line 36              // skip the reserved bytes 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\DbfDataReader\DbfColumnType.cs  for analysis => 
In file DbfColumnType.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\DbfDataReader\DbfDataReader.cs  for analysis => 
In line 190          //public override object this[int ordinal] => GetValue(ordinal); 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\DbfDataReader\DbfDataReaderOptions.cs  for analysis => 
In file DbfDataReaderOptions.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\DbfDataReader\DbfFileFormatException.cs  for analysis => 
In file DbfFileFormatException.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\DbfDataReader\DbfHeader.cs  for analysis => 
In line 116              // skip the reserved bytes 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\DbfDataReader\DbfMemo.cs  for analysis => 
In file DbfMemo.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\DbfDataReader\DbfMemoDbase3.cs  for analysis => 
In file DbfMemoDbase3.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\DbfDataReader\DbfMemoDbase4.cs  for analysis => 
In file DbfMemoDbase4.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\DbfDataReader\DbfMemoFoxPro.cs  for analysis => 
In line 21          public /*override*/ int BlockSize { get; private set; } 
In line 27              BinaryReader.ReadUInt32(); // next block 
In line 28              BinaryReader.ReadUInt16(); // unused 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\DbfDataReader\DbfRecord.cs  for analysis => 
In file DbfRecord.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\DbfDataReader\DbfTable.cs  for analysis => 
In line 31              //stream = new FileStream(path, FileMode.Open); 
In line 35              BinaryReader.ReadBytes(32); // skip header 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\DbfDataReader\DbfValue.cs  for analysis => 
In file DbfValue.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\DbfDataReader\DbfValueBoolean.cs  for analysis => 
In file DbfValueBoolean.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\DbfDataReader\DbfValueCurrency.cs  for analysis => 
In line 25              /*var format = DecimalCount != 0 
In line 26                  ? $"0.{new string('0', DecimalCount)}" 
In line 27                  : null; 
In line 28   
In line 29              return Value?.ToString(format, NumberFormatInfo.CurrentInfo) ?? string.Empty;*/ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\DbfDataReader\DbfValueDate.cs  for analysis => 
In file DbfValueDate.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\DbfDataReader\DbfValueDateTime.cs  for analysis => 
In file DbfValueDateTime.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\DbfDataReader\DbfValueDecimal.cs  for analysis => 
In line 41              /*var format = DecimalCount != 0 
In line 42                  ? $"0.{new string('0', DecimalCount)}" 
In line 43                  : null; 
In line 44   
In line 45              return Value?.ToString(format, NumberFormatInfo.CurrentInfo) ?? string.Empty;*/ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\DbfDataReader\DbfValueDouble.cs  for analysis => 
In line 31              /*var format = DecimalCount != 0 
In line 32                  ? $"0.{new string('0', DecimalCount)}" 
In line 33                  : null; 
In line 34   
In line 35              return Value?.ToString(format, NumberFormatInfo.CurrentInfo) ?? string.Empty;*/ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\DbfDataReader\DbfValueFloat.cs  for analysis => 
In line 46              /*var format = DecimalCount != 0 
In line 47                  ? $"0.{new string('0', DecimalCount)}" 
In line 48                  : null; 
In line 49   
In line 50              return Value?.ToString(format, NumberFormatInfo.CurrentInfo) ?? string.Empty;*/ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\DbfDataReader\DbfValueInt.cs  for analysis => 
In file DbfValueInt.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\DbfDataReader\DbfValueLong.cs  for analysis => 
In file DbfValueLong.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\DbfDataReader\DbfValueMemo.cs  for analysis => 
In file DbfValueMemo.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\DbfDataReader\DbfValueNull.cs  for analysis => 
In file DbfValueNull.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\DbfDataReader\DbfValueString.cs  for analysis => 
In file DbfValueString.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\DbfDataReader\Disposable.cs  for analysis => 
In file Disposable.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\DbfDataReader\EncodingProvider.cs  for analysis => 
In file EncodingProvider.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\DbfDataReader\IDbfValue.cs  for analysis => 
In file IDbfValue.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\Properties\AssemblyInfo.cs  for analysis => 
In line 4  // Управление общими сведениями о сборке осуществляется с помощью  
In line 5  // набора атрибутов. Измените значения этих атрибутов, чтобы изменить сведения, 
In line 6  // связанные со сборкой. 
In line 16  // Параметр ComVisible со значением FALSE делает типы в сборке невидимыми  
In line 17  // для COM-компонентов.  Если требуется обратиться к типу в этой сборке через  
In line 18  // COM, задайте атрибуту ComVisible значение TRUE для этого типа. 
In line 21  // Следующий GUID служит для идентификации библиотеки типов, если этот проект будет видимым для COM 
In line 24  // Сведения о версии сборки состоят из следующих четырех значений: 
In line 25  // 
In line 26  //      Основной номер версии 
In line 27  //      Дополнительный номер версии  
In line 28  //   Номер сборки 
In line 29  //      Редакция 
In line 30  // 
In line 31  // Можно задать все значения или принять номера сборки и редакции по умолчанию  
In line 32  // используя "*", как показано ниже: 
In line 33  // [assembly: AssemblyVersion("1.0.*")] 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cab\pab04cab\Program.cs  for analysis => 
In line 0  //------------------------------------------------------- 
In line 1  // Подсистема    : Информационное обеспечение 
In line 2  // Задача        : PAB04 
In line 3  // Модуль        : PAB04CAB(program.cs) 
In line 4  // Назначение    : Загрузка xml-файла в таблицу СУБД PostgreSQL 
In line 5  // Язык          : C# (Microsoft Visual Studio 2013) 
In line 6  // Программист   : Крупин А.Ю. 
In line 7  // Дата          : июнь 2019 
In line 8  //               : 11.2019 Романов Д.Г. Ускорение загрузки в PostgreSQL, доработки по замечаниям 
In line 9  //               : 07.2020 Крупин А.Ю. изменена реакция на символ с кодом 0 в загружаемых данных(postgres) 
In line 10  //                         изменен текст сообщения при OutOfMemoryException.      
In line 11  //------------------------------------------------------- 
In line 29          /// <summary> 
In line 30          /// какое количество записей грузится за 1 запрос. На тестовых примерах для   
In line 31          /// Oracle наблюдалось серьезное падение скорости при увеличении этого параметра больше 1000 
In line 32          /// </summary> 
In line 35          /// имя файла протокола(во временной директории) 
In line 37          /// имя файла протокола (в фактической директории) 
In line 43          //private static int _configPrizGrif = 0; 
In line 44          /// <summary> 
In line 45          /// гриф файла протокола 
In line 46          /// </summary> 
In line 49          /// <summary> 
In line 50          /// расширение файла протокола(если не указан _fileLog) 
In line 51          /// </summary> 
In line 54          /// <summary> 
In line 55          /// имя узла, хранящего строку загружаемой таблицы 
In line 56          /// </summary> 
In line 82              catch (Exception) // при некорректных параметрах выставляем "по умолчанию" 
In line 92                  //if (logFilename.Length == 0) throw new Exception("Ошибка: Не указан log-файл"); 
In line 96                  //if (pab0411lib.WriteTest(_tempFileLog) == 1) return 1; 
In line 97                  /* 
In line 98                  pab0411lib.WriteLog(_tempFileLog, DateTime.Now.ToString("dd.MM.yyyy HH:mm:ss")); 
In line 99                  pab0411lib.WriteLog(_tempFileLog, "База данных:            " + server); 
In line 100                  pab0411lib.WriteLog(_tempFileLog, "Пользователь:           " + user); 
In line 101                  pab0411lib.WriteLog(_tempFileLog, "Загружаемая таблица:    " + tableName); 
In line 102                  pab0411lib.WriteLog(_tempFileLog, "Файл данных:            " + XMLfilename); 
In line 103                  pab0411lib.WriteLog(_tempFileLog, "Размер порции:          " + portionSize.ToString()); 
In line 104                  */ 
In line 116                  //перетаскиваем протокол во временную директорию 
In line 120                  //возможно тут нужно понизить гриф файла до грифа текущей сессии, НО  
In line 121                  //если его реально нет, то мы не сможем понизить его гриф. 
In line 123                  //понижаем гриф протокола во временной директории, чтобы гарантированно его удалить 
In line 130                      //если не смогли понизить гриф, быстрее всего файла нет 
In line 136                      File.Copy(_fileLog, _tempFileLog); //при копировании гриф файла повышается до грифа сессии 
In line 154                  pab0411lib.WriteLogHeader(_tempFileLog, server, /*user,*/ tableName, XMLfilename, System.Text.Encoding.UTF8, 0, 
In line 157                  int rec_count_loaded=0;// количество загруженных записей 
In line 166                  // считаем количество записей в выгружаемой таблице  
In line 174                  } //else Console.WriteLine("Нет данных для выгрузки "); 
In line 178                  Console.WriteLine("\n");// отделяем строки в консольке 
In line 184              } //try-catch 
In line 198              } //end of try catch 
In line 204          }//end of static int Main(string[] args) 
In line 206          // -------------------------------------------------------------- 
In line 207          // Функция       : loadToPostgres 
In line 208          // Назначение    : Загрузка таблицы в БД PostgreSQL 
In line 209          // Параметры     : odbcConnection  - подключение ODBC 
In line 210          //                 odbcTransaction - транзакция ODBC 
In line 211          //                 file_log        - имя файла-протокола 
In line 212          //                 table_name      - имя таблицы 
In line 213          //                 XMLfilename     - имя XML-файла 
In line 214          //                 gr_flag         - признак простановки грифа записей 
In line 215          // -------------------------------------------------------------- 
In line 224                  // Создаем временную таблицу ,в которую считаем данные                 
In line 230                  //формируем информацию о структуре загружаемых данных: перечень колонок и их тип 
In line 245                  DataRow row = uploadTable.NewRow(); // Добавляем строку во временную таблицу 
In line 252                      // считали очередную строку с данными  
In line 308                                      //Console.WriteLine("reader_xml.Name = " + reader_xml.Name); 
In line 313                                           FieldPrecision[i] > 10 // если дата без времени - то грузим "как строку"  
In line 332                          }// while (reader_xml.MoveToNextAttribute()) 
In line 334                          reader_xml.MoveToElement();// Move the reader back to the element node. 
In line 336                          string MyRow = "";// содержит данные одной строки uploadTable 
In line 342                                  if (row[col].ToString() == "") // если данных нет 
In line 347                                  // для числового заменяем разделитель на точку 
In line 360                                      MyRow += "'" + row[col].ToString().Replace("'", "''") + "'" + ",";//удваиваем ' на случай если он встретился в значении поля 
In line 366                                     // MyRow = MyRow.ToString().Replace("\0", " "); 
In line 375                          }//foreach (DataColumn col in uploadTable.Columns) 
In line 391                      }//((String.Compare(reader_xml.Name, "row", true) == 0) &&.... 
In line 392                  }//end while (reader_xml.Read()) 
In line 410                  //pab0411lib.WriteLog(file_log, "Количество загруженных записей " + rec_count_loaded.ToString() + " Количество атрибутов " + uploadTable.Columns.Count.ToString()); 
In line 433          }//end of private loadToPostgres 
In line 435          // -------------------------------------------------------------- 
In line 436          // Функция       : GetBlobAttribute 
In line 437          // Назначение    : Получить blob-поле из XML-файла  
In line 438          // Параметры     : reader_xml  - XmlTextReader с установленным текущим атрибутом 
In line 439          // -------------------------------------------------------------- 
In line 440          /*  
In line 441           private static byte[] GetBlobAttribute(XmlTextReader reader_xml) 
In line 442              { 
In line 443                  int bufferSize = 0x1000; 
In line 444   
In line 445                  byte[] buffer = new byte[bufferSize]; // буффер в bufferSize байт  
In line 446                  int readBytes = (int) reader_xml.ReadContentAsBase64(buffer, 0, bufferSize); 
In line 447   
In line 448                  int position = readBytes; 
In line 449                  using (MemoryStream data = new MemoryStream(readBytes)) 
In line 450                      // создаем расширяемый объект data с первоначальным размером readBytes  
In line 451                  { 
In line 452                      if (readBytes >= bufferSize) 
In line 453                          while (readBytes > 0) 
In line 454                          { 
In line 455                              data.Write(buffer, 0, readBytes); 
In line 456                              //position += (readBytes = (int)reader_xml.ReadContentAsBase64(buffer, position, bufferSize)); 
In line 457                              position += (readBytes = (int) reader_xml.ReadContentAsBase64(buffer, 0, bufferSize)); 
In line 458                          } 
In line 459   
In line 460                      data.Write(buffer, 0, readBytes); 
In line 461                      data.Flush(); 
In line 462                      if (data.Length == 0) 
In line 463                          return new byte[0]; 
In line 464                      return data.ToArray(); 
In line 465                  } 
In line 466              } //end of GetBlobField 
In line 467           */ 
In line 445                  byte[] buffer = new byte[bufferSize]; // буффер в bufferSize байт  
In line 450                      // создаем расширяемый объект data с первоначальным размером readBytes  
In line 456                              //position += (readBytes = (int)reader_xml.ReadContentAsBase64(buffer, position, bufferSize)); 
In line 466              } //end of GetBlobField 
In line 469          // -------------------------------------------------------------- 
In line 470          // Функция       : GetBlobAttributeRaw 
In line 471          // Назначение    : Получить blob-поле из XML-файла "как есть" (в виде Base64) 
In line 472          // Параметры     : reader_xml  - XmlTextReader с установленным текущим атрибутом 
In line 473          // -------------------------------------------------------------- 
In line 480          //------------------------------------------------------------------------------------------------- 
In line 481      }//end of class Program 
In line 483  }//end of namespace 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cac\pab04cac\Program.cs  for analysis => 
In line 0  //------------------------------------------------------- 
In line 1  // Подсистема    : Информационное обеспечение 
In line 2  // Задача        : PAB04 
In line 3  // Модуль        : PAB04CAC(program.cs) 
In line 4  // Назначение    : Выгрузка xml-файла из таблицы СУБД PostgreSQL 
In line 5  // Язык          : C# (Microsoft Visual Studio 2013) 
In line 6  // Программист   : Крупин А.Ю. 
In line 7  // Дата          : июнь 2019 
In line 8  //               : 11.2019 Романов Д.Г. Снятие ограничений на размер файлов в PostgreSQL,  
In line 9  //               :         доработки по замечаниям 
In line 10  //                 09.2020 Крупин А.Ю. Добавлена поддержка СЗИ "Страж NT"(работа с грифами протокола), Изменен внешний вид протокола по требованиям "решения..."  
In line 11  //                 08.2022 Крупин А.Ю. изменен формат вызова функции WriteLogHeader (удален параметр user) 
In line 13  //------------------------------------------------------- 
In line 29          /// имя файла протокола(во временной директории) 
In line 31          /// имя файла протокола (в фактической директории) 
In line 37          //private static int _configPrizGrif = 0; 
In line 38          /// <summary> 
In line 39          /// гриф файла протокола 
In line 40          /// </summary> 
In line 43          /// <summary> 
In line 44          /// расширение файла протокола(если не указан _fileLog) 
In line 45          /// </summary> 
In line 48          /// <summary> 
In line 49          /// имя узла, хранящего строку таблицы 
In line 50          /// </summary> 
In line 68              //string table_name = pab0411lib.GetParam(args, "-t").Replace("'", "").Replace(";", ""); 
In line 78                  //if (log_filename.Length == 0) throw new Exception("Ошибка: Не указан log-файл"); 
In line 81                  /* 
In line 82                  if (table_name.IndexOfAny(" ();'\"".ToCharArray()) >= 0) 
In line 83                      throw new Exception(String.Format(" Неверное имя таблицы {0}", table_name)); 
In line 84                  */ 
In line 86                  //LoadSettings(Path.Combine(exePath, IniName)); 
In line 95                  //перетаскиваем протокол во временную директорию 
In line 98                  //возможно тут нужно понизить гриф файла до грифа текущей сессии, НО  
In line 99                  //если его реально нет, то мы не сможем понизить его гриф. 
In line 101                  //понижаем гриф протокола во временной директории, чтобы гарантированно его удалить 
In line 108                      //если не смогли понизить гриф, быстрее всего файла нет 
In line 114                      File.Copy(_fileLog, _tempFileLog); //при копировании гриф файла повышается до грифа сессии 
In line 145                      xmlWriter.WriteStartDocument(); // <start> 
In line 146                      xmlWriter.WriteStartElement("root"); // <root> 
In line 148                      //----------------- 
In line 191                      xmlWriter.WriteEndElement(); // </root> 
In line 192                      // считаем количество записей в выгружаемой таблице  
In line 200                      } //else Console.WriteLine("Нет данных для выгрузки "); 
In line 204                      Console.WriteLine("\n");// отделяем строки в консольке 
In line 212              } //try-catch 
In line 226              } //end of try catch 
In line 233          }//end of main 
In line 235          // -------------------------------------------------------------- 
In line 236          // Функция       : GetBlobField 
In line 237          // Назначение    : Чтение blob поля в массив байт 
In line 238          // Параметры     : rs      - источник данных 
In line 239          //                 ordinal - порядковый номер поля 
In line 240          // -------------------------------------------------------------- 
In line 241          /// <summary> 
In line 242          /// Прочитать blob поле и вернуть массив байт 
In line 243          /// </summary> 
In line 244          /// <param name="rs">IDataReaderr</param> 
In line 245          /// <param name="ordinal">номер колонки</param> 
In line 246          /// <returns></returns> 
In line 250              byte[] buffer = new byte[bufferSize];   // буффер в bufferSize байт  
In line 252              if (!rs.IsDBNull(ordinal))              //если колонка не пустая 
In line 254                  int readBytes = (int)rs.GetBytes(ordinal, 0L, buffer, 0, bufferSize); // считываем 1-ю порцию  
In line 256                  using (MemoryStream data = new MemoryStream(readBytes))             // создаем расширяемый объект data с первоначальным размером readBytes  
In line 272          }//end of GetBlobField 
In line 274          // -------------------------------------------------------------- 
In line 275          // Функция       : unloadData 
In line 276          // Назначение    : Выгрузка порции данных в XML-файл 
In line 277          // Параметры     : myDataReader  - курсор с данными 
In line 278          //                 xmlWriter     - XML-файл 
In line 279          //                 recort_offset - порядковый номер записи, с которой начинается выгрузка 
In line 280          // -------------------------------------------------------------- 
In line 281          /// <summary> 
In line 282          /// выгружает данные из таблицы, соотвествующей myDataReader в файл xmlWriter 
In line 283          /// </summary> 
In line 284          /// <param name="myDataReader">OdbcDataReader</param> 
In line 285          /// <param name="xmlWriter"></param> 
In line 286          /// <param name="recort_offset"></param> 
In line 287          /// <returns> количество выгруженных строк</returns> 
In line 290              //int rez = -1; 
In line 293              while (myDataReader.Read())//пока есть записи в таблице  
In line 296                  for (int i = 0; i < myDataReader.FieldCount; i++)//цикл по значениям полей 
In line 352                  }//for (int i = 0; i < myDataReader.FieldCount; i++) 
In line 354                  xmlWriter.WriteEndElement(); // DataRowNodeName 
In line 362              }//while (myDataReader.Read()) 
In line 365          }// end of unloadData 
In line 367      }//end of class Program 
In line 368  }//end of namespace pab04cac 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\DbfDataReader\BinaryReaderExtensions.cs  for analysis => 
In file BinaryReaderExtensions.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\DbfDataReader\DbfColumn.cs  for analysis => 
In line 30              // ignore field data address 
In line 36              // skip the reserved bytes 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\DbfDataReader\DbfColumnType.cs  for analysis => 
In file DbfColumnType.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\DbfDataReader\DbfDataReader.cs  for analysis => 
In line 190          //public override object this[int ordinal] => GetValue(ordinal); 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\DbfDataReader\DbfDataReaderOptions.cs  for analysis => 
In file DbfDataReaderOptions.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\DbfDataReader\DbfFileFormatException.cs  for analysis => 
In file DbfFileFormatException.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\DbfDataReader\DbfHeader.cs  for analysis => 
In line 116              // skip the reserved bytes 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\DbfDataReader\DbfMemo.cs  for analysis => 
In file DbfMemo.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\DbfDataReader\DbfMemoDbase3.cs  for analysis => 
In file DbfMemoDbase3.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\DbfDataReader\DbfMemoDbase4.cs  for analysis => 
In file DbfMemoDbase4.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\DbfDataReader\DbfMemoFoxPro.cs  for analysis => 
In line 21          public /*override*/ int BlockSize { get; private set; } 
In line 27              BinaryReader.ReadUInt32(); // next block 
In line 28              BinaryReader.ReadUInt16(); // unused 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\DbfDataReader\DbfRecord.cs  for analysis => 
In line 0  //------------------------------------------------------- 
In line 1  // РџРѕРґСЃРёСЃС‚РµРјР°    : РРЅС„РѕСЂРјР°С†РёРѕРЅРЅРѕРµ РѕР±РµСЃРїРµС‡РµРЅРёРµ 
In line 2  // Р—Р°РґР°С‡Р°        : PAB04 
In line 3  // РњРѕРґСѓР»СЊ        : DbfRecord.cs  
In line 4  // РќР°Р·РЅР°С‡РµРЅРёРµ    : РљР»Р°СЃСЃ РѕРїРёСЃС‹РІР°СЋС‰РёР№ СЂР°Р±РѕС‚Сѓ СЃ Р·Р°РїРёСЃСЊСЋ dbf-С„Р°Р№Р»Р°  
In line 5  // РЇР·С‹Рє          : C# (Microsoft Visual Studio 2013) 
In line 6  // РџСЂРѕРіСЂР°РјРјРёСЃС‚   :  
In line 7  // Р”Р°С‚Р°          : РёСЋР»СЊ 2020 
In line 8  // РР·РјРµРЅРµРЅРёСЏ     : 03.2021 РљСЂСѓРїРёРЅ Рђ.Р®. Р•СЃР»Рё РІ dbf-С„Р°Р№Р»Рµ РёСЃРїРѕР»СЊР·СѓРµС‚СЃСЏ С‡РёСЃР»Рѕ Р±РµР· РїР»Р°РІР°СЋС‰РµР№ С‚РѕС‡РєРё, С‚Рѕ РїСЂРё РѕР±СЂР°Р±РѕС‚РєРµ РёСЃРїРѕР»СЊР·СѓРµС‚СЃСЏ С‚РёРї Long Р° РЅРµ Int 
In line 9  //------------------------------------------------------- 
In line 48                          // 03.2021 Р±С‹Р»Рѕ  
In line 49                          // value = new DbfValueInt(dbfColumn.Length); 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\DbfDataReader\DbfTable.cs  for analysis => 
In line 31              //stream = new FileStream(path, FileMode.Open); 
In line 35              BinaryReader.ReadBytes(32); // skip header 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\DbfDataReader\DbfValue.cs  for analysis => 
In file DbfValue.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\DbfDataReader\DbfValueBoolean.cs  for analysis => 
In file DbfValueBoolean.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\DbfDataReader\DbfValueCurrency.cs  for analysis => 
In line 25              /*var format = DecimalCount != 0 
In line 26                  ? $"0.{new string('0', DecimalCount)}" 
In line 27                  : null; 
In line 28   
In line 29              return Value?.ToString(format, NumberFormatInfo.CurrentInfo) ?? string.Empty;*/ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\DbfDataReader\DbfValueDate.cs  for analysis => 
In file DbfValueDate.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\DbfDataReader\DbfValueDateTime.cs  for analysis => 
In file DbfValueDateTime.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\DbfDataReader\DbfValueDecimal.cs  for analysis => 
In line 41              /*var format = DecimalCount != 0 
In line 42                  ? $"0.{new string('0', DecimalCount)}" 
In line 43                  : null; 
In line 44   
In line 45              return Value?.ToString(format, NumberFormatInfo.CurrentInfo) ?? string.Empty;*/ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\DbfDataReader\DbfValueDouble.cs  for analysis => 
In line 31              /*var format = DecimalCount != 0 
In line 32                  ? $"0.{new string('0', DecimalCount)}" 
In line 33                  : null; 
In line 34   
In line 35              return Value?.ToString(format, NumberFormatInfo.CurrentInfo) ?? string.Empty;*/ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\DbfDataReader\DbfValueFloat.cs  for analysis => 
In line 46              /*var format = DecimalCount != 0 
In line 47                  ? $"0.{new string('0', DecimalCount)}" 
In line 48                  : null; 
In line 49   
In line 50              return Value?.ToString(format, NumberFormatInfo.CurrentInfo) ?? string.Empty;*/ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\DbfDataReader\DbfValueInt.cs  for analysis => 
In file DbfValueInt.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\DbfDataReader\DbfValueLong.cs  for analysis => 
In line 0  //------------------------------------------------------- 
In line 1  // Подсистема    : Информационное обеспечение 
In line 2  // Задача        : PAB04 
In line 3  // Модуль        : DbfValueLong.cs   
In line 4  // Назначение    : Класс, отвечающий за чтение значений типа Long 
In line 5  // Язык          : C# (Microsoft Visual Studio 2013) 
In line 6  // Программист   :  
In line 7  // Дата          : март 2020 
In line 8  // Изменения     : 03.2021 Крупин А.Ю. Вместо считывания 4-й байтового целого значения(int32)  
In line 9  //                         теперь считывается количество байт, заданное значностью поля (алгоритм заимствован из DbfValueInt) 
In line 10  //------------------------------------------------------- 
In line 25              // было:  
In line 26              // Value = binaryReader.ReadInt32(); 
In line 27              // стало: 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\DbfDataReader\DbfValueMemo.cs  for analysis => 
In file DbfValueMemo.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\DbfDataReader\DbfValueNull.cs  for analysis => 
In file DbfValueNull.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\DbfDataReader\DbfValueString.cs  for analysis => 
In file DbfValueString.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\DbfDataReader\Disposable.cs  for analysis => 
In file Disposable.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\DbfDataReader\EncodingProvider.cs  for analysis => 
In file EncodingProvider.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\DbfDataReader\IDbfValue.cs  for analysis => 
In file IDbfValue.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\pab04cda\Program.cs  for analysis => 
In line 0  /* 
In line 1  //------------------------------------------------------- 
In line 2   Подсистема    : Информационное обеспечение 
In line 3   Задача        : PAB04 
In line 4   Модуль        : PAB04CDA(program.cs) вторая редакция 
In line 5   Назначение    : Загрузка dbf-файла в  таблицу СУБД PostgreSQL 
In line 6   Язык          : C# (Microsoft Visual Studio 2013) 
In line 7   Программист   : Крупин А.Ю. 
In line 8   Дата          : июль 2020 
In line 9   Изменения     : 02.2021 Крупин А.Ю. Ошибка при обработке протокола. Удален pab04DBFlib.cs  
In line 10                   03.2023 Романов Д.Г. Доработал пустые блоки try-catch по результатам сканирования с помощью Soloar AppScreener 
In line 11  ------------------------------------------------------- 
In line 12  */ 
In line 1  //------------------------------------------------------- 
In line 30          /// <summary> 
In line 31          /// название файла настроек используемое задачей 
In line 32          /// </summary> 
In line 34          /// имя файла протокола(во временной директории) 
In line 36          /// имя файла протокола (в фактической директории) 
In line 41          /// <summary> 
In line 42          /// гриф файла протокола 
In line 43          /// </summary> 
In line 46          /// <summary> 
In line 47          /// какое количество записей грузится за 1 запрос.  
In line 48          /// </summary> 
In line 53              // параметры подключения:  
In line 54              string user = ""; // имя пользователя            
In line 55              string server = ""; // ODBC алиас для подключения 
In line 56              //-------- 
In line 57              string tableName = ""; // имя таблицы БД которую выгружаем 
In line 59             /// <summary> 
In line 60             /// расширение файла протокола(если не указан _fileLog) 
In line 61             /// </summary> 
In line 63             Encoding codePage = null;     // кодировка dbf-файла(866/cp866/1251/windows-1251) Остальные значения, указанные  в описании 
In line 65             string dbfFileName = ""; // имя файла в который выгружаем данные 
In line 67             //string DbRecordCount = ""; // количество записей в таблице БД 
In line 83              catch (Exception) // при некорректных параметрах выставляем "по умолчанию" 
In line 92              string cp =   pab0411lib.GetParam(args, "-с");  // переменная для хранения кодовой страницы  
In line 107                  //перетаскиваем протокол во временную директорию 
In line 110                  //возможно тут нужно понизить гриф файла до грифа текущей сессии, НО  
In line 111                  //если его реально нет, то мы не сможем понизить его гриф. 
In line 113                  //понижаем гриф протокола во временной директории, чтобы гарантированно его удалить 
In line 120                      //если не смогли понизить гриф, быстрее всего файла нет 
In line 126                      File.Copy(_fileLog, _tempFileLog); //при копировании гриф файла повышается до грифа сессии 
In line 130                  // сообщение об ошибке внутри WriteTest 
In line 131                  // не проверяем возможность записи в _fileLog, потому что при работе с грифом мы не сможем записать напрямую 
In line 173                  //чтение данных из таблицы параметров 
In line 209                      }//if (odbcTableReader.HasRows) 
In line 212                  } //if (DBFfilename.Length == 0) 
In line 220                  //выводим все параметры в протокол  
In line 223  #if DEBUG       //не знаю насколько это надо в Release 
In line 245          }//end of main 
In line 258                  // Временная таблица(буфер),в которую считываем данные для того чтобы потом поместить их в БД 
In line 279                  DataRow row = uploadTable.NewRow(); // Добавляем строку во временную таблицу 
In line 283                      // TODO передать кодовую страницу  
In line 295                  // Не проверяем количество записей, указанное в заголовке, на >0.  
In line 296                  // Позволит загрузить файлы у которых количество проставлено не корректно. 
In line 298                  // удаляем данные в целевой таблице 
In line 301                  //читаем dbf-файл 
In line 304                  while (dbfFile.Read(record)) // цикл по записям dbf-файла 
In line 318                      //цикл по колонкам dbf-файла: помещаем данные в  uploadTable. 
In line 324                          // вывод данных, считанных из dbf-файла 
In line 326                          //                  Console.WriteLine(dbfFile.Columns[i].Name+" = "+record.GetValue(i).ToString()); 
In line 357                                       FieldPrecision[i] > 10 // если дата без времени - то грузим "как строку"  
In line 383                      } //for (Int32 i = 0; i < dbfFile.Columns.Count; i++)//цикл по колонкам  
In line 386                      // цикл по колонкам uploadTable: помещаем данные из uploadTable в таблицу БД 
In line 389                      string MyRow = ""; // содержит данные одной строки uploadTable 
In line 395                              if (row[col].ToString() == "") // если данных нет 
In line 400                                  // для числового заменяем разделитель на точку 
In line 407                                  //удваиваем ' на случай если он встретился в значении поля 
In line 415                                  // MyRow = MyRow.ToString().Replace("\0", " "); 
In line 424                      } //foreach (DataColumn col in uploadTable.Columns) 
In line 429                      // порция данных сформирована, помещаем данные в БД 
In line 442                  } //while (dbfFile.Read(record))// цикл по записям dbf-файла 
In line 448                  if (rec_count_portion > 0) //если остались данные которые еще не записали в таблицу БД 
In line 485          } //end of private LoadToPostgres 
In line 494          }//end of static void LoadSettings(string iniFile) 
In line 495      } //end of static class Program 
In line 496  } //namespace pab04 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cdb\FastDBF\DbfColumn.cs  for analysis => 
In line 4  	/// <summary> 
In line 5  	/// This class represents a DBF Column. 
In line 6  	/// </summary> 
In line 7  	///  
In line 8  	/// <remarks> 
In line 9  	/// Note that certain properties can not be modified after creation of the object.  
In line 10  	/// This is because we are locking the header object after creation of a data row, 
In line 11  	/// and columns are part of the header so either we have to have a lock field for each column, 
In line 12  	/// or make it so that certain properties such as length can only be set during creation of a column. 
In line 13  	/// Otherwise a user of this object could modify a column that belongs to a locked header and thus corrupt the DBF file. 
In line 14  	/// </remarks> 
In line 17  	/* 
In line 18  		(FoxPro/FoxBase) Double integer *NOT* a memo field 
In line 19  		G 	General 	(dBASE V: like Memo) OLE Objects in MS Windows versions  
In line 20  		P 	Picture 	(FoxPro) Like Memo fields, but not for text processing.  
In line 21  		Y 	Currency 	(FoxPro) 
In line 22  		T 	DateTime 	(FoxPro) 
In line 23  		I 	Integer 	Length: 4 byte little endian integer 	(FoxPro) 
In line 24  	*/ 
In line 28  		/// <summary> 
In line 29  		///  Great information on DBF located here:  
In line 30  		///  http://www.clicketyclick.dk/databases/xbase/format/data_types.html 
In line 31  		///  http://www.clicketyclick.dk/databases/xbase/format/dbf.html 
In line 32  		/// </summary> 
In line 35  			/// <summary> 
In line 36  			/// Character  less than 254 length 
In line 37  			/// ASCII text less than 254 characters long in dBASE.  
In line 38  			///  
In line 39  			/// Character fields can be up to 32 KB long (in Clipper and FoxPro) using decimal  
In line 40  			/// count as high byte in field length. It's possible to use up to 64KB long fields  
In line 41  			/// by reading length as unsigned. 
In line 42  			///  
In line 43  			/// </summary> 
In line 46  			/// <summary> 
In line 47  			/// Number 	Length: less than 18  
In line 48  			///   ASCII text up till 18 characters long (include sign and decimal point).  
In line 49  			///  
In line 50  			/// Valid characters:  
In line 51  			///    "0" - "9" and "-". Number fields can be up to 20 characters long in FoxPro and Clipper.  
In line 52  			/// </summary> 
In line 53  			/// <remarks> 
In line 54  			/// We are not enforcing this 18 char limit. 
In line 55  			/// </remarks> 
In line 58  			/// <summary> 
In line 59  			///  L  Logical  Length: 1    Boolean/byte (8 bit)  
In line 60  			///   
In line 61  			///  Legal values:  
In line 62  			///   ? 	Not initialised (default) 
In line 63  			///   Y,y 	Yes 
In line 64  			///   N,n 	No 
In line 65  			///   F,f 	False 
In line 66  			///   T,t 	True 
In line 67  			///   Logical fields are always displayed using T/F/?. Some sources claims  
In line 68  			///   that space (ASCII 20h) is valid for not initialised. Space may occur, but is not defined. 	  
In line 69  			/// </summary> 
In line 72  			/// <summary> 
In line 73  			/// D 	Date 	Length: 8  Date in format YYYYMMDD. A date like 0000-00- 00 is *NOT* valid.  
In line 74  			/// </summary> 
In line 77  			/// <summary> 
In line 78  			/// M 	Memo 	Length: 10 	Pointer to ASCII text field in memo file 10 digits representing a pointer to a DBT block (default is blanks).  
In line 79  			/// </summary> 
In line 82  			/// <summary> 
In line 83  			/// B 	Binary 	 	(dBASE V) Like Memo fields, but not for text processing. 
In line 84  			/// </summary> 
In line 87  			/// <summary> 
In line 88  			/// I 	Integer 	Length: 4 byte little endian integer 	(FoxPro) 
In line 89  			/// </summary> 
In line 95  		/// <summary> 
In line 96  		/// Decimal precision count, or number of digits afer decimal point. This applies to Number types only. 
In line 97  		/// </summary> 
In line 100  		/// <summary> 
In line 101  		/// Length of the data in bytes; some rules apply which are in the spec (read more above). 
In line 102  		/// </summary> 
In line 105  		/// <summary> 
In line 106  		/// Field Type (Char, number, boolean, date, memo, binary) 
In line 107  		/// </summary> 
In line 110  		/// <summary> 
In line 111  		/// Offset from the start of the record 
In line 112  		/// </summary> 
In line 115  		/// <summary> 
In line 116  		/// Column (field) name 
In line 117  		/// </summary> 
In line 120  		/// <summary> 
In line 121  		/// Full spec constructor sets all relevant fields. 
In line 122  		/// </summary> 
In line 123  		/// <param name="sName"></param> 
In line 124  		/// <param name="type"></param> 
In line 125  		/// <param name="nLength"></param> 
In line 126  		/// <param name="nDecimals"></param> 
In line 138  			//perform some simple integrity checks... 
In line 139  			//------------------------------------------- 
In line 141  			//decimal precision: 
In line 142  			//we could also fix the length property with a statement like this: mLength = mDecimalCount + 2; 
In line 153  				mLength = 8; //Dates are exactly yyyyMMdd 
In line 156  				mLength = 10; //Length: 10 Pointer to ASCII text field in memo file. pointer to a DBT block. 
In line 161  			//field length: 
In line 174  		/// <summary> 
In line 175  		/// Create a new column fully specifying all properties. 
In line 176  		/// </summary> 
In line 177  		/// <param name="sName">column name</param> 
In line 178  		/// <param name="type">type of field</param> 
In line 179  		/// <param name="nLength">field length including decimal places and decimal point if any</param> 
In line 180  		/// <param name="nDecimals">decimal places</param> 
In line 181  		/// <param name="nDataAddress">offset from start of record</param> 
In line 194  		/// <summary> 
In line 195  		/// Field Name. 
In line 196  		/// </summary> 
In line 203  				//name: 
In line 208  			        //throw new Exception("Field names can not be longer than 11 chars."); 
In line 215  		/// <summary> 
In line 216  		/// Field Type (C N L D or M). 
In line 217  		/// </summary> 
In line 220  		/// <summary> 
In line 221  		/// Returns column type as a char, (as written in the DBF column header) 
In line 222  		/// N=number, C=char, B=binary, L=boolean, D=date, I=integer, M=memo 
In line 223  		/// </summary> 
In line 255  		/// <summary> 
In line 256  		/// Field Data Address offset from the start of the record. 
In line 257  		/// </summary> 
In line 260  		/// <summary> 
In line 261  		/// Length of the data in bytes. 
In line 262  		/// </summary> 
In line 265  		/// <summary> 
In line 266  		/// Field decimal count in Binary, indicating where the decimal is. 
In line 267  		/// </summary> 
In line 270  		/// <summary> 
In line 271  		/// Returns corresponding dbf field type given a .net Type. 
In line 272  		/// </summary> 
In line 273  		/// <param name="type"></param> 
In line 274  		/// <returns></returns> 
In line 303  		/// <summary> 
In line 304  		/// Returns shp file Shape Field. 
In line 305  		/// </summary> 
In line 306  		/// <returns></returns> 
In line 312  		/// <summary> 
In line 313  		/// Returns Shp file ID field. 
In line 314  		/// </summary> 
In line 315  		/// <returns></returns> 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cdb\FastDBF\DbfDataTruncateException.cs  for analysis => 
In file DbfDataTruncateException.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cdb\FastDBF\DbfFile.cs  for analysis => 
In line 6  	/// <summary> 
In line 7  	/// This class represents a DBF file. You can create new, open, update and save DBF files using this class and supporting classes. 
In line 8  	/// Also, this class supports reading/writing from/to an internet forward only type of stream! 
In line 9  	/// </summary> 
In line 10  	/// <remarks> 
In line 11  	/// TODO: add end of file byte '0x1A' !!! 
In line 12  	/// We don't relly on that byte at all, and everything works with or without that byte, but it should be there by spec. 
In line 13  	/// </remarks> 
In line 27  		/// <summary> 
In line 28  		/// Streams to read and write to the DBF file. 
In line 29  		/// </summary> 
In line 34  		/// <summary> 
In line 35  		/// File that was opened, if one was opened at all. 
In line 36  		/// </summary> 
In line 39  		/// <summary> 
In line 40  		/// Helps read/write dbf file header information. 
In line 41  		/// </summary> 
In line 44  		/// <summary> 
In line 45  		/// flag that indicates whether the header was written or not... 
In line 46  		/// </summary> 
In line 49  		/// <summary> 
In line 50  		/// keep these values handy so we don't call functions on every read. 
In line 51  		/// </summary> 
In line 55  		/// <summary> 
In line 56  		/// Number of records read using ReadNext() methods only. This applies only when we are using a forward-only stream. 
In line 57  		/// mRecordsReadCount is used to keep track of record index. With a seek enabled stream,  
In line 58  		/// we can always calculate index using stream position. 
In line 59  		/// </summary> 
In line 64  		/// <summary> 
In line 65  		/// Returns true if we can not write to the DBF file stream. 
In line 66  		/// </summary> 
In line 69  		/// <summary> 
In line 70  		/// Returns true if we can not seek to different locations within the file, such as internet connections. 
In line 71  		/// </summary> 
In line 74  		/// <summary> 
In line 75  		/// Returns the name of the filestream. 
In line 76  		/// </summary> 
In line 79  		/// <summary> 
In line 80  		/// Access DBF header with information on columns. Use this object for faster access to header.  
In line 81  		/// Remove one layer of function calls by saving header reference and using it directly to access columns. 
In line 82  		/// </summary> 
In line 85  		/// <summary> 
In line 86  		/// Open a DBF from a FileStream. This can be a file or an internet connection stream. Make sure that it is positioned at start of DBF file. 
In line 87  		/// Reading a DBF over the internet we can not determine size of the file, so we support HasMore(), ReadNext() interface.  
In line 88  		/// RecordCount information in header can not be trusted always, since some packages store 0 there. 
In line 89  		/// </summary> 
In line 90  		/// <param name="ofs"></param> 
In line 106  			//reset position 
In line 109  			//assume header is not written 
In line 112  			//read the header 
In line 115  				//try to read the header... 
In line 123  					//could not read header, file is empty 
In line 136  		/// <summary> 
In line 137  		/// Open a DBF file or create a new one. 
In line 138  		/// </summary> 
In line 139  		/// <param name="sPath">Full path to the file.</param> 
In line 140  		/// <param name="mode"></param> 
In line 147  		/// <summary> 
In line 148  		/// Creates a new DBF 4 file. If file already exists an exception is thrown. Use Open() function to Open/Create new file with more options. 
In line 149  		/// </summary> 
In line 150  		/// <param name="sPath"></param> 
In line 157  		/// <summary> 
In line 158  		/// Update header info, flush buffers and close streams. You should always call this method when you are done with a DBF file. 
In line 159  		/// </summary> 
In line 162  			//try to update the header if it has changed 
In line 163  			//------------------------------------------ 
In line 167  			//Empty header... 
In line 168  			//-------------------------------- 
In line 172  			//reset current record index 
In line 173  			//-------------------------------- 
In line 176  			//Close streams... 
In line 177  			//-------------------------------- 
In line 190  			//set streams to null 
In line 191  			//-------------------------------- 
In line 198  		/// <summary> 
In line 199  		/// Read next record and fill data into parameter oFillRecord. Returns true if a record was read, otherwise false. 
In line 200  		/// </summary> 
In line 201  		/// <param name="oFillRecord"></param> 
In line 202  		/// <returns></returns> 
In line 205  			//check if we can fill this record with data. it must match record size specified by header and number of columns. 
In line 206  			//we are not checking whether it comes from another DBF file or not, we just need the same structure. Allow flexibility but be safe. 
In line 214  			//DBF file reader can be null if stream is not readable... 
In line 221  			//read next record... 
In line 227  					//zero based index! set before incrementing count. 
In line 238  		/// <summary> 
In line 239  		/// Tries to read a record and returns a new record object or null if nothing was read. 
In line 240  		/// </summary> 
In line 241  		/// <returns></returns> 
In line 244  			//create a new record and fill it. 
In line 250  		/// <summary> 
In line 251  		/// Reads a record specified by index into oFillRecord object. You can use this method  
In line 252  		/// to read in and process records without creating and discarding record objects. 
In line 253  		/// Note that you should check that your stream is not forward-only! If you have a forward only stream, use ReadNext() functions. 
In line 254  		/// </summary> 
In line 255  		/// <param name="index">Zero based record index.</param> 
In line 256  		/// <param name="oFillRecord">Record object to fill, must have same size and number of fields as thid DBF file header!</param> 
In line 257  		/// <remarks> 
In line 258  		/// <returns>True if read a record was read, otherwise false. If you read end of file false will be returned and oFillRecord will NOT be modified!</returns> 
In line 259  		/// The parameter record (oFillRecord) must match record size specified by the header and number of columns as well. 
In line 260  		/// It does not have to come from the same header, but it must match the structure. We are not going as far as to check size of each field. 
In line 261  		/// The idea is to be flexible but safe. It's a fine balance, these two are almost always at odds. 
In line 262  		/// </remarks> 
In line 265  			//check if we can fill this record with data. it must match record size specified by header and number of columns. 
In line 266  			//we are not checking whether it comes from another DBF file or not, we just need the same structure. Allow flexibility but be safe. 
In line 274  			//DBF file reader can be null if stream is not readable... 
In line 281  			//move to the specified record, note that an exception will be thrown is stream is not seekable!  
In line 282  			//This is ok, since we provide a function to check whether the stream is seekable.  
In line 285  			//check whether requested record exists. Subtract 1 from file length (there is a terminating character 1A at the end of the file) 
In line 286  			//so if we hit end of file, there are no more records, so return false; 
In line 290  			//move to record and read 
In line 293  			//read the record 
In line 301  		/// <summary> 
In line 302  		/// Reads a record specified by index. This method requires the stream to be able to seek to position.  
In line 303  		/// If you are using a http stream, or a stream that can not stream, use ReadNext() methods to read in all records. 
In line 304  		/// </summary> 
In line 305  		/// <param name="index">Zero based index.</param> 
In line 306  		/// <returns>Null if record can not be read, otherwise returns a new record.</returns> 
In line 309  			//create a new record and fill it. 
In line 315  		/// <summary> 
In line 316  		/// Write a record to file. If RecordIndex is present, record will be updated, otherwise a new record will be written. 
In line 317  		/// Header will be output first if this is the first record being writen to file.  
In line 318  		/// This method does not require stream seek capability to add a new record. 
In line 319  		/// </summary> 
In line 320  		/// <param name="orec"></param> 
In line 323  			//if header was never written, write it first, then output the record 
In line 327  			//if this is a new record (RecordIndex should be -1 in that case) 
In line 332  					//calculate number of records in file. do not rely on header's RecordCount property since client can change that value. 
In line 333  					//also note that some DBF files do not have ending 0x1A byte, so we subtract 1 and round off  
In line 334  					//instead of just cast since cast would just drop decimals. 
In line 345  					//we can not position this stream, just write out the new record. 
In line 362  		/// <summary> 
In line 363  		/// Update a record. RecordIndex (zero based index) must be more than -1, otherwise an exception is thrown. 
In line 364  		/// You can also use Write method which updates a record if it has RecordIndex or adds a new one if RecordIndex == -1. 
In line 365  		/// RecordIndex is set automatically when you call any Read() methods on this class. 
In line 366  		/// </summary> 
In line 367  		/// <param name="orec"></param> 
In line 370  			//if header was never written, write it first, then output the record 
In line 374  			//Check if record has an index 
In line 378  			//Check if this record matches record size specified by header and number of columns.  
In line 379  			//Client can pass a record from another DBF that is incompatible with this one and that would corrupt the file. 
In line 387  			//DBF file writer can be null if stream is not writable to... 
In line 394  			//move to the specified record, note that an exception will be thrown if stream is not seekable!  
In line 395  			//This is ok, since we provide a function to check whether the stream is seekable.  
In line 398  			//check whether we can seek to this position. Subtract 1 from file length (there is a terminating character 1A at the end of the file) 
In line 399  			//so if we hit end of file, there are no more records, so return false; 
In line 403  			//move to record start 
In line 406  			//write 
In line 411  		/// <summary> 
In line 412  		/// Save header to file. Normally, you do not have to call this method, header is saved  
In line 413  		/// automatically and updated when you close the file (if it changed). 
In line 414  		/// </summary> 
In line 417  			//update header if possible 
In line 418  			//-------------------------------- 
In line 429  					//if stream can not seek, then just write it out and that's it. 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cdb\FastDBF\DbfHeader.cs  for analysis => 
In line 8  	/// <summary> 
In line 9  	/// This class represents a DBF IV file header. 
In line 10  	/// </summary> 
In line 11  	///  
In line 12  	/// <remarks> 
In line 13  	/// DBF files are really wasteful on space but this legacy format lives on because it's really really simple.  
In line 14  	/// It lacks much in features though. 
In line 15  	///  
In line 16  	///  
In line 17  	/// Thanks to Erik Bachmann for providing the DBF file structure information!! 
In line 18  	/// http://www.clicketyclick.dk/databases/xbase/format/dbf.html 
In line 19  	///  
In line 20  	///           _______________________  _______ 
In line 21  	/// 00h /   0| Version number      *1|  ^ 
In line 22  	///          |-----------------------|  | 
In line 23  	/// 01h /   1| Date of last update   |  | 
In line 24  	/// 02h /   2|      YYMMDD        *21|  | 
In line 25  	/// 03h /   3|                    *14|  | 
In line 26  	///          |-----------------------|  | 
In line 27  	/// 04h /   4| Number of records     | Record 
In line 28  	/// 05h /   5| in data file          | header 
In line 29  	/// 06h /   6| ( 32 bits )        *14|  | 
In line 30  	/// 07h /   7|                       |  | 
In line 31  	///          |-----------------------|  | 
In line 32  	/// 08h /   8| Length of header   *14|  | 
In line 33  	/// 09h /   9| structure ( 16 bits ) |  | 
In line 34  	///          |-----------------------|  | 
In line 35  	/// 0Ah /  10| Length of each record |  | 
In line 36  	/// 0Bh /  11| ( 16 bits )     *2 *14|  | 
In line 37  	///          |-----------------------|  | 
In line 38  	/// 0Ch /  12| ( Reserved )        *3|  | 
In line 39  	/// 0Dh /  13|                       |  | 
In line 40  	///          |-----------------------|  | 
In line 41  	/// 0Eh /  14| Incomplete transac.*12|  | 
In line 42  	///          |-----------------------|  | 
In line 43  	/// 0Fh /  15| Encryption flag    *13|  | 
In line 44  	///          |-----------------------|  | 
In line 45  	/// 10h /  16| Free record thread    |  | 
In line 46  	/// 11h /  17| (reserved for LAN     |  | 
In line 47  	/// 12h /  18|  only )               |  | 
In line 48  	/// 13h /  19|                       |  | 
In line 49  	///          |-----------------------|  | 
In line 50  	/// 14h /  20| ( Reserved for        |  |            _        |=======================| ______ 
In line 51  	///          |   multi-user dBASE )  |  |           / 00h /  0| Field name in ASCII   |  ^ 
In line 52  	///          : ( dBASE III+ - )      :  |          /          : (terminated by 00h)   :  | 
In line 53  	///          :                       :  |         |           |                       |  | 
In line 54  	/// 1Bh /  27|                       |  |         |   0Ah / 10|                       |  | 
In line 55  	///          |-----------------------|  |         |           |-----------------------| For 
In line 56  	/// 1Ch /  28| MDX flag (dBASE IV)*14|  |         |   0Bh / 11| Field type (ASCII) *20| each 
In line 57  	///          |-----------------------|  |         |           |-----------------------| field 
In line 58  	/// 1Dh /  29| Language driver     *5|  |        /    0Ch / 12| Field data address    |  | 
In line 59  	///          |-----------------------|  |       /             |                     *6|  | 
In line 60  	/// 1Eh /  30| ( Reserved )          |  |      /              | (in memory !!!)       |  | 
In line 61  	/// 1Fh /  31|                     *3|  |     /       0Fh / 15| (dBASE III+)          |  | 
In line 62  	///          |=======================|__|____/                |-----------------------|  |  - 
In line 63  	/// 20h /  32|                       |  |  ^          10h / 16| Field length       *22|  |   | 
In line 64  	///          |- - - - - - - - - - - -|  |  |                  |-----------------------|  |   | *7 
In line 65  	///          |                    *19|  |  |          11h / 17| Decimal count      *23|  |   | 
In line 66  	///          |- - - - - - - - - - - -|  |  Field              |-----------------------|  |  - 
In line 67  	///          |                       |  | Descriptor  12h / 18| ( Reserved for        |  | 
In line 68  	///          :. . . . . . . . . . . .:  |  |array     13h / 19|   multi-user dBASE)*18|  | 
In line 69  	///          :                       :  |  |                  |-----------------------|  | 
In line 70  	///       n  |                       |__|__v_         14h / 20| Work area ID       *16|  | 
In line 71  	///          |-----------------------|  |    \                |-----------------------|  | 
In line 72  	///       n+1| Terminator (0Dh)      |  |     \       15h / 21| ( Reserved for        |  | 
In line 73  	///          |=======================|  |      \      16h / 22|   multi-user dBASE )  |  | 
In line 74  	///       m  | Database Container    |  |       \             |-----------------------|  | 
In line 75  	///          :                    *15:  |        \    17h / 23| Flag for SET FIELDS   |  | 
In line 76  	///          :                       :  |         |           |-----------------------|  | 
In line 77  	///     / m+263                      |  |         |   18h / 24| ( Reserved )          |  | 
In line 78  	///          |=======================|__v_ ___    |           :                       :  | 
In line 79  	///          :                       :    ^       |           :                       :  | 
In line 80  	///          :                       :    |       |           :                       :  | 
In line 81  	///          :                       :    |       |   1Eh / 30|                       |  | 
In line 82  	///          | Record structure      |    |       |           |-----------------------|  | 
In line 83  	///          |                       |    |        \  1Fh / 31| Index field flag    *8|  | 
In line 84  	///          |                       |    |         \_        |=======================| _v_____ 
In line 85  	///          |                       | Records 
In line 86  	///          |-----------------------|    | 
In line 87  	///          |                       |    |          _        |=======================| _______ 
In line 88  	///          |                       |    |         / 00h /  0| Record deleted flag *9|  ^ 
In line 89  	///          |                       |    |        /          |-----------------------|  | 
In line 90  	///          |                       |    |       /           | Data               *10|  One 
In line 91  	///          |                       |    |      /            : (ASCII)            *17: record 
In line 92  	///          |                       |____|_____/             |                       |  | 
In line 93  	///          :                       :    |                   |                       | _v_____ 
In line 94  	///          :                       :____|_____              |=======================| 
In line 95  	///          :                       :    | 
In line 96  	///          |                       |    | 
In line 97  	///          |                       |    | 
In line 98  	///          |                       |    | 
In line 99  	///          |                       |    | 
In line 100  	///          |                       |    | 
In line 101  	///          |=======================|    | 
In line 102  	///          |__End_of_File__________| ___v____  End of file ( 1Ah )  *11 
In line 103  	///  
In line 104  	/// </remarks> 
In line 107  		/// <summary> 
In line 108  		/// Header file descriptor size is 33 bytes (32 bytes + 1 terminator byte), followed by column metadata which is 32 bytes each. 
In line 109  		/// </summary> 
In line 112  		/// <summary> 
In line 113  		/// Field or DBF Column descriptor is 32 bytes long. 
In line 114  		/// </summary> 
In line 117  		//type of the file, must be 03h 
In line 120  		/// <summary> 
In line 121  		/// mEmptyRecord is an array used to clear record data in CDbf4Record. 
In line 122  		/// This is shared by all record objects, used to speed up clearing fields or entire record. 
In line 123  		/// <seealso cref="EmptyDataRecord"/> 
In line 124  		/// </summary> 
In line 127  		//Date the file was last updated. 
In line 129  		//DBF fields/columns 
In line 131  		private ushort mHeaderLength = FileDescriptorSize; //empty header is 33 bytes long. Each column adds 32 bytes. 
In line 133  		//indicates whether header columns can be modified! 
In line 135  		/// <summary> 
In line 136  		/// When object is modified dirty flag is set. 
In line 137  		/// </summary> 
In line 141  		private int mRecordLength = 1; //start with 1 because the first byte is a delete flag 
In line 155  		/// <summary> 
In line 156  		/// Specify initial column capacity. 
In line 157  		/// </summary> 
In line 158  		/// <param name="nInitialFields"></param> 
In line 164  		/// <summary> 
In line 165  		/// Gets header length. 
In line 166  		/// </summary> 
In line 169  		/// <summary> 
In line 170  		/// Look up a column index by name. Note that this is case insensitive and this implementation does not do any optmizations on the lookup. 
In line 171  		/// We simply look for the column by checking every one from first to last until found or -1 on not found.  
In line 172  		/// String.Compare() function is used for comparisons. 
In line 173  		/// </summary> 
In line 174  		/// <param name="sName"></param> 
In line 175  		/// <returns>Index or -1 if not found.</returns> 
In line 178  		/// <summary> 
In line 179  		/// Returns column at specified index. Index is 0 based. 
In line 180  		/// </summary> 
In line 181  		/// <param name="nIndex">Zero based index.</param> 
In line 182  		/// <returns></returns> 
In line 185  		/// <summary> 
In line 186  		/// Returns an empty data record. This is used to clear columns  
In line 187  		/// </summary> 
In line 188  		/// <remarks> 
In line 189  		/// The reason we put this in the header class is because it allows us to use the CDbf4Record class in two ways. 
In line 190  		/// 1. we can create one instance of the record and reuse it to write many records quickly clearing the data array by bitblting to it. 
In line 191  		/// 2. we can create many instances of the record (a collection of records) and have only one copy of this empty dataset for all of them. 
In line 192  		///    If we had put it in the Record class then we would be taking up twice as much space unnecessarily. The empty record also fits the model 
In line 193  		///    and everything is neatly encapsulated and safe. 
In line 194  		///  
In line 195  		/// </remarks> 
In line 201  		/// <summary> 
In line 202  		/// Returns Number of columns in this dbf header. 
In line 203  		/// </summary> 
In line 206  		/// <summary> 
In line 207  		/// Size of one record in bytes. All fields + 1 byte delete flag. 
In line 208  		/// </summary> 
In line 211  		/// <summary> 
In line 212  		/// Get/Set number of records in the DBF. 
In line 213  		/// </summary> 
In line 214  		/// <remarks> 
In line 215  		/// The reason we allow client to set RecordCount is beause in certain streams  
In line 216  		/// like internet streams we can not update record count as we write out records, we have to set it in advance, 
In line 217  		/// so client has to be able to modify this property. 
In line 218  		/// </remarks> 
In line 225  				mIsDirty = true; //set the dirty bit 
In line 229  		/// <summary> 
In line 230  		/// Get/set whether this header is read only or can be modified. When you create a CDbfRecord  
In line 231  		/// object and pass a header to it, CDbfRecord locks the header so that it can not be modified any longer. 
In line 232  		/// in order to preserve DBF integrity. 
In line 233  		/// </summary> 
In line 236  		/// <summary> 
In line 237  		/// Returns true when this object is modified after read or write. 
In line 238  		/// </summary> 
In line 241  		/// <summary> 
In line 242  		/// Add a new column to the DBF header. 
In line 243  		/// </summary> 
In line 244  		/// <param name="oNewCol"></param> 
In line 247  			//throw exception if the header is locked 
In line 251  			//since we are breaking the spec rules about max number of fields, we should at least  
In line 252  			//check that the record length stays within a number that can be recorded in the header! 
In line 253  			//we have 2 unsigned bytes for record length for a maximum of 65535. 
In line 257  			//add the column 
In line 260  			//update offset bits, record and header lengths 
In line 265  			//clear empty record 
In line 268  			//set dirty bit 
In line 272  		/// <summary> 
In line 273  		/// Create and add a new column with specified name and type. 
In line 274  		/// </summary> 
In line 275  		/// <param name="sName"></param> 
In line 276  		/// <param name="type"></param> 
In line 282  		/// <summary> 
In line 283  		/// Create and add a new column with specified name, type, length, and decimal precision. 
In line 284  		/// </summary> 
In line 285  		/// <param name="sName">Field name. Uniqueness is not enforced.</param> 
In line 286  		/// <param name="type"></param> 
In line 287  		/// <param name="nLength">Length of the field including decimal point and decimal numbers</param> 
In line 288  		/// <param name="nDecimals">Number of decimal places to keep.</param> 
In line 294  		/// <summary> 
In line 295  		/// Remove column from header definition. 
In line 296  		/// </summary> 
In line 297  		/// <param name="nIndex"></param> 
In line 300  			//throw exception if the header is locked 
In line 311  			//if you remove a column offset shift for each of the columns  
In line 312  			//following the one removed, we need to update those offsets. 
In line 317  			//clear the empty record 
In line 320  			//set dirty bit 
In line 324  		/// <summary> 
In line 325  		/// Finds a column index by searching sequentially through the list. Case is ignored. Returns -1 if not found. 
In line 326  		/// </summary> 
In line 327  		/// <param name="sName">Column name</param> 
In line 328  		/// <returns>column index (0 based) or -1 if not found.</returns> 
In line 339  		/// <summary> 
In line 340  		/// Use this method with caution. Headers are locked for a reason, to prevent DBF from becoming corrupt. 
In line 341  		/// </summary> 
In line 347  		/// <summary> 
In line 348  		/// Encoding must be ASCII for this binary writer. 
In line 349  		/// </summary> 
In line 350  		/// <param name="writer"></param> 
In line 351  		/// <remarks> 
In line 352  		/// See class remarks for DBF file structure. 
In line 353  		/// </remarks> 
In line 356  			//write the header 
In line 357  			// write the output file type. 
In line 360  			//Update date format is YYMMDD, which is different from the column Date type (YYYYDDMM) 
In line 365  			// write the number of records in the datafile. (32 bit number, little-endian unsigned) 
In line 368  			// write the length of the header structure. 
In line 371  			// write the length of a record 
In line 374  			// write the reserved bytes in the header 
In line 377  		        // -----mod by wisechen 
In line 378                  if (i == 17) // 29-й байт заголовка - кодовая страница 
In line 385                          writer.Write((byte)0); // кодировка нам не известна - пишем 0 
In line 387                  //---original was 20 bytes 0: 
In line 388                  //   writer.Write((byte)0); 
In line 391  			// write all of the header records 
In line 392  			var byteReserved = new byte[14]; //these are initialized to 0 by default. 
In line 398  				// write the field type 
In line 401  				// write the field data address, offset from the start of the record. 
In line 404  				// write the length of the field. 
In line 405  				// if char field is longer than 255 bytes, then we use the decimal field as part of the field length. 
In line 408  					//treat decimal count as high byte of field length, this extends char field max to 65535 
In line 413  					// write the length of the field. 
In line 416  					// write the decimal count. 
In line 420  				// write the reserved bytes. 
In line 424  			// write the end of the field definitions marker 
In line 428  			//clear dirty bit 
In line 431  			//lock the header so it can not be modified any longer,  
In line 432  			//we could actually postpond this until first record is written! 
In line 437  		/// <summary> 
In line 438  		/// Read header data, make sure the stream is positioned at the start of the file to read the header otherwise you will get an exception. 
In line 439  		/// When this function is done the position will be the first record. 
In line 440  		/// </summary> 
In line 441  		/// <param name="reader"></param> 
In line 444  			// type of reader. 
In line 450  			// parse the update date information. 
In line 456  			// read the number of records. 
In line 459  			// read the length of the header structure. 
In line 462  			// read the length of a record 
In line 465  			// skip the reserved bytes in the header. 
In line 468  			// calculate the number of Fields in the header 
In line 471  			//offset from start of record, start at 1 because that's the delete flag. 
In line 474  			// read all of the header records 
In line 478  				// read the field name				 
In line 486  				//read the field type 
In line 489  				// read the field data address, offset from the start of the record. 
In line 492  				//read the field length in bytes 
In line 493  				//if field type is char, then read FieldLength and Decimal count as one number to allow char fields to be 
In line 494  				//longer than 256 bytes (ASCII char). This is the way Clipper and FoxPro do it, and there is really no downside 
In line 495  				//since for char fields decimal count should be zero for other versions that do not support this extended functionality. 
In line 496  				//----------------------------------------------------------------------------------------------------------------------- 
In line 501  					//treat decimal count as high byte 
In line 506  					//read field length as an unsigned byte. 
In line 509  					//read decimal count as one byte 
In line 513  				//read the reserved bytes. 
In line 516  				//Create and add field to collection 
In line 519  				// add up address information, you can not trust the address recorded in the DBF file... 
In line 523  			// Last byte is a marker for the end of the field definitions. 
In line 526  			//read any extra header bytes...move to first record 
In line 527  			//equivalent to reader.BaseStream.Seek(mHeaderLength, SeekOrigin.Begin) except that we are not using the seek function since 
In line 528  			//we need to support streams that can not seek like web connections. 
In line 533  			//if the stream is not forward-only, calculate number of records using file size,  
In line 534  			//sometimes the header does not contain the correct record count 
In line 535  			//if we are reading the file from the web, we have to use ReadNext() functions anyway so 
In line 536  			//Number of records is not so important and we can trust the DBF to have it stored correctly. 
In line 539  				//notice here that we subtract file end byte which is supposed to be 0x1A, 
In line 540  				//but some DBF files are incorrectly written without this byte, so we round off to nearest integer. 
In line 541  				//that gives a correct result with or without ending byte. 
In line 546  			//lock header since it was read from a file. we don't want it modified because that would corrupt the file. 
In line 547  			//user can override this lock if really necessary by calling UnLock() method. 
In line 550  			//clear dirty bit 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cdb\FastDBF\DbfRecord.cs  for analysis => 
In line 9  	/// <summary> 
In line 10  	/// Use this class to create a record and write it to a dbf file. You can use one record object to write all records!! 
In line 11  	/// It was designed for this kind of use. You can do this by clearing the record of all data  
In line 12  	/// (call Clear() method) or setting values to all fields again, then write to dbf file.  
In line 13  	/// This eliminates creating and destroying objects and optimizes memory use. 
In line 14  	///  
In line 15  	/// Once you create a record the header can no longer be modified, since modifying the header would make a corrupt DBF file. 
In line 16  	/// </summary> 
In line 19  		//array used to clear decimals, we can clear up to 40 decimals which is much more than is allowed under DBF spec anyway. 
In line 23  		/// <summary> 
In line 24  		/// Dbf data are a mix of ASCII characters and binary, which neatly fit in a byte array. 
In line 25  		/// BinaryWriter would esentially perform the same conversion using the same Encoding class. 
In line 26  		/// </summary> 
In line 29  		/// <summary> 
In line 30  		/// Empty Record array reference used to clear fields quickly (or entire record). 
In line 31  		/// </summary> 
In line 34  		/// <summary> 
In line 35  		/// Header provides information on all field types, sizes, precision and other useful information about the DBF. 
In line 36  		/// </summary> 
In line 40  		/// <summary> 
In line 41  		/// Specifies whether we allow the decimal portion of numbers to be truncated.  
In line 42  		/// If false and decimal digits overflow the field, an exception is thrown. 
In line 43  		/// </summary> 
In line 46  		/// <summary> 
In line 47  		/// Specifies whether we allow the integer portion of numbers to be truncated. 
In line 48  		/// If false and integer digits overflow the field, an exception is thrown. 
In line 49  		/// </summary> 
In line 52  		/// <summary> 
In line 53  		/// Specifies whether we allow strings to be truncated. If false and string is longer than we can fit in the field, an exception is thrown. 
In line 54  		/// </summary> 
In line 57  		/// <summary> 
In line 58  		/// Zero based record index. -1 when not set, new records for example. 
In line 59  		/// </summary> 
In line 62  		/// <summary> 
In line 63  		/// Column Name to Column Index map 
In line 64  		/// </summary> 
In line 67  		/// <summary> 
In line 68  		///  
In line 69  		/// </summary> 
In line 70  		/// <param name="oHeader">Dbf Header will be locked once a record is created  
In line 71  		/// since the record size is fixed and if the header was modified it would corrupt the DBF file.</param> 
In line 77  			//create a buffer to hold all record data. We will reuse this buffer to write all data to the file. 
In line 86  		/// <summary> 
In line 87  		/// Set string data to a column, if the string is longer than specified column length it will be truncated! 
In line 88  		/// If dbf column type is not a string, input will be treated as dbf column  
In line 89  		/// type and if longer than length an exception will be thrown. 
In line 90  		/// </summary> 
In line 91  		/// <param name="nColIndex"></param> 
In line 92  		/// <returns></returns> 
In line 100  				// 
In line 101  				//if an empty value is passed, we just clear the data, and leave it blank. 
In line 102  				//note: test have shown that testing for null and checking length is faster than comparing to "" empty str :) 
In line 103  				//------------------------------------------------------------------------------------------------------------ 
In line 106  					//this is like NULL data, set it to empty. i looked at SAS DBF output when a null value exists  
In line 107  					//and empty data are output. we get the same result, so this looks good. 
In line 112  					//set values according to data type: 
In line 113  					//------------------------------------------------------------- 
In line 119  						//BlockCopy copies bytes.  First clear the previous value, then set the new one. 
In line 127  							//integers 
In line 128  							//---------------------------------- 
In line 130  							//throw an exception if integer overflow would occur 
In line 134  							//clear all numbers, set to [space]. 
In line 135  							//----------------------------------------------------- 
In line 138  							//set integer part, CAREFUL not to overflow buffer! (truncate instead) 
In line 139  							//----------------------------------------------------------------------- 
In line 145  							//TODO: we can improve perfomance here by not using temp char arrays cDec and cNum, simply direcly copy from source string using AsciiEncoder! 
In line 147  							//break value down into integer and decimal portions 
In line 148  							//-------------------------------------------------------------------------- 
In line 149  							int nidxDecimal = value.IndexOf('.'); //index where the decimal point occurs 
In line 150  							char[] cDec = null; //decimal portion of the number 
In line 151  							char[] cNum = null; //integer portion 
In line 158  								//throw an exception if decimal overflow would occur 
In line 165  							//throw an exception if integer overflow would occur 
In line 169  							//clear all decimals, set to 0. 
In line 170  							//----------------------------------------------------- 
In line 173  							//clear all numbers, set to [space]. 
In line 176  							//set decimal numbers, CAREFUL not to overflow buffer! (truncate instead) 
In line 177  							//----------------------------------------------------------------------- 
In line 184  							//set integer part, CAREFUL not to overflow buffer! (truncate instead) 
In line 185  							//----------------------------------------------------------------------- 
In line 189  							//set decimal point 
In line 190  							//----------------------------------------------------------------------- 
In line 196  						//note this is a binary Integer type! 
In line 197  						//---------------------------------------------- 
In line 199  						//TODO: maybe there is a better way to copy 4 bytes from int to byte array. Some memory function or something. 
In line 205  						//copy 10 digits... 
In line 206  						//TODO: implement MEMO 
In line 222  						//try to parse out date value using Date.Parse() function, then set the value 
In line 244  		/// <summary> 
In line 245  		/// Set string data to a column, if the string is longer than specified column length it will be truncated! 
In line 246  		/// If dbf column type is not a string, input will be treated as dbf column  
In line 247  		/// type and if longer than length an exception will be thrown. 
In line 248  		/// </summary> 
In line 249  		/// <param name="nColName"></param> 
In line 250  		/// <returns></returns> 
In line 269  		/// <summary> 
In line 270  		/// Gets/sets a zero based record index. This information is not directly stored in DBF.  
In line 271  		/// It is the location of this record within the DBF.  
In line 272  		/// </summary> 
In line 273  		/// <remarks> 
In line 274  		/// This property is managed from outside this object, 
In line 275  		/// CDbfFile object updates it when records are read. The reason we don't set it in the Read()  
In line 276  		/// function within this object is that the stream can be forward-only so the Position property  
In line 277  		/// is not available and there is no way to figure out what index the record was unless you  
In line 278  		/// count how many records were read, and that's exactly what CDbfFile does. 
In line 279  		/// </remarks> 
In line 282  		/// <summary> 
In line 283  		/// Returns/sets flag indicating whether this record was tagged deleted.  
In line 284  		/// </summary> 
In line 285  		/// <remarks>Use CDbf4File.Compress() function to rewrite dbf removing records flagged as deleted.</remarks> 
In line 286  		/// <seealso cref="CDbf4File.Compress() function"/> 
In line 293  		/// <summary> 
In line 294  		/// Specifies whether strings can be truncated. If false and string is longer than can fit in the field, an exception is thrown. 
In line 295  		/// Default is True. 
In line 296  		/// </summary> 
In line 299  		/// <summary> 
In line 300  		/// Specifies whether to allow the decimal portion of numbers to be truncated.  
In line 301  		/// If false and decimal digits overflow the field, an exception is thrown. Default is false. 
In line 302  		/// </summary> 
In line 305  		/// <summary> 
In line 306  		/// Specifies whether integer portion of numbers can be truncated. 
In line 307  		/// If false and integer digits overflow the field, an exception is thrown.  
In line 308  		/// Default is False. 
In line 309  		/// </summary> 
In line 312  		/// <summary> 
In line 313  		/// Returns header object associated with this record. 
In line 314  		/// </summary> 
In line 317  		/// <summary> 
In line 318  		/// Gets column count from header. 
In line 319  		/// </summary> 
In line 322  		/// <summary> 
In line 323  		/// Get date value. 
In line 324  		/// </summary> 
In line 325  		/// <param name="nColIndex"></param> 
In line 326  		/// <returns></returns> 
In line 338  		/// <summary> 
In line 339  		/// Get date value. 
In line 340  		/// </summary> 
In line 341  		/// <param name="nColIndex"></param> 
In line 342  		/// <returns></returns> 
In line 350  				//Format date and set value, date format is like this: yyyyMMdd 
In line 351  				//------------------------------------------------------------- 
In line 358  		/// <summary> 
In line 359  		/// Clears all data in the record. 
In line 360  		/// </summary> 
In line 367  		/// <summary> 
In line 368  		/// returns a string representation of this record. 
In line 369  		/// </summary> 
In line 370  		/// <returns></returns> 
In line 376  		/// <summary> 
In line 377  		/// Get column by index. 
In line 378  		/// </summary> 
In line 379  		/// <param name="index"></param> 
In line 380  		/// <returns></returns> 
In line 386  		/// <summary> 
In line 387  		/// Get column by name. 
In line 388  		/// </summary> 
In line 389  		/// <param name="index"></param> 
In line 390  		/// <returns></returns> 
In line 396  		/// <summary> 
In line 397  		/// Finds a column index by searching sequentially through the list. Case is ignored. Returns -1 if not found. 
In line 398  		/// </summary> 
In line 399  		/// <param name="sName">Column name.</param> 
In line 400  		/// <returns>Column index (0 based) or -1 if not found.</returns> 
In line 406  		/// <summary> 
In line 407  		/// Writes data to stream. Make sure stream is positioned correctly because we simply write out the data to it. 
In line 408  		/// </summary> 
In line 409  		/// <param name="osw"></param> 
In line 415  		/// <summary> 
In line 416  		/// Writes data to stream. Make sure stream is positioned correctly because we simply write out data to it, and clear the record. 
In line 417  		/// </summary> 
In line 418  		/// <param name="osw"></param> 
In line 426  		/// <summary> 
In line 427  		/// Read record from stream. Returns true if record read completely, otherwise returns false. 
In line 428  		/// </summary> 
In line 429  		/// <param name="obr"></param> 
In line 430  		/// <returns></returns> 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cdb\pab04cdb\Program.cs  for analysis => 
In line 0  /* 
In line 1  //------------------------------------------------------- 
In line 2   Подсистема    : Информационное обеспечение 
In line 3   Задача        : PAB04 
In line 4   Модуль        : PAB04CDB(program.cs) 
In line 5   Назначение    : Выгрузка dbf-файла из таблицы СУБД PostgreSQL 
In line 6   Язык          : C# (Microsoft Visual Studio 2013) 
In line 7   Программист   : Крупин А.Ю. 
In line 8   Дата          : июль 2020 
In line 9   Изменения     : 25.02.2022 Крупин А.Ю. При выгрузке обзоров возникала ошибка  
In line 10                              (для обзоров отсутвует столбец ctid  и данные пытались выгружаться "со смещением"). 
In line 11                              Исправлено в функции UnloadData.    
In line 12                   03.2023 Романов Д.Г. Доработал пустые блоки try-catch по результатам сканирования с помощью Soloar AppScreener 
In line 13  ------------------------------------------------------- 
In line 14  */ 
In line 1  //------------------------------------------------------- 
In line 29          /// имя файла протокола(во временной директории) 
In line 31          /// имя файла протокола (в фактической директории) 
In line 34          /// <summary> 
In line 35          /// расширение файла протокола(если не указан _fileLog) 
In line 36          /// </summary> 
In line 41          /// <summary> 
In line 42          /// название файла настроек используемое задачей 
In line 43          /// </summary> 
In line 48          /// <summary> 
In line 49          /// гриф файла протокола 
In line 50          /// </summary> 
In line 55              //                             параметры подключения:  
In line 56              string user = "";           // имя пользователя            
In line 57              string server = "";         // ODBC алиас для подключения 
In line 58                                          //-------- 
In line 59              string tableName = "";      // имя таблицы со схемой которую выгружаем   
In line 60              string table = "";          // имя таблицы без схемы 
In line 61              string schema = "";         // имя схемы  
In line 63              string DBFfilename = "";    // имя файла в который выгружаем данные 
In line 64              string dbRecordCount = "";  // количество записей в таблице БД 
In line 65              Encoding codePage = null;     // кодировка dbf-файла(866/cp866/1251/windows-1251) Остальные значения, указанные  в описании класса Encoding мы не используем 
In line 66              DbfFile dbfFile = null;     // dbf-файл в который выгружаем данные 
In line 86              string cp = pab0411lib.GetParam(args, "-c");      //переменная для формирования codePage 
In line 88              int records_portion_size;       //количество записей в порции 
In line 93              catch (Exception) // при некорректных параметрах выставляем "по умолчанию" 
In line 104                  string exePath = Path.GetDirectoryName(Assembly.GetEntryAssembly().Location);//Path.GetDirectoryName(Environment.GetCommandLineArgs()[0]); 
In line 116                  //перетаскиваем протокол во временную директорию 
In line 119                  //возможно тут нужно понизить гриф файла до грифа текущей сессии, НО  
In line 120                  //если его реально нет, то мы не сможем понизить его гриф. 
In line 122                  //понижаем гриф протокола во временной директории, чтобы гарантированно его удалить 
In line 129                      //если не смогли понизить гриф, быстрее всего файла нет 
In line 135                      File.Copy(_fileLog, _tempFileLog); //при копировании гриф файла повышается до грифа сессии 
In line 174                  //чтение данных из таблицы параметров (pab04e01) 
In line 212                  }//if (DBFfilename.Length == 0) 
In line 224                  int records_offset = 0;                 //количество уже выгруженных записей  
In line 227                  // считаем количество записей в выгружаемой таблице  
In line 229                  /*OdbcCommand*/ 
In line 235                  } //else Console.WriteLine("Нет данных для выгрузки "); 
In line 241                  // проверяем возможность порционной выгрузки (по наличию cid) 
In line 258                  if (!has_error)         //порционная Выгрузка 
In line 276                  else                    //выгрузка всей таблицы за 1 порцию 
In line 303              } //end of try catch 
In line 318          }// end of static void Main(string[] args) 
In line 329          /// <summary> 
In line 330          /// создание пустого dbf-файла на основе таблицы БД 
In line 331          /// </summary> 
In line 332          /// <param name="dbFfilename">полный путь к шаблону dbf-файла</param> 
In line 333          /// <param name="table_name">имя таблицы БД шаблон которой создается</param> 
In line 334          /// <returns>созданный шаблон переменная класса DbfFile</returns> 
In line 347              //информация о структуре. Оставим для отладки 
In line 348              //pab0411lib.ShowTableStruct(reader); 
In line 354               int[] colSize = new int[reader.FieldCount];// для ColSize short не хватило 
In line 375                           (reader.GetFieldType(i) == typeof(System.Int16)) ||     //smallint 
In line 376                           (reader.GetFieldType(i) == typeof(System.Int32))        //int4    
In line 380                      //В структуре DBF- файла нужно увеличить размерность на 1, на случай отрицательных значений. 
In line 381                      //Однако для совместимости с предыдущими версиями ПО обмена мы этого не делаем 
In line 382                      //fieldPrecision[i]++;        //+1 знак под минус, если он есть 
In line 385                          fieldPrecision[i]++;    //+1 знак под запятую, но только если есть дробная часть  
In line 387                      // FP 2.6 не дает создавать файлы с числовым полем больше 20 знаков,  
In line 388                      // но это не мешает ему их открывать. Из соображений совместимости урезаем до 20ти  
In line 398                      // для строковых реквизитов длиной больше 255 FieldPrecision начинает отдавать некорректный размер 
In line 420                  } //end of try catch 
In line 421              }//end for (int i = 0; i < reader.FieldCount; i++) 
In line 425          }// end of private static DbfFile СreateTemplate(string dbFfilename, String table_name ) 
In line 426          // -------------------------------------------------------------- 
In line 427          // Функция       : UnloadData 
In line 428          // Назначение    : Выгрузка порции данных в dbf-файл 
In line 429          // Параметры     : myDataReader  - курсор с данными 
In line 430          //                 dbfFile       - файл в который происходит выгрузка 
In line 431          //                 recordOffset - порядковый номер записи, с которой начинается выгрузка 
In line 432          // -------------------------------------------------------------- 
In line 433          /// <returns> количество выгруженных строк</returns> 
In line 437              //int rez = -1; 
In line 438              int recCountUnloaded = recordOffset;        //количество выгруженных строк 
In line 439              string rowid = "";//сохраняем cid записи если он есть 
In line 442              while (myDataReader.Read())//пока есть записи в таблице  
In line 454                  for (int i = 0; i < myDataReader.FieldCount; i++)//цикл по значениям полей 
In line 456                      //if (!isPostgres || (isPostgres && !myDataReader.GetName(i).Equals("ctid", StringComparison.InvariantCultureIgnoreCase))) 
In line 459                      else// для таблиц колонки сдвинуты относительно dbf- из за ctid!!!! 
In line 469                                      curRec[dbfCurField] = "";// колонки сдвинуты относительно dbf- из за ctid!!!! 
In line 502                  }//for (int i = 0; i < myDataReader.FieldCount; i++) 
In line 513              }//while (myDataReader.Read()) 
In line 516          }// end of UnloadData 
In line 518      }// end of class Program 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cdc\pab04cdc\Program.cs  for analysis => 
In line 0  /* 
In line 1  //------------------------------------------------------- 
In line 2   Подсистема    : Информационное обеспечение 
In line 3   Задача        : PAB04 
In line 4   Модуль        : PAB04CDC(program.cs)  
In line 5   Назначение    : Установка мандатных атрибутов записей таблицы СУБД PostgreSQL 
In line 6   Язык          : C# (Microsoft Visual Studio 2013) 
In line 7   Программист   : Романов Д.Г. 
In line 8   Дата          : июль 2022 
In line 9   Изменения     :  
In line 10  ------------------------------------------------------- 
In line 11  */ 
In line 1  //------------------------------------------------------- 
In line 26          /// <summary> 
In line 27          /// название файла настроек используемое задачей 
In line 28          /// </summary> 
In line 30          /// имя файла протокола(во временной директории) 
In line 32          /// имя файла протокола (в фактической директории) 
In line 37          /// <summary> 
In line 38          /// гриф файла протокола 
In line 39          /// </summary> 
In line 42          /// <summary> 
In line 43          /// какое количество записей грузится за 1 запрос.  
In line 44          /// </summary> 
In line 49              // параметры подключения:  
In line 50              string user = ""; // имя пользователя            
In line 51              string server = ""; // ODBC алиас для подключения 
In line 52              //-------- 
In line 53              string tableName = ""; // имя таблицы БД которую выгружаем 
In line 55              /// <summary> 
In line 56              /// расширение файла протокола(если не указан _fileLog) 
In line 57              /// </summary> 
In line 60                  // кодировка dbf-файла(866/cp866/1251/windows-1251) Остальные значения, указанные  в описании 
In line 62              string dbfFileName = ""; // имя файла в который выгружаем данные 
In line 92                  //перетаскиваем протокол во временную директорию 
In line 96                  //возможно тут нужно понизить гриф файла до грифа текущей сессии, НО  
In line 97                  //если его реально нет, то мы не сможем понизить его гриф. 
In line 99                  //понижаем гриф протокола во временной директории, чтобы гарантированно его удалить 
In line 106                      //если не смогли понизить гриф, быстрее всего файла нет 
In line 112                      File.Copy(_fileLog, _tempFileLog); //при копировании гриф файла повышается до грифа сессии 
In line 116                  // сообщение об ошибке внутри WriteTest 
In line 117                  // не проверяем возможность записи в _fileLog, потому что при работе с грифом мы не сможем записать напрямую 
In line 138                  //чтение данных из таблицы параметров 
In line 157                  } //if (odbcTableReader.HasRows) 
In line 169                  //выводим все параметры в протокол  
In line 170                  pab0411lib.WriteLogHeader(_tempFileLog, server, /*user,*/ tableName, dbfFileName, codePage, _configPrizGrif, 
In line 201          } //end of main 
In line 217          } //end of private SetMacLabelPostgres 
In line 226          }//end of static void LoadSettings(string iniFile) 
In line 227      } //end of static class Program 
In line 228  } //namespace pab04 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\obj\Release\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs  for analysis => 
In file TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\obj\Release\TemporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs  for analysis => 
In file TemporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01caa\obj\Release\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs  for analysis => 
In file TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\obj\Release\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs  for analysis => 
In file TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\obj\Release\TemporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs  for analysis => 
In file TemporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab01\pab01cab\obj\Release\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs  for analysis => 
In file TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cab\pab04cab\Properties\AssemblyInfo.cs  for analysis => 
In line 4  // Управление общими сведениями о сборке осуществляется с помощью  
In line 5  // набора атрибутов. Измените значения этих атрибутов, чтобы изменить сведения, 
In line 6  // связанные со сборкой. 
In line 16  // Параметр ComVisible со значением FALSE делает типы в сборке невидимыми  
In line 17  // для COM-компонентов.  Если требуется обратиться к типу в этой сборке через  
In line 18  // COM, задайте атрибуту ComVisible значение TRUE для этого типа. 
In line 21  // Следующий GUID служит для идентификации библиотеки типов, если этот проект будет видимым для COM 
In line 24  // Сведения о версии сборки состоят из следующих четырех значений: 
In line 25  // 
In line 26  //      Основной номер версии 
In line 27  //      Дополнительный номер версии  
In line 28  //   Номер сборки 
In line 29  //      Редакция 
In line 30  // 
In line 31  // Можно задать все значения или принять номера сборки и редакции по умолчанию  
In line 32  // используя "*", как показано ниже: 
In line 33  // [assembly: AssemblyVersion("1.0.*")] 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cac\pab04cac\Properties\AssemblyInfo.cs  for analysis => 
In line 4  // Управление общими сведениями о сборке осуществляется с помощью  
In line 5  // набора атрибутов. Измените значения этих атрибутов, чтобы изменить сведения, 
In line 6  // связанные со сборкой. 
In line 16  // Параметр ComVisible со значением FALSE делает типы в сборке невидимыми  
In line 17  // для COM-компонентов.  Если требуется обратиться к типу в этой сборке через  
In line 18  // COM, задайте атрибуту ComVisible значение TRUE для этого типа. 
In line 21  // Следующий GUID служит для идентификации библиотеки типов, если этот проект будет видимым для COM 
In line 24  // Сведения о версии сборки состоят из следующих четырех значений: 
In line 25  // 
In line 26  //      Основной номер версии 
In line 27  //      Дополнительный номер версии  
In line 28  //   Номер сборки 
In line 29  //      Редакция 
In line 30  // 
In line 31  // Можно задать все значения или принять номера сборки и редакции по умолчанию  
In line 32  // используя "*", как показано ниже: 
In line 33  // [assembly: AssemblyVersion("1.0.*")] 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\pab04cda\Properties\AssemblyInfo.cs  for analysis => 
In line 4  // Управление общими сведениями о сборке осуществляется с помощью  
In line 5  // набора атрибутов. Измените значения этих атрибутов, чтобы изменить сведения, 
In line 6  // связанные со сборкой. 
In line 16  // Параметр ComVisible со значением FALSE делает типы в сборке невидимыми  
In line 17  // для COM-компонентов.  Если требуется обратиться к типу в этой сборке через  
In line 18  // COM, задайте атрибуту ComVisible значение TRUE для этого типа. 
In line 21  // Следующий GUID служит для идентификации библиотеки типов, если этот проект будет видимым для COM 
In line 24  // Сведения о версии сборки состоят из следующих четырех значений: 
In line 25  // 
In line 26  //      Основной номер версии 
In line 27  //      Дополнительный номер версии  
In line 28  //   Номер сборки 
In line 29  //      Редакция 
In line 30  // 
In line 31  // Можно задать все значения или принять номера сборки и редакции по умолчанию  
In line 32  // используя "*", как показано ниже: 
In line 33  // [assembly: AssemblyVersion("1.0.*")] 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cdb\pab04cdb\Properties\AssemblyInfo.cs  for analysis => 
In line 4  // Управление общими сведениями о сборке осуществляется с помощью  
In line 5  // набора атрибутов. Измените значения этих атрибутов, чтобы изменить сведения, 
In line 6  // связанные со сборкой. 
In line 16  // Параметр ComVisible со значением FALSE делает типы в сборке невидимыми  
In line 17  // для COM-компонентов.  Если требуется обратиться к типу в этой сборке через  
In line 18  // COM, задайте атрибуту ComVisible значение TRUE для этого типа. 
In line 21  // Следующий GUID служит для идентификации библиотеки типов, если этот проект будет видимым для COM 
In line 24  // Сведения о версии сборки состоят из следующих четырех значений: 
In line 25  // 
In line 26  //      Основной номер версии 
In line 27  //      Дополнительный номер версии  
In line 28  //   Номер сборки 
In line 29  //      Редакция 
In line 30  // 
In line 31  // Можно задать все значения или принять номера сборки и редакции по умолчанию  
In line 32  // используя "*", как показано ниже: 
In line 33  // [assembly: AssemblyVersion("1.0.*")] 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cdc\pab04cdc\Properties\AssemblyInfo.cs  for analysis => 
In line 3  // Управление общими сведениями о сборке осуществляется с помощью  
In line 4  // набора атрибутов. Измените значения этих атрибутов, чтобы изменить сведения, 
In line 5  // связанные со сборкой. 
In line 15  // Параметр ComVisible со значением FALSE делает типы в сборке невидимыми  
In line 16  // для COM-компонентов.  Если требуется обратиться к типу в этой сборке через  
In line 17  // COM, задайте атрибуту ComVisible значение TRUE для этого типа. 
In line 20  // Следующий GUID служит для идентификации библиотеки типов, если этот проект будет видимым для COM 
In line 23  // Сведения о версии сборки состоят из следующих четырех значений: 
In line 24  // 
In line 25  //      Основной номер версии 
In line 26  //      Дополнительный номер версии  
In line 27  //   Номер сборки 
In line 28  //      Редакция 
In line 29  // 
In line 30  // Можно задать все значения или принять номера сборки и редакции по умолчанию  
In line 31  // используя "*", как показано ниже: 
In line 32  // [assembly: AssemblyVersion("1.0.*")] 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cab\pab04cab\obj\x86\Release\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs  for analysis => 
In file TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cab\pab04cab\obj\x86\Release\TemporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs  for analysis => 
In file TemporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cab\pab04cab\obj\x86\Release\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs  for analysis => 
In file TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cac\pab04cac\obj\x86\Release\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs  for analysis => 
In file TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cac\pab04cac\obj\x86\Release\TemporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs  for analysis => 
In file TemporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cac\pab04cac\obj\x86\Release\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs  for analysis => 
In file TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\pab04cda\obj\x86\Release\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs  for analysis => 
In file TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\pab04cda\obj\x86\Release\TemporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs  for analysis => 
In file TemporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cda\pab04cda\obj\x86\Release\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs  for analysis => 
In file TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cdb\pab04cdb\obj\x86\Release\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs  for analysis => 
In file TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cdb\pab04cdb\obj\x86\Release\TemporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs  for analysis => 
In file TemporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cdb\pab04cdb\obj\x86\Release\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs  for analysis => 
In file TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cdc\pab04cdc\obj\x86\Release\TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs  for analysis => 
In file TemporaryGeneratedFile_036C0B5B-1481-4323-8D20-8F5ADCB23D92.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cdc\pab04cdc\obj\x86\Release\TemporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs  for analysis => 
In file TemporaryGeneratedFile_5937a670-0e60-4077-877b-f7221da3dda1.cs not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04cdc\pab04cdc\obj\x86\Release\TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs  for analysis => 
In file TemporaryGeneratedFile_E7A71F73-0F8D-4B9B-B56E-8E70B10BC5D3.cs not detected Сomment
==================================================================================================================
Search 33 file with extension *.cpp
==================================================================================================================
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\guard\eop01cda\eop01cda.cpp  for analysis => 
In line 0  //-------------------------------------------------------------------- 
In line 1  //  Моудль       : EOP01CDA.CPP 
In line 2  //  Назначение   : Установка грифа файла в СЗИ "Страж NT" 4.0 
In line 3  //  Язык         : C++ (Microsoft Visual Studio 2013) 
In line 4  //-------------------------------------------------------------------- 
In line 62  			// режим совместимости с СЗИ "СТРАЖ" 3.0 
In line 74  			// режим поддержки СЗИ "СТРАЖ" 4.0 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\guard\eop01cda\eop01lib.cpp  for analysis => 
In line 0  //-------------------------------------------------------------------- 
In line 1  //  Моудль       : EOP01LIB.CPP 
In line 2  //  Назначение   : Библиотека процедур 
In line 3  //  Язык         : C++ (Microsoft Visual Studio 2013) 
In line 4  //-------------------------------------------------------------------- 
In line 65  // нумерация начинается с '0' 
In line 84  	//  inc(i); 
In line 98  	unsigned int i;  // не слушать предупреждения компилятора про несоответствие типов со знаком и без знака 
In line 112  	int i;  // не слушать предупреждения компилятора про несоответствие типов со знаком и без знака 
In line 284  			//printf_1251("%s \n", e.what()); 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\guard\eop01cda\stdafx.cpp  for analysis => 
In line 0  // stdafx.cpp: исходный файл, содержащий только стандартные включаемые модули 
In line 1  // eop01cda.pch будет предкомпилированным заголовком 
In line 2  // stdafx.obj будет содержать предварительно откомпилированные сведения о типе 
In line 6  // TODO: Установите ссылки на любые требующиеся дополнительные заголовки в файле STDAFX.H 
In line 7  // , а не в данном файле 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\guard\eop01cdb\eop01cdb.cpp  for analysis => 
In line 0  //-------------------------------------------------------------------- 
In line 1  //  Моудль       : EOP01CDB.CPP 
In line 2  //  Назначение   : Утилита копирования файла в СЗИ "Страж NT" 4.0 
In line 3  //  Язык         : C++ (Microsoft Visual Studio 2013) 
In line 4  //  Изменение    : 05.2020 Романов Д.Г. Изменение алгоритма вычисления пути к файлу eop01cdc.exe 
In line 5  //-------------------------------------------------------------------- 
In line 31  		//printf("IsGuardInstalled=%i \n", IsGuardInstalled(MajorVersion, MinorVersion)); 
In line 32  		//printf("  MajorVersion=%i \n", MajorVersion); 
In line 33  		//printf("  MinorVersion=%i \n", MinorVersion); 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\guard\eop01cdb\eop01lib.cpp  for analysis => 
In line 0  //-------------------------------------------------------------------- 
In line 1  //  Моудль       : EOP01LIB.CPP 
In line 2  //  Назначение   : Библиотека процедур 
In line 3  //  Язык         : C++ (Microsoft Visual Studio 2013) 
In line 4  //-------------------------------------------------------------------- 
In line 65  // нумерация начинается с '0' 
In line 84  	//  inc(i); 
In line 98  	unsigned int i;  // не слушать предупреждения компилятора про несоответствие типов со знаком и без знака 
In line 112  	int i;  // не слушать предупреждения компилятора про несоответствие типов со знаком и без знака 
In line 284  			//printf_1251("%s \n", e.what()); 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\guard\eop01cdb\stdafx.cpp  for analysis => 
In line 0  // stdafx.cpp: исходный файл, содержащий только стандартные включаемые модули 
In line 1  // eop01cdb.pch будет предкомпилированным заголовком 
In line 2  // stdafx.obj будет содержать предварительно откомпилированные сведения о типе 
In line 6  // TODO: Установите ссылки на любые требующиеся дополнительные заголовки в файле STDAFX.H 
In line 7  // , а не в данном файле 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\guard\eop01cdc\eop01cdc.cpp  for analysis => 
In line 0  //-------------------------------------------------------------------- 
In line 1  //  Моудль       : EOP01CDC.CPP 
In line 2  //  Назначение   : Вспомогательная утилита копирования файла в СЗИ "Страж NT" 
In line 3  //  Язык         : C++ (Microsoft Visual Studio 2013) 
In line 4  //-------------------------------------------------------------------- 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\guard\eop01cdc\eop01lib.cpp  for analysis => 
In line 0  //-------------------------------------------------------------------- 
In line 1  //  Моудль       : EOP01LIB.CPP 
In line 2  //  Назначение   : Библиотека процедур 
In line 3  //  Язык         : C++ (Microsoft Visual Studio 2013) 
In line 4  //-------------------------------------------------------------------- 
In line 65  // нумерация начинается с '0' 
In line 84  	//  inc(i); 
In line 98  	unsigned int i;  // не слушать предупреждения компилятора про несоответствие типов со знаком и без знака 
In line 112  	int i;  // не слушать предупреждения компилятора про несоответствие типов со знаком и без знака 
In line 284  			//printf_1251("%s \n", e.what()); 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\guard\eop01cdc\stdafx.cpp  for analysis => 
In line 0  // stdafx.cpp: исходный файл, содержащий только стандартные включаемые модули 
In line 1  // eop01cdc.pch будет предкомпилированным заголовком 
In line 2  // stdafx.obj будет содержать предварительно откомпилированные сведения о типе 
In line 6  // TODO: Установите ссылки на любые требующиеся дополнительные заголовки в файле STDAFX.H 
In line 7  // , а не в данном файле 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\guard\eop01cdf\eop01cdfg4.cpp  for analysis => 
In line 0  //-------------------------------------------------------------------- 
In line 1  //  Моудль       : EOP01CDFG4.CPP 
In line 2  //  Назначение   : Чтение грифа файла в СЗИ "Страж NT 4.0" 
In line 3  //  Язык         : C++ (Microsoft Visual Studio 2013) 
In line 4  //-------------------------------------------------------------------- 
In line 12  //#include <conio.h> 
In line 77  		//getch(); 
In line 81  	//getch(); 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\guard\eop01cdf\eop01lib.cpp  for analysis => 
In line 0  //-------------------------------------------------------------------- 
In line 1  //  Моудль       : EOP01LIB.CPP 
In line 2  //  Назначение   : Библиотека процедур 
In line 3  //  Язык         : C++ (Microsoft Visual Studio 2013) 
In line 4  //-------------------------------------------------------------------- 
In line 65  // нумерация начинается с '0' 
In line 84  	//  inc(i); 
In line 98  	unsigned int i;  // не слушать предупреждения компилятора про несоответствие типов со знаком и без знака 
In line 112  	int i;  // не слушать предупреждения компилятора про несоответствие типов со знаком и без знака 
In line 284  			//printf_1251("%s \n", e.what()); 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\guard\eop01cdf\stdafx.cpp  for analysis => 
In line 0  // stdafx.cpp: исходный файл, содержащий только стандартные включаемые модули 
In line 1  // eop01cda.pch будет предкомпилированным заголовком 
In line 2  // stdafx.obj будет содержать предварительно откомпилированные сведения о типе 
In line 6  // TODO: Установите ссылки на любые требующиеся дополнительные заголовки в файле STDAFX.H 
In line 7  // , а не в данном файле 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\msdtc_enlist.cpp  for analysis => 
In line 0  /* Module:			msdtc_enlist.cpp 
In line 1   * 
In line 2   * Description: 
In line 3   *		This module contains routines related to 
In line 4   *			the enlistment in MSDTC. 
In line 5   * 
In line 6   *------- 
In line 7   */ 
In line 14  #endif	/* _WIN32_WINNT */ 
In line 19  /*#include <Txdtc.h>*/ 
In line 23  /*#define	_SLEEP_FOR_TEST_*/ 
In line 31  #endif /* WIN32 */ 
In line 41  #endif /* snprintf */ 
In line 42  #endif /* WIN32 */ 
In line 44  /* Define a type for defining a constant string expression */ 
In line 47  #endif /* CSTR */ 
In line 50  HINSTANCE s_hModule;               /* Saved module handle. */ 
In line 52  /*      This is where the Driver Manager attaches to this Driver */ 
In line 59                          s_hModule = (HINSTANCE) hInst;  /* Save for dialog boxes 
In line 60   */ 
In line 66  /* 
In line 67   *	A comment About locks used in this module 
In line 68   * 
In line 69   *	  the locks should be acquired with stronger to weaker order. 
In line 70   * 
In line 71   *	1:ELOCK -- the strongest per IAsyncPG object lock 
In line 72   *	  When the *isolated* or *dtcconn* member of an IAsyncPG object 
In line 73   *	  is changed, this lock should be held. 
In line 74   *	  While an IAsyncPG object accesses a psqlodbc connection,  
In line 75   *	  this lock should be held. 
In line 76   *   
In line 77   *	2:[CONN_CS] -- per psqlodbc connection lock 
In line 78   *	  This lock would be held for a pretty long time while accessing 
In line 79   *	  the psqlodbc connection assigned to an IAsyncPG object. You 
In line 80   *	  can use the connecion safely by holding a ELOCK for the 
In line 81   *	  IAsyncPG object because the assignment is ensured to be 
In line 82   *	  fixed while the ELOCK is held. 
In line 83   *	  
In line 84   *	3:LIFELOCK -- a global lock to ensure the lives of IAsyncPG objects 
In line 85   *	  While this lock is held, IAsyncPG objects would never die. 
In line 86   * 
In line 87   *	4:SLOCK -- the short term per IAsyncPG object lock  
In line 88   *	  When any member of an IAsyncPG object is changed, this lock 
In line 89   *	  should be held. 
In line 90   */ 
In line 92  // #define	_LOCK_DEBUG_ 
In line 96  	CRITICAL_SECTION	life_cs; /* for asdum member of ConnectionClass */ 
In line 112  /* 
In line 113   *	Some helper macros about connection handling. 
In line 114   */ 
In line 138  // 
In line 139  //	€И‰є‚МITransactionResourceAsyncѓIѓuѓWѓFѓNѓg‚Н”C€У‚МѓXѓЊѓbѓh‚©‚з 
In line 140  //	Ћ©—R‚ЙѓAѓNѓZѓX‰В”\‚И‚ж‚¤‚ЙЋА‘•‚·‚йЃBЉeRequest‚МЊ‹‰К‚р•Ф‚·‚Ѕ‚Я‚Й 
In line 141  //	Ћg—p‚·‚йITransactionEnlistmentAsyncѓCѓ“ѓ^Ѓ[ѓtѓFѓCѓX‚а‚»‚М‚ж‚¤‚Й 
In line 142  //	ЋА‘•‚і‚к‚Д‚ў‚йЃi‚ЖЋv‚н‚к‚йЃA‰є‹LЋQЏЖЃj‚М‚ЕЊД‚СЏo‚µ‚ЙCOM‚МѓAѓpЃ[ 
In line 143  //	ѓgѓЃѓ“ѓg‚р€УЋЇ‚·‚й(CoMarshalInterThreadInterfaceInStream/CoGetIn 
In line 144  //	terfaceAndReleaseStream‚рЋg—p‚·‚йЃj•K—v‚Н‚И‚ўЃB 
In line 145  //	‚±‚МDLL“а‚ЕЋg—p‚·‚йITransactionResourceAsync‚ЖITransactionEnlist 
In line 146  //	mentAsync‚МѓCѓ“ѓ^Ѓ[ѓtѓFѓCѓXѓ|ѓCѓ“ѓ^Ѓ[‚Н”C€У‚МѓXѓЊѓbѓh‚©‚з’јђЪЋg—p 
In line 147  //	‚·‚й‚±‚Ж‚Є‚Е‚«‚йЃB 
In line 148  // 
In line 150  // OLE Transactions Standard 
In line 151  // 
In line 152  // OLE Transactions is the Microsoft interface standard for transaction 
In line 153  // management. Applications use OLE Transactions-compliant interfaces to 
In line 154  // initiate, commit, abort, and inquire about transactions. Resource 
In line 155  // managers use OLE Transactions-compliant interfaces to enlist in 
In line 156  // transactions, to propagate transactions to other resource managers, 
In line 157  // to propagate transactions from process to process or from system to 
In line 158  // system, and to participate in the two-phase commit protocol. 
In line 159  // 
In line 160  // The Microsoft DTC system implements most OLE Transactions-compliant 
In line 161  // objects, interfaces, and methods. Resource managers that wish to use 
In line 162  // OLE Transactions must implement some OLE Transactions-compliant objects, 
In line 163  // interfaces, and methods. 
In line 164  // 
In line 165  // The OLE Transactions specification is based on COM but it differs in the 
In line 166  // following respects:  
In line 167  // 
In line 168  // OLE Transactions objects cannot be created using the COM CoCreate APIs.  
In line 169  // References to OLE Transactions objects are always direct. Therefore, 
In line 170  // no proxies or stubs are created for inter-apartment, inter-process, 
In line 171  // or inter-node calls and OLE Transactions references cannot be marshaled 
In line 172  // using standard COM marshaling.  
In line 173  // All references to OLE Transactions objects and their sinks are completely 
In line 174  // free threaded and cannot rely upon COM concurrency control models. 
In line 175  // For example, you cannot pass a reference to an IResourceManagerSink 
In line 176  // interface on a single-threaded apartment and expect the callback to occur 
In line 177  // only on the same single-threaded apartment.  
In line 186  	CRITICAL_SECTION		as_spin; // to make this object Both 
In line 187  	CRITICAL_SECTION		as_exec; // to make this object Both 
In line 201  #endif /* _LOCK_DEBUG_ */ 
In line 247  #endif /* _LOCK_DEBUG_ */ 
In line 269  #endif /* _LOCK_DEBUG_ */ 
In line 272  // 
In line 273  //	invoked from *delete*. 
In line 274  //	When entered ELOCK -> LIFELOCK -> SLOCK are held 
In line 275  //	and they are released. 
In line 276  //	 
In line 312  // 
In line 313  //	acquire/releases SLOCK. 
In line 314  // 
In line 323  // 
In line 324  //	acquire/releases [ELOCK -> LIFELOCK -> ] SLOCK. 
In line 325  // 
In line 354  // 
In line 355  //	Acquire/release SLOCK. 
In line 356  // 
In line 379  // 
In line 380  //	Acquire/releases SLOCK. 
In line 381  // 
In line 410  /* Processing Prepare/Commit Request */ 
In line 418  // 
In line 419  //	Acquire/releases LIFELOCK -> SLOCK. 
In line 420  //	may acquire/release ELOCK. 
In line 421  // 
In line 462  // 
In line 463  //	Acquire/releases [ELOCK -> LIFELOCK -> ] SLOCK. 
In line 464  // 
In line 487  		// PgDtc_connect(dtcconn); may be called in getLockedXAConn 
In line 498  // 
In line 499  //	Acquire/releases [ELOCK -> LIFELOCK -> ] SLOCK. 
In line 500  // 
In line 539  // 
In line 540  //	Acquire/releases [ELOCK -> LIFELOCK -> ] SLOCK. 
In line 541  // 
In line 553  // 
In line 554  //	[when entered] 
In line 555  //	ELOCK is held. 
In line 556  // 
In line 557  //	Acquire/releases SLOCK. 
In line 558  //	Try to acquire CONN_CS also. 
In line 559  // 
In line 560  //	[on exit] 
In line 561  //	ELOCK is kept held. 
In line 562  //	If the return connection != NULL 
In line 563  //		the CONN_CS lock for the connection is held. 
In line 564  //	 
In line 570  		/*  
In line 571  		 * Note that COMMIT/ROLLBACK PREPARED command should be 
In line 572  		 * issued outside the transaction. 
In line 573  		 */ 
In line 587  		SLOCK_ACQUIRE(); // SLOCK was released by separateXAConn() 
In line 599  // 
In line 600  //	Acquire/release ELOCK -> SLOCK. 
In line 601  // 
In line 612  	/*Sleep(2000);*/ 
In line 613  #endif	/* _SLEEP_FOR_TEST_ */ 
In line 699  // 
In line 700  //	Acquire/releses SLOCK 
In line 701  //	 	or 	[ELOCK -> LIFELOCK -> ] SLOCK. 
In line 702  // 
In line 734  // 
In line 735  //	Acquire/release [ELOCK -> ] SLOCK. 
In line 736  // 
In line 763  #endif	/* _SLEEP_FOR_TEST_ */ 
In line 781  		/* 
In line 782  		 * We call here _beginthread not _beginthreadex 
In line 783  		 * so as not to call CloseHandle() to clean up 
In line 784  		 * the thread. 
In line 785  		 */ 
In line 793  // 
In line 794  //	Acquire/release [ELOCK -> ] SLOCK. 
In line 795  // 
In line 817  #endif	/* _SLEEP_FOR_TEST_ */ 
In line 835  		/* 
In line 836  		 * We call here _beginthread not _beginthreadex 
In line 837  		 * so as not to call CloseHandle() to clean up 
In line 838  		 * the thread. 
In line 839  		 */ 
In line 849  // 
In line 850  //	Acquire/release [ELOCK -> ] SLOCK. 
In line 851  // 
In line 894  		/* 
In line 895  		 * We call here _beginthread not _beginthreadex 
In line 896  		 * so as not to call CloseHandle() to clean up 
In line 897  		 * the thread. 
In line 898  		 */ 
In line 1028  /*mylog("dllname=%s dsn=%s\n", GetXaLibName(), conn->connInfo.dsn); res = 0;*/ 
In line 1065  							continue; // retry 
In line 1089  	/* Create an IAsyncPG instance by myself */ 
In line 1090  	/* DLLGetClassObject(GUID_IAsyncPG, IID_ITransactionResourceAsync, (void **) &asdum); */ 
In line 1185  #endif /* _HANDLE_ENLIST_IN_DTC_ */ 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\pgxalib.cpp  for analysis => 
In line 0  /*------ 
In line 1   * Module:			pgxalib.cpp 
In line 2   * 
In line 3   * Description: 
In line 4   *		This module implements XA like routines 
In line 5   *			invoked from MSDTC process. 
In line 6   * 
In line 7   *		xa_open(), xa_close(), xa_commit(), 
In line 8   *		xa_rollback() and xa_recover() 
In line 9   *		are really invoked AFAIC. 
In line 10   *------- 
In line 11   */ 
In line 14  /*#define	_SLEEP_FOR_TEST_*/ 
In line 69  // mylog("Leaving INIT_CRIT\n"); 
In line 243  #endif /* WIN32 */ 
In line 279  	/* my(q)log is unavailable from here */ 
In line 284  HINSTANCE s_hModule;               /* Saved module handle. */ 
In line 285  /*      This is where the Driver Manager attaches to this Driver */ 
In line 295  			s_hModule = (HINSTANCE) hInst;	/* Save for dialog boxes */ 
In line 297  			/* Load the WinSock Library */ 
In line 303  			/* Verify that this is the minimum version of WinSock */ 
In line 330  } /* end of EXTERN_C */ 
In line 332  #endif /* _BUILD_DLL_ */ 
In line 430  // 
In line 431  //	Dummy implementation (not called from MSDTC). 
In line 432  // 
In line 442  // 
In line 443  //	Dummy implementation (not called from MSDTC). 
In line 444  // 
In line 500  // 
In line 501  //	Dummy implementation (not called from MSDTC). 
In line 502  //	Anyway it's almost impossible to implement this routine properly. 
In line 503  //	 
In line 512  #endif	/* _SLEEP_FOR_TEST_ */ 
In line 533  #endif	/* _SLEEP_FOR_TEST_ */ 
In line 624  // 
In line 625  //	I'm not sure if this is invoked from MSDTC 
In line 626  //	Anyway there's nothing to do with it. 
In line 627  // 
In line 636  // 
In line 637  //	I'm not sure if this can be invoked from MSDTC. 
In line 638  // 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab03\Pab03cbk\Pab03cbk.cpp  for analysis => 
In line 0  //-------------------------------------------------------------------- 
In line 1  // Задача           - PAB03 
In line 2  // Модуль           - PAB03CBK.CPP 
In line 3  // Назначение       - Перенос набора данных из входного файла  
In line 4  //                    с эмулируемого диска S370 
In line 5  //                    в выходной файл ПЭВМ 
In line 6  //-------------------------------------------------------------------- 
In line 31  //-------------------------------------------------------------------- 
In line 33  //-------------------------------------------------------------------- 
In line 64  //-------------------------------------------------------------------- 
In line 66  //-------------------------------------------------------------------- 
In line 107  	// открытие файла для перекодировки в DOS, преимущественно LAT 
In line 127  	// открытие файла для перекодировки в DOS, преимущественно RUS 
In line 149  	// открытие файла, эмулирующего диск S370 
In line 163  	// перевод имени файла в верхний регистр 
In line 175  	// читаем начало файла и проверяем что это S370 
In line 209  	// встаем на начало диска по формуле смещения 
In line 214  	// чтение метки тома диска S370 
In line 216  	{ // установка на R1 
In line 241  	// адрес VTOC-а 
In line 247  	// установка на R1 
In line 259  	// адрес окончания VTOC-а 
In line 263  	// поиск заданного набора данных во VTOC-е 
In line 264  	do { // установка на RI 
In line 268  		nzaps++;// проверяем на конец дорожки 
In line 276  			// переход на следующую дорожку 
In line 300  				// проверка имени набора с заданным именем на входе 
In line 305  		// длина ключа и данных 
In line 308  	// блок определения параметров файла 
In line 334  	// обработка экстентов 
In line 344  	{ // поиск и чтение записи формата 3 и обработка экстентов с 4 по 16 
In line 361  		// вычисляем смещение записи DSCB3 
In line 369  		// обработка экстентов 4-16 
In line 383  	// создание выходного файла 
In line 391  	// блок чтения файла 
In line 405  		// установка на RI 
In line 411  		// проверяем на конец дорожки 
In line 421  				goto exit1;  // выход - файл закончился 
In line 422  			// перенос записи с перекодировкой 
In line 426  				// если запиcь перем.длины, то вычисляем длину 
In line 429  				// вывести запись 
In line 431  					buf[j] = tabrus_ea[dors[i + prfor + j]];      // врем   rus 
In line 442  			// установка на RI 
In line 450  		{ // переход в следующий экстент 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab03\Pab03cbk\pab03cbz.cpp  for analysis => 
In line 0  //-------------------------------------------------------------------- 
In line 1  //  Задача       -  PAB03 
In line 2  //  Модуль       -  PAB03CBZ.CPP 
In line 3  //  Назначение   -  Файл процедур для модулей, работающих   
In line 4  //                  с эмулируемыми дисками S370 ЕС5063 
In line 5  //-------------------------------------------------------------------- 
In line 13  //-------------------------------------------------------------------- 
In line 15  //-------------------------------------------------------------------- 
In line 29  //-------------------------------------------------------------------- 
In line 31  //-------------------------------------------------------------------- 
In line 85  //-------------------------------------------------------------------- 
In line 87  //-------------------------------------------------------------------- 
In line 91  	// вычисление смещения относительно начала файла-диска S370 
In line 111  	// установка на R0  и проверка правильности 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab03\Pab03cbk\stdafx.cpp  for analysis => 
In line 0  // stdafx.cpp: исходный файл, содержащий только стандартные включаемые модули 
In line 1  // Pab03cbk.pch будет предкомпилированным заголовком 
In line 2  // stdafx.obj будет содержать предварительно откомпилированные сведения о типе 
In line 6  // TODO. Установите ссылки на любые требующиеся дополнительные заголовки в файле STDAFX.H 
In line 7  // , а не в данном файле 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab03\Pab03cbl\Pab03cbl.cpp  for analysis => 
In line 0  //-------------------------------------------------------------------- 
In line 1  // Задача           - PAB03 
In line 2  // Модуль           - PAB03CBL.CPP 
In line 3  // Назначение       - Перенос набора данных из входного файла ПЭВМ 
In line 4  //                    на эмулируемый диск S370 
In line 5  //-------------------------------------------------------------------- 
In line 37  //-------------------------------------------------------------------- 
In line 39  //-------------------------------------------------------------------- 
In line 72  //-------------------------------------------------------------------- 
In line 74  //-------------------------------------------------------------------- 
In line 131  	// открытие файла для перекодировки в DOS, преимущественно LAT 
In line 151  	// открытие файла для перекодировки в DKOI, преимущественно LAT 
In line 173  	// открытие файла, эмулирующего диск S370 
In line 187  	// перевод имени файла в верхний регистр 
In line 192  	// чтение начала файла и проверка на S370 
In line 229  	// на начало диска по формуле смещения 
In line 234  	// чтение метки тома диска S370 
In line 236  	{ // установка на R1 
In line 247  	// считываем метку тома S370 
In line 265  	// адрес VTOC-а 
In line 271  	// установка на R1 
In line 283  	// адрес окончания VTOC-а 
In line 287  	// адрес первой записи формата 5 
In line 293  	// адрес последненго DSCB формата 1 
In line 299  	// поиск имени набора данных во VTOC-е и первой метки формата 0 
In line 301  	{ // установка на RI 
In line 306  		// проверка на конец дорожки 
In line 308  		{// проверка на конец VTOC-а 
In line 310  				break;  //выход из цикла 
In line 311  			// переход на следующую дорожку 
In line 335  				// проверка имени набора с заданным именем на входе 
In line 342  			if (dors[begs + 44] == 0)        // DSCB0 ? 
In line 344  			{ // адрес записи формата 0 
In line 357  	// Чтение записи формата 5 
In line 370  		// запоминаем запись формата 5 
In line 378  			break;  // выход из цикла : n5 на 1 меньше 
In line 389  	// открытие входного файла 
In line 398  	//if (fileleng == 0 || _eof(handlen)) 
In line 399  	//{ 
In line 400  	//	CloseAll(Code_InFile_Is_Empty); 
In line 401  	//	return Code_InFile_Is_Empty; 
In line 402  	//} 
In line 404  	// расчет длины блока и числа цилиндров 
In line 407  	// поиск подходящего участка, или до трех участков 
In line 408  	kz = 0;           // признак, что нашли 
In line 409  	j = (n5 + 1) * 26;    // cколько проверять 
In line 428  		// пока не нашли участок > чем нужно, выбираем 3 максимальных 
In line 462  		// определение числа ехстентов 
In line 490  			// пересчет адреса начала и числа оставшихся свободных цилиндров 
In line 507  	// блок чтения дорожек с элулируемого диска и перезапись дорожки после заполнения 
In line 509  	tt_otn = 0;   // относительный адрес записанной дорожки 
In line 522  		reads();  // чтение дорожки 
In line 524  		// установка на RI 
In line 530  		dlkl = 0; // блоки без ключей  
In line 533  			// перенос записи с перекодировкой 
In line 542  					break;     // выход из цикла 
In line 544  			// формируем заголовок RI 
In line 568  			// установка на RI 
In line 573  		// перезапись дорожки 
In line 574  		dors[ukazr0 + 21] = nzaps;       // число записей на дорожке 
In line 578  		{  // переход в следующий экстент 
In line 595  			break;   // Выход из цикла по концу входного файла 
In line 601  	{ // запись марки конца файла 
In line 602  		reads();  // чтение дорожки 
In line 604  		// установка на RI 
In line 609  		// формирование заголовка RI 
In line 619  		dors[ukazr0 + 21] = nzaps + 1;       // число записей на дорожке 
In line 620  		// перезапись дорожки 
In line 625  	// формирование и запись DSCB 1 
In line 628  	reads();  // чтение дорожки 
In line 630  	// заполнение имени файла 
In line 634  		dors[k + j] = 0x40;  // в конце пробелы 
In line 641  		dors[k + 53 + j] = 0;    //очистка 
In line 645  	dors[k + 53] = tstruct.tm_year - 100;     //год 
In line 646  	dors[k + 54] = (tstruct.tm_yday + 1) / 256; //день года 
In line 647  	dors[k + 55] = (tstruct.tm_yday + 1) % 256; //день года 
In line 648  	dors[k + 59] = ext;                       // число экстентов 
In line 649  	dors[k + 82] = 0x40;                      // PS 
In line 650  	dors[k + 84] = 0x90;                      // FB 
In line 651  	dors[k + 86] = dlbl / 256;                  //длина блока 
In line 653  	dors[k + 88] = dlrec / 256;                 //длина записи 
In line 655  	dors[k + 93] = 0x80;                      //последний том 
In line 656  	dors[k + 94] = 0xc0;                      //запрос памяти в цилиндрах 
In line 657  	dors[k + 98] = tt_otn / 256;                //указатель на последний блок TTR 
In line 661  	// заполнение экстентов 
In line 665  		dors[i] = 1;                        //тип экстента 
In line 666  		dors[i + 1] = j;                      //номер экстента 
In line 667  		dors[i + 2] = ncyln[j] / 256;           //нижняя граница экстента ССHH 
In line 671  		dors[i + 6] = ncylk[j] / 256;           //верхняя граница экстента ССHH 
In line 677  	// подготовка DSCB5, убираем занятые файлом участки 
In line 679  	ii = (n5 + 1) * 26;           //докуда проверять 
In line 696  		pchar[j] = 0;  // очистка в конце 
In line 698  	// Перезапись DSCB5 
In line 700  	kz = 0;       // признак что посл. запись не DSCB0 
In line 702  	{ // eсли нужное DSCB5 на другой дорожке, то переписываем дорожку, 
In line 703  		// cчитываем дорожку с DSCB5, обрабатываем DSCB5 
In line 711  			reads();  // чтение дорожки 
In line 719  		if (kz == 1)        // это DSCB0 
In line 724  		else                // это DSCB5 
In line 731  			// если блок предпоследний, а следующий пустой, то очищаем адрес 
In line 732  			// следующего DSCB5 
In line 738  				kz = 1; // признак что последняя запись DSCB0 
In line 743  	// eсли DSCB4 на другой дорожке, то переписываем дорожку, 
In line 744  	// cчитываем дорожку с DSCB4, обрабатываем DSCB4 
In line 752  		reads();  // чтение дорожки 
In line 760  	if (kz == 0)     // изменение числа блоков DSCB0 
In line 785  	// запись последней дорожки 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab03\Pab03cbl\pab03cbz.cpp  for analysis => 
In line 0  //-------------------------------------------------------------------- 
In line 1  //  Задача       -  PAB03 
In line 2  //  Модуль       -  PAB03CBZ.CPP 
In line 3  //  Назначение   -  Файл процедур для модулей, работающих   
In line 4  //                  с эмулируемыми дисками S370 ЕС5063 
In line 5  //-------------------------------------------------------------------- 
In line 13  //-------------------------------------------------------------------- 
In line 15  //-------------------------------------------------------------------- 
In line 29  //-------------------------------------------------------------------- 
In line 31  //-------------------------------------------------------------------- 
In line 85  //-------------------------------------------------------------------- 
In line 87  //-------------------------------------------------------------------- 
In line 91  	// вычисление смещения относительно начала файла-диска S370 
In line 111  	// установка на R0  и проверка правильности 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab03\Pab03cbl\stdafx.cpp  for analysis => 
In line 0  // stdafx.cpp: исходный файл, содержащий только стандартные включаемые модули 
In line 1  // Pab03cbl.pch будет предкомпилированным заголовком 
In line 2  // stdafx.obj будет содержать предварительно откомпилированные сведения о типе 
In line 6  // TODO. Установите ссылки на любые требующиеся дополнительные заголовки в файле STDAFX.H 
In line 7  // , а не в данном файле 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04c00\pab04c00.cpp  for analysis => 
In line 0  //------------------------------------------------------- 
In line 1  // Подсистема    : Информационное обеспечение 
In line 2  // Задача        : PAB04 
In line 3  // Модуль        : PAB04C00 
In line 4  // Назначение    : Запуск приложений в СЗИ «Страж NT» с подключением к СУБД PostgreSQL в ОС Astra Linux SE 
In line 5  // Язык          : C++ (Microsoft Visual Studio 2013) 
In line 6  // Программист   : Романов Д. Г. 
In line 7  // Дата          : август 2016 
In line 8  // Изменение     : 02.2020 Романов Д.Г.  
In line 9  //                         Переход на СЗИ "Страж NT" 4. 
In line 10  //------------------------------------------------------- 
In line 12  // pab04c00.cpp: определяет точку входа для приложения. 
In line 13  // 
In line 256  			/*if (MaxGrif != grifnew) 
In line 257  			{ 
In line 258  			Win32Check(TerminateProcess(processinformation.hProcess, 0)); 
In line 259  			throw runtime_error("Ошибка назначения уровня доступа процессу"); 
In line 260  			} 
In line 261  			else*/ 
In line 276  // Обработчик сообщений для окна. 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\pab04\pab04c00\stdafx.cpp  for analysis => 
In line 0  // stdafx.cpp: исходный файл, содержащий только стандартные включаемые модули 
In line 1  // pab04c00.pch будет предкомпилированным заголовком 
In line 2  // stdafx.obj будет содержать предварительно откомпилированные сведения о типе 
In line 6  // TODO: Установите ссылки на любые требующиеся дополнительные заголовки в файле STDAFX.H 
In line 7  // , а не в данном файле 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracConsolesNew\common\Application.cpp  for analysis => 
In line 0  //TODO перенести кусок из PushAddress в Push 
In line 1  //TODO в Change прописать проверку на актуальность 
In line 3  //#include "stdafx.h" 
In line 17  	//path =  _path; 
In line 52  	//Kill(info); 
In line 190  	/* 
In line 191  	for (uchar i=0; i<OptLength; i++){ 
In line 192  		message[2+i] = opt[i]; 
In line 193  	} 
In line 194  	*/ 
In line 201  #endif // _RELEASE_WITH_INFO 
In line 269  	//Kill(info); 
In line 288  /*	info->Opt.OptLength = buffer[cursor]; 
In line 289  	cursor++; 
In line 290  	info->Opt.Opt = new uchar[info->Opt.OptLength]; 
In line 291  	for (uchar i=0; i<info->Opt.OptLength; i++){ 
In line 292  		info->Opt.Opt[i] = buffer[cursor]; 
In line 293  		cursor++; 
In line 294  	} 
In line 295  	*/ 
In line 317  //	if (info->Opt.Opt != NULL) 
In line 318  //		delete info->Opt.Opt; 
In line 319  	//delete info; 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracConsolesNew\GNTPusher\GNTPusher.cpp  for analysis => 
In line 0  // GNTPusher.cpp: определяет точку входа для консольного приложения. 
In line 1  // 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracConsolesNew\GNTPusher\stdafx.cpp  for analysis => 
In line 0  // stdafx.cpp: исходный файл, содержащий только стандартные включаемые модули 
In line 1  // GNTPusher.pch будет предкомпилированным заголовком 
In line 2  // stdafx.obj будет содержать предварительно откомпилированные сведения о типе 
In line 6  // TODO: Установите ссылки на любые требующиеся дополнительные заголовки в файле STDAFX.H 
In line 7  // , а не в данном файле 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracConsolesNew\IctraAdmin\IctraAdmin.cpp  for analysis => 
In line 0  // IctraAdmin.cpp: определяет точку входа для консольного приложения. 
In line 1  // 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracConsolesNew\IctraAdmin\KeyKeeper.cpp  for analysis => 
In line 24  	//key = tmpkey; 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracConsolesNew\IctraAdmin\stdafx.cpp  for analysis => 
In line 0  // stdafx.cpp: исходный файл, содержащий только стандартные включаемые модули 
In line 1  // IctraAdmin.pch будет предкомпилированным заголовком 
In line 2  // stdafx.obj будет содержать предварительно откомпилированные сведения о типе 
In line 6  // TODO: Установите ссылки на любые требующиеся дополнительные заголовки в файле STDAFX.H 
In line 7  // , а не в данном файле 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracConsolesNew\Pusher\Pusher.cpp  for analysis => 
In line 0  // SNPusher.cpp: определяет точку входа для консольного приложения. 
In line 1  // 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracConsolesNew\Pusher\stdafx.cpp  for analysis => 
In line 0  // stdafx.cpp: исходный файл, содержащий только стандартные включаемые модули 
In line 1  // SNPusher.pch будет предкомпилированным заголовком 
In line 2  // stdafx.obj будет содержать предварительно откомпилированные сведения о типе 
In line 6  // TODO: Установите ссылки на любые требующиеся дополнительные заголовки в файле STDAFX.H 
In line 7  // , а не в данном файле 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracConsolesNew\SNPusher\SNPusher.cpp  for analysis => 
In line 0  // SNPusher.cpp: определяет точку входа для консольного приложения. 
In line 1  // 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracConsolesNew\SNPusher\SNUser.cpp  for analysis => 
In line 0  // 
In line 1  // GetMandatInfo.cpp 
In line 2  // 
In line 3  //#include "stdafx.h" 
In line 9  //#include "application.h" 
In line 13  // 
In line 14  //	экземпляры загруженных DLL SnSrvApi.dll и SnResource.dll 
In line 15  // 
In line 19  // 
In line 20  //	адреса используемых функций 
In line 21  // 
In line 33  // 
In line 34  //	Идентификатор сообщения для получения режима работы 
In line 35  // 
In line 38  // 
In line 39  //	Здесь я сохраню номер установленной версии Secret Net 
In line 40  // 
In line 44  // 
In line 45  //	Загрузить библиотеки, получить адреса функций 
In line 46  // 
In line 49  	//------------------------------------------------------------ 
In line 50  	//	Загружаем библиотеки 
In line 51  	//------------------------------------------------------------ 
In line 69  	//------------------------------------------------------------ 
In line 70  	//	Получаем адреса функций 
In line 71  	//------------------------------------------------------------ 
In line 146  // 
In line 147  //	Выгрузить интерфейсные библиотеки Secret Net 
In line 148  // 
In line 159  // 
In line 160  //	Проверка на XP и ниже 
In line 161  // 
In line 172  // 
In line 173  //	Получаем идентификатор сообщения. 
In line 174  //	Идентификатор зависит от номера версии Secret Net 
In line 175  //	и версии операционной системы. 
In line 176  // 
In line 179  	// 
In line 180  	//	для "старых" ОС и версии SN 5.x используется старый идентификатор 
In line 181  	// 
In line 185  	// 
In line 186  	//	во всех остальных случаях (т.е. либо "новая" ОС, либо SN 6 и выше) - новый идентификатор 
In line 187  	// 
In line 192  // 
In line 193  //	Получить версию Secret Net и идентификатор сообщения  
In line 194  //	для получения режима подсистемы полномочного управления доступом  
In line 195  //	(зависит от номера версии и ОС) 
In line 196  // 
In line 202  	// 
In line 203  	//	Версию Secret Net можно узнать, вызвав команду «О системе»  
In line 204  	//	контекстного меню иконки Secret Net на панели трея. 
In line 205  	//	Программно получить версию продукта можно: 
In line 206  	//	- из параметра ClientVersion раздела реестра HKLM\Software\Infosec\Secret Net 5 
In line 207  	//	- из информации о версии файла SnSrvApi.dll (или SnResource.dll) 
In line 208  	//	 
In line 210  	//------------------------------------------------------------------ 
In line 211  	//	Получим версию Secret Net из информации о версии SnSrvApi.dll 
In line 212  	//------------------------------------------------------------------ 
In line 238  	//------------------------------------------------------------------ 
In line 239  	//	Сохраним полученные данные об установленной версии Secret Net для 
In line 240  	//	последующего создания сессии с ядром. 
In line 241  	//	Поле ustVersionMajor структуры SNCC_VERSIONINFO обязательно должно  
In line 242  	//	быть инициализировано. 
In line 243  	//------------------------------------------------------------------ 
In line 248  	//------------------------------------------------------------------ 
In line 249  	//	Получаем идентификатор сообщения для получения 
In line 250  	//	режима подсистемы (идентификатор зависит от номера версии 
In line 251  	//	Secret Net  и версии операционной системы) 
In line 252  	//------------------------------------------------------------------ 
In line 293  		hSession,		//	дескриптор сессии с ядром 
In line 294  		NULL,			//	использовать идентификатор сессии текущего пользователя 
In line 295  		SNUI_SESSION,	//	получаю данные о конфиденциальности сессии пользователя 
In line 296  		&pInformation	//	собственно данные  
In line 305  		// освобождаем буфер 
In line 316  			hSession	//	дескриптор сессии с ядром 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\ALFA.CON\IctracConsolesNew\SNPusher\stdafx.cpp  for analysis => 
In line 0  // stdafx.cpp: исходный файл, содержащий только стандартные включаемые модули 
In line 1  // SNPusher.pch будет предкомпилированным заголовком 
In line 2  // stdafx.obj будет содержать предварительно откомпилированные сведения о типе 
In line 6  // TODO: Установите ссылки на любые требующиеся дополнительные заголовки в файле STDAFX.H 
In line 7  // , а не в данном файле 
==================================================================================================================
Search 5 file with extension *.sql
==================================================================================================================
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\sql\oracle_catalog.sql  for analysis => 
In line 0  --======================================================================== 
In line 1  -- Задача      :  
In line 2  -- Программа   :  
In line 3  -- Назначение  : Создание объектов словаря данных СУБД Oracle в СУБД PostgreSQL 
In line 4  -- Программист : Романов Д.Г. 
In line 5  -- Дата        : 12.2015 
In line 6  -- Изменения   : 11.07.2022 Адаптировано под PostgreSQL 9.6 
In line 7  --======================================================================== 
In line 8  -- postgresql 9.6 
In line 16  -- дать права на каталог пользователю postgres!! 
In line 17  --windows 
In line 18  --CREATE TABLESPACE sys OWNER sys LOCATION ’D:\PostgreSQL\sys’; 
In line 19  --Astra Linux 
In line 23  --select to_char(current_date,'DD.MM.YYYY'),current_date; 
In line 24  --select * FROM pg_user; 
In line 25  --SELECT spcname, spcowner, spclocation, spcacl, spcoptions 
In line 26  --  FROM pg_tablespace; 
In line 41  --grant select on SYS.USER_USERS to PUBLIC; 
In line 57  --grant select on SYS.ALL_USERS to PUBLIC; 
In line 73  --grant select on SYS.DBA_USERS to PUBLIC; 
In line 85  --grant select on SYS.DBA_ROLES to PUBLIC; 
In line 99  --grant select on SYS.DBA_CATALOG to PUBLIC; 
In line 112  --grant select on SYS.ALL_CATALOG to PUBLIC; 
In line 124  --create view sys.dba_sys_privs (grantee,privilege,admin_option) as 
In line 125  --... 
In line 132  --grant select on SYS.dba_tab_privs to PUBLIC; 
In line 157  cast(0 as integer),    /* DEFAULT_LENGTH */ 
In line 158  cast(null as integer), /* DATA_DEFAULT */ 
In line 159  cast(0 as integer),    /* NUM_DISTINCT */ 
In line 160  cast('' as text),      /* LOW_VALUE */ 
In line 161  cast('' as text),      /* HIGH_VALUE */ 
In line 162  cast(0 as integer)     /* DENSITY */ 
In line 165  --grant select on SYS.DBA_TAB_COLUMNS to PUBLIC; 
In line 190  cast(0 as integer),    /* DEFAULT_LENGTH */ 
In line 191  cast(null as integer), /* DATA_DEFAULT */ 
In line 192  cast(0 as integer),    /* NUM_DISTINCT */ 
In line 193  cast('' as text),      /* LOW_VALUE */ 
In line 194  cast('' as text),      /* HIGH_VALUE */ 
In line 195  cast(0 as integer)     /* DENSITY */ 
In line 198  --grant select on SYS.ALL_TAB_COLUMNS to PUBLIC; 
In line 207  --grant select on SYS.dba_role_privs to PUBLIC; 
In line 224  --grant select on SYS.dba_col_privs to PUBLIC; 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\sql\pab04qaa.sql  for analysis => 
In line 0  --======================================================================== 
In line 1  -- Задача      : PАВ04 
In line 2  -- Программа   : pab04qaa 
In line 3  -- Назначение  : Создание объектов и ролей задачи PAB04 в СУБД PostgreSQL.  
In line 4  -- Программист : Романов Д.Г. 
In line 5  -- Дата        : 12.2015 
In line 6  -- Изменения   : 04.2019 Кагарманов Д.А.  
In line 7  --             :         Создана роль pab04b для пакетного режима  
In line 8  --             : 09.2019 Романов Д.Г.  
In line 9  --             :         Добавлено создание пользователя UPAB48 
In line 10  --               11.07.2022 Адаптировано под PostgreSQL 9.6 
In line 11  --======================================================================== 
In line 12  -- postgresql 9.6 
In line 19  -- дать права на каталог пользователю postgres!! 
In line 54  -- Нельзя сбросить флаг MAC CCR у объекта, не содержащего меток на строках 
In line 55  -- MAC CCR   ON TABLE pab04.pab04e01 IS OFF;  
In line 120  -- аутентификация PAM 
In line 122  -- Дать пользователю u_pab04qda привилегии parsec_cap_chmac, parsec_cap_ignmaclvl в Astra Linux 
In line 123  -- Пользователя u_pab04qda заблокировать в Astra Linux 
In line 125  grant pab04z to u_pab04qda; --даем роль владельцу функции 
In line 127  --04.2019 
In line 131  GRANT USAGE   ON SCHEMA pab04 TO pab04b; -- иначе остальные привилегии смысла не имеют 
In line 142  -- Создание пользователя UPAB48 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\odbc-drop.sql  for analysis => 
In file odbc-drop.sql not detected Сomment
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\odbc.sql  for analysis => 
In line 0  -- PostgreSQL catalog extensions for ODBC compatibility (odbc.sql) 
In line 2  -- ODBC scalar functions are described here: 
In line 3  -- Microsoft ODBC Programmer's Reference, Appendix E: Scalar Functions 
In line 4  -- http://msdn.microsoft.com/library/ms711813.aspx 
In line 6  -- Note:  If we format this file consistently we can automatically 
In line 7  -- generate a corresponding "drop script".  Start "CREATE" in the first 
In line 8  -- column, and keep everything up to and including the argument list on 
In line 9  -- the same line.  See also the makefile rule. 
In line 12  -- String Functions 
In line 13  -- ++++++++++++++++ 
In line 14  -- 
In line 15  -- Built-in: ASCII, BIT_LENGTH, CHAR_LENGTH, CHARACTER_LENGTH, LTRIM, 
In line 16  --           OCTET_LENGTH, POSITION, REPEAT, RTRIM, SUBSTRING 
In line 17  -- Missing: DIFFERENCE, REPLACE, SOUNDEX, LENGTH (ODBC sense) 
In line 18  -- Keyword problems: CHAR 
In line 21  -- CHAR(code) 
In line 27  -- CONCAT(string1, string2) 
In line 33  -- INSERT(string1, start, len, string2) 
In line 39  -- LCASE(string) 
In line 45  -- LEFT(string, count) 
In line 51  -- LOCATE(substring, string[, start]) 
In line 60  -- RIGHT(string, count) 
In line 66  -- SPACE(count) 
In line 72  -- UCASE(string) 
In line 78  -- Numeric Functions 
In line 79  -- +++++++++++++++++ 
In line 80  -- 
In line 81  -- Built-in: ABS, ACOS, ASIN, ATAN, ATAN2, COS, COT, DEGRESS, EXP, 
In line 82  --           FLOOR, MOD, PI, RADIANS, ROUND, SIGN, SIN, SQRT, TAN 
In line 83  -- Missing: LOG (ODBC sense) 
In line 86  -- CEILING(num) 
In line 92  -- LOG10(num) 
In line 101  -- POWER(num, num) 
In line 112  -- RAND([seed]) 
In line 122  -- TRUNCATE(num, places) 
In line 128  -- Time, Date, and Interval Functions 
In line 129  -- ++++++++++++++++++++++++++++++++++ 
In line 130  -- 
In line 131  -- Built-in: CURRENT_DATE, CURRENT_TIME, CURRENT_TIMESTAMP, EXTRACT, NOW 
In line 132  -- Missing: none 
In line 188  -- The first argument is an integer constant denoting the units 
In line 189  -- of the second argument. Until we know the actual values, we 
In line 190  -- cannot implement these. - thomas 2000-04-11 
In line 211  -- System Functions 
In line 212  -- ++++++++++++++++ 
In line 213  -- 
In line 214  -- Built-in: USER 
In line 215  -- Missing: DATABASE, IFNULL 
File opened C:\Users\Fuzzer1\Desktop\source test\pab57\module\odbc\psqlodbc_09_03_0200-source_guard4\test\sql\sampletables.sql  for analysis => 
In line 0  -- This file creates some tables to be used in the tests 

